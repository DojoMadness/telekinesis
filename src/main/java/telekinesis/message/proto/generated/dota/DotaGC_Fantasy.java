// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_fantasy.proto

package telekinesis.message.proto.generated.dota;

public final class DotaGC_Fantasy {
  private DotaGC_Fantasy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ETournamentGameState}
   */
  public enum ETournamentGameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentGameState_Unknown = 0;</code>
     */
    k_ETournamentGameState_Unknown(0, 0),
    /**
     * <code>k_ETournamentGameState_Scheduled = 1;</code>
     */
    k_ETournamentGameState_Scheduled(1, 1),
    /**
     * <code>k_ETournamentGameState_WaitingForLobbyToStart = 2;</code>
     */
    k_ETournamentGameState_WaitingForLobbyToStart(2, 2),
    /**
     * <code>k_ETournamentGameState_Active = 3;</code>
     */
    k_ETournamentGameState_Active(3, 3),
    /**
     * <code>k_ETournamentGameState_DireVictory = 4;</code>
     */
    k_ETournamentGameState_DireVictory(4, 4),
    /**
     * <code>k_ETournamentGameState_RadVictory = 5;</code>
     */
    k_ETournamentGameState_RadVictory(5, 5),
    /**
     * <code>k_ETournamentGameState_Canceled = 6;</code>
     */
    k_ETournamentGameState_Canceled(6, 6),
    /**
     * <code>k_ETournamentTeamState_NotNeeded = 7;</code>
     */
    k_ETournamentTeamState_NotNeeded(7, 7),
    ;

    /**
     * <code>k_ETournamentGameState_Unknown = 0;</code>
     */
    public static final int k_ETournamentGameState_Unknown_VALUE = 0;
    /**
     * <code>k_ETournamentGameState_Scheduled = 1;</code>
     */
    public static final int k_ETournamentGameState_Scheduled_VALUE = 1;
    /**
     * <code>k_ETournamentGameState_WaitingForLobbyToStart = 2;</code>
     */
    public static final int k_ETournamentGameState_WaitingForLobbyToStart_VALUE = 2;
    /**
     * <code>k_ETournamentGameState_Active = 3;</code>
     */
    public static final int k_ETournamentGameState_Active_VALUE = 3;
    /**
     * <code>k_ETournamentGameState_DireVictory = 4;</code>
     */
    public static final int k_ETournamentGameState_DireVictory_VALUE = 4;
    /**
     * <code>k_ETournamentGameState_RadVictory = 5;</code>
     */
    public static final int k_ETournamentGameState_RadVictory_VALUE = 5;
    /**
     * <code>k_ETournamentGameState_Canceled = 6;</code>
     */
    public static final int k_ETournamentGameState_Canceled_VALUE = 6;
    /**
     * <code>k_ETournamentTeamState_NotNeeded = 7;</code>
     */
    public static final int k_ETournamentTeamState_NotNeeded_VALUE = 7;


    public final int getNumber() { return value; }

    public static ETournamentGameState valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentGameState_Unknown;
        case 1: return k_ETournamentGameState_Scheduled;
        case 2: return k_ETournamentGameState_WaitingForLobbyToStart;
        case 3: return k_ETournamentGameState_Active;
        case 4: return k_ETournamentGameState_DireVictory;
        case 5: return k_ETournamentGameState_RadVictory;
        case 6: return k_ETournamentGameState_Canceled;
        case 7: return k_ETournamentTeamState_NotNeeded;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentGameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentGameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentGameState>() {
            public ETournamentGameState findValueByNumber(int number) {
              return ETournamentGameState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.getDescriptor().getEnumTypes().get(0);
    }

    private static final ETournamentGameState[] VALUES = values();

    public static ETournamentGameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentGameState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentGameState)
  }

  /**
   * Protobuf enum {@code ETournamentTeamState}
   */
  public enum ETournamentTeamState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentTeamState_Unknown = 0;</code>
     */
    k_ETournamentTeamState_Unknown(0, 0),
    /**
     * <code>k_ETournamentTeamState_Node1 = 1;</code>
     */
    k_ETournamentTeamState_Node1(1, 1),
    /**
     * <code>k_ETournamentTeamState_NodeMax = 1024;</code>
     */
    k_ETournamentTeamState_NodeMax(2, 1024),
    /**
     * <code>k_ETournamentTeamState_Eliminated = 14003;</code>
     */
    k_ETournamentTeamState_Eliminated(3, 14003),
    /**
     * <code>k_ETournamentTeamState_Forfeited = 14004;</code>
     */
    k_ETournamentTeamState_Forfeited(4, 14004),
    /**
     * <code>k_ETournamentTeamState_Finished1st = 15001;</code>
     */
    k_ETournamentTeamState_Finished1st(5, 15001),
    /**
     * <code>k_ETournamentTeamState_Finished2nd = 15002;</code>
     */
    k_ETournamentTeamState_Finished2nd(6, 15002),
    /**
     * <code>k_ETournamentTeamState_Finished3rd = 15003;</code>
     */
    k_ETournamentTeamState_Finished3rd(7, 15003),
    /**
     * <code>k_ETournamentTeamState_Finished4th = 15004;</code>
     */
    k_ETournamentTeamState_Finished4th(8, 15004),
    /**
     * <code>k_ETournamentTeamState_Finished5th = 15005;</code>
     */
    k_ETournamentTeamState_Finished5th(9, 15005),
    /**
     * <code>k_ETournamentTeamState_Finished6th = 15006;</code>
     */
    k_ETournamentTeamState_Finished6th(10, 15006),
    /**
     * <code>k_ETournamentTeamState_Finished7th = 15007;</code>
     */
    k_ETournamentTeamState_Finished7th(11, 15007),
    /**
     * <code>k_ETournamentTeamState_Finished8th = 15008;</code>
     */
    k_ETournamentTeamState_Finished8th(12, 15008),
    /**
     * <code>k_ETournamentTeamState_Finished9th = 15009;</code>
     */
    k_ETournamentTeamState_Finished9th(13, 15009),
    /**
     * <code>k_ETournamentTeamState_Finished10th = 15010;</code>
     */
    k_ETournamentTeamState_Finished10th(14, 15010),
    /**
     * <code>k_ETournamentTeamState_Finished11th = 15011;</code>
     */
    k_ETournamentTeamState_Finished11th(15, 15011),
    /**
     * <code>k_ETournamentTeamState_Finished12th = 15012;</code>
     */
    k_ETournamentTeamState_Finished12th(16, 15012),
    /**
     * <code>k_ETournamentTeamState_Finished13th = 15013;</code>
     */
    k_ETournamentTeamState_Finished13th(17, 15013),
    /**
     * <code>k_ETournamentTeamState_Finished14th = 15014;</code>
     */
    k_ETournamentTeamState_Finished14th(18, 15014),
    /**
     * <code>k_ETournamentTeamState_Finished15th = 15015;</code>
     */
    k_ETournamentTeamState_Finished15th(19, 15015),
    /**
     * <code>k_ETournamentTeamState_Finished16th = 15016;</code>
     */
    k_ETournamentTeamState_Finished16th(20, 15016),
    ;

    /**
     * <code>k_ETournamentTeamState_Unknown = 0;</code>
     */
    public static final int k_ETournamentTeamState_Unknown_VALUE = 0;
    /**
     * <code>k_ETournamentTeamState_Node1 = 1;</code>
     */
    public static final int k_ETournamentTeamState_Node1_VALUE = 1;
    /**
     * <code>k_ETournamentTeamState_NodeMax = 1024;</code>
     */
    public static final int k_ETournamentTeamState_NodeMax_VALUE = 1024;
    /**
     * <code>k_ETournamentTeamState_Eliminated = 14003;</code>
     */
    public static final int k_ETournamentTeamState_Eliminated_VALUE = 14003;
    /**
     * <code>k_ETournamentTeamState_Forfeited = 14004;</code>
     */
    public static final int k_ETournamentTeamState_Forfeited_VALUE = 14004;
    /**
     * <code>k_ETournamentTeamState_Finished1st = 15001;</code>
     */
    public static final int k_ETournamentTeamState_Finished1st_VALUE = 15001;
    /**
     * <code>k_ETournamentTeamState_Finished2nd = 15002;</code>
     */
    public static final int k_ETournamentTeamState_Finished2nd_VALUE = 15002;
    /**
     * <code>k_ETournamentTeamState_Finished3rd = 15003;</code>
     */
    public static final int k_ETournamentTeamState_Finished3rd_VALUE = 15003;
    /**
     * <code>k_ETournamentTeamState_Finished4th = 15004;</code>
     */
    public static final int k_ETournamentTeamState_Finished4th_VALUE = 15004;
    /**
     * <code>k_ETournamentTeamState_Finished5th = 15005;</code>
     */
    public static final int k_ETournamentTeamState_Finished5th_VALUE = 15005;
    /**
     * <code>k_ETournamentTeamState_Finished6th = 15006;</code>
     */
    public static final int k_ETournamentTeamState_Finished6th_VALUE = 15006;
    /**
     * <code>k_ETournamentTeamState_Finished7th = 15007;</code>
     */
    public static final int k_ETournamentTeamState_Finished7th_VALUE = 15007;
    /**
     * <code>k_ETournamentTeamState_Finished8th = 15008;</code>
     */
    public static final int k_ETournamentTeamState_Finished8th_VALUE = 15008;
    /**
     * <code>k_ETournamentTeamState_Finished9th = 15009;</code>
     */
    public static final int k_ETournamentTeamState_Finished9th_VALUE = 15009;
    /**
     * <code>k_ETournamentTeamState_Finished10th = 15010;</code>
     */
    public static final int k_ETournamentTeamState_Finished10th_VALUE = 15010;
    /**
     * <code>k_ETournamentTeamState_Finished11th = 15011;</code>
     */
    public static final int k_ETournamentTeamState_Finished11th_VALUE = 15011;
    /**
     * <code>k_ETournamentTeamState_Finished12th = 15012;</code>
     */
    public static final int k_ETournamentTeamState_Finished12th_VALUE = 15012;
    /**
     * <code>k_ETournamentTeamState_Finished13th = 15013;</code>
     */
    public static final int k_ETournamentTeamState_Finished13th_VALUE = 15013;
    /**
     * <code>k_ETournamentTeamState_Finished14th = 15014;</code>
     */
    public static final int k_ETournamentTeamState_Finished14th_VALUE = 15014;
    /**
     * <code>k_ETournamentTeamState_Finished15th = 15015;</code>
     */
    public static final int k_ETournamentTeamState_Finished15th_VALUE = 15015;
    /**
     * <code>k_ETournamentTeamState_Finished16th = 15016;</code>
     */
    public static final int k_ETournamentTeamState_Finished16th_VALUE = 15016;


    public final int getNumber() { return value; }

    public static ETournamentTeamState valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentTeamState_Unknown;
        case 1: return k_ETournamentTeamState_Node1;
        case 1024: return k_ETournamentTeamState_NodeMax;
        case 14003: return k_ETournamentTeamState_Eliminated;
        case 14004: return k_ETournamentTeamState_Forfeited;
        case 15001: return k_ETournamentTeamState_Finished1st;
        case 15002: return k_ETournamentTeamState_Finished2nd;
        case 15003: return k_ETournamentTeamState_Finished3rd;
        case 15004: return k_ETournamentTeamState_Finished4th;
        case 15005: return k_ETournamentTeamState_Finished5th;
        case 15006: return k_ETournamentTeamState_Finished6th;
        case 15007: return k_ETournamentTeamState_Finished7th;
        case 15008: return k_ETournamentTeamState_Finished8th;
        case 15009: return k_ETournamentTeamState_Finished9th;
        case 15010: return k_ETournamentTeamState_Finished10th;
        case 15011: return k_ETournamentTeamState_Finished11th;
        case 15012: return k_ETournamentTeamState_Finished12th;
        case 15013: return k_ETournamentTeamState_Finished13th;
        case 15014: return k_ETournamentTeamState_Finished14th;
        case 15015: return k_ETournamentTeamState_Finished15th;
        case 15016: return k_ETournamentTeamState_Finished16th;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentTeamState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentTeamState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentTeamState>() {
            public ETournamentTeamState findValueByNumber(int number) {
              return ETournamentTeamState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.getDescriptor().getEnumTypes().get(1);
    }

    private static final ETournamentTeamState[] VALUES = values();

    public static ETournamentTeamState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentTeamState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentTeamState)
  }

  /**
   * Protobuf enum {@code ETournamentState}
   */
  public enum ETournamentState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentState_Unknown = 0;</code>
     */
    k_ETournamentState_Unknown(0, 0),
    /**
     * <code>k_ETournamentState_Setup = 1;</code>
     */
    k_ETournamentState_Setup(1, 1),
    /**
     * <code>k_ETournamentState_Scheduled = 2;</code>
     */
    k_ETournamentState_Scheduled(2, 2),
    /**
     * <code>k_ETournamentState_InProgress = 3;</code>
     */
    k_ETournamentState_InProgress(3, 3),
    /**
     * <code>k_ETournamentState_Completed = 4;</code>
     */
    k_ETournamentState_Completed(4, 4),
    /**
     * <code>k_ETournamentState_Canceled = 5;</code>
     */
    k_ETournamentState_Canceled(5, 5),
    ;

    /**
     * <code>k_ETournamentState_Unknown = 0;</code>
     */
    public static final int k_ETournamentState_Unknown_VALUE = 0;
    /**
     * <code>k_ETournamentState_Setup = 1;</code>
     */
    public static final int k_ETournamentState_Setup_VALUE = 1;
    /**
     * <code>k_ETournamentState_Scheduled = 2;</code>
     */
    public static final int k_ETournamentState_Scheduled_VALUE = 2;
    /**
     * <code>k_ETournamentState_InProgress = 3;</code>
     */
    public static final int k_ETournamentState_InProgress_VALUE = 3;
    /**
     * <code>k_ETournamentState_Completed = 4;</code>
     */
    public static final int k_ETournamentState_Completed_VALUE = 4;
    /**
     * <code>k_ETournamentState_Canceled = 5;</code>
     */
    public static final int k_ETournamentState_Canceled_VALUE = 5;


    public final int getNumber() { return value; }

    public static ETournamentState valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentState_Unknown;
        case 1: return k_ETournamentState_Setup;
        case 2: return k_ETournamentState_Scheduled;
        case 3: return k_ETournamentState_InProgress;
        case 4: return k_ETournamentState_Completed;
        case 5: return k_ETournamentState_Canceled;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentState>() {
            public ETournamentState findValueByNumber(int number) {
              return ETournamentState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.getDescriptor().getEnumTypes().get(2);
    }

    private static final ETournamentState[] VALUES = values();

    public static ETournamentState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentState)
  }

  /**
   * Protobuf enum {@code ETournamentNodeState}
   */
  public enum ETournamentNodeState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentNodeState_Unknown = 0;</code>
     */
    k_ETournamentNodeState_Unknown(0, 0),
    /**
     * <code>k_ETournamentNodeState_TeamsNotYetAssigned = 1;</code>
     */
    k_ETournamentNodeState_TeamsNotYetAssigned(1, 1),
    /**
     * <code>k_ETournamentNodeState_InBetweenGames = 2;</code>
     */
    k_ETournamentNodeState_InBetweenGames(2, 2),
    /**
     * <code>k_ETournamentNodeState_GameInProgress = 3;</code>
     */
    k_ETournamentNodeState_GameInProgress(3, 3),
    /**
     * <code>k_ETournamentNodeState_A_Won = 4;</code>
     */
    k_ETournamentNodeState_A_Won(4, 4),
    /**
     * <code>k_ETournamentNodeState_B_Won = 5;</code>
     */
    k_ETournamentNodeState_B_Won(5, 5),
    /**
     * <code>k_ETournamentNodeState_Canceled = 6;</code>
     */
    k_ETournamentNodeState_Canceled(6, 6),
    ;

    /**
     * <code>k_ETournamentNodeState_Unknown = 0;</code>
     */
    public static final int k_ETournamentNodeState_Unknown_VALUE = 0;
    /**
     * <code>k_ETournamentNodeState_TeamsNotYetAssigned = 1;</code>
     */
    public static final int k_ETournamentNodeState_TeamsNotYetAssigned_VALUE = 1;
    /**
     * <code>k_ETournamentNodeState_InBetweenGames = 2;</code>
     */
    public static final int k_ETournamentNodeState_InBetweenGames_VALUE = 2;
    /**
     * <code>k_ETournamentNodeState_GameInProgress = 3;</code>
     */
    public static final int k_ETournamentNodeState_GameInProgress_VALUE = 3;
    /**
     * <code>k_ETournamentNodeState_A_Won = 4;</code>
     */
    public static final int k_ETournamentNodeState_A_Won_VALUE = 4;
    /**
     * <code>k_ETournamentNodeState_B_Won = 5;</code>
     */
    public static final int k_ETournamentNodeState_B_Won_VALUE = 5;
    /**
     * <code>k_ETournamentNodeState_Canceled = 6;</code>
     */
    public static final int k_ETournamentNodeState_Canceled_VALUE = 6;


    public final int getNumber() { return value; }

    public static ETournamentNodeState valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentNodeState_Unknown;
        case 1: return k_ETournamentNodeState_TeamsNotYetAssigned;
        case 2: return k_ETournamentNodeState_InBetweenGames;
        case 3: return k_ETournamentNodeState_GameInProgress;
        case 4: return k_ETournamentNodeState_A_Won;
        case 5: return k_ETournamentNodeState_B_Won;
        case 6: return k_ETournamentNodeState_Canceled;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentNodeState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentNodeState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentNodeState>() {
            public ETournamentNodeState findValueByNumber(int number) {
              return ETournamentNodeState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.getDescriptor().getEnumTypes().get(3);
    }

    private static final ETournamentNodeState[] VALUES = values();

    public static ETournamentNodeState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentNodeState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentNodeState)
  }

  /**
   * Protobuf enum {@code DOTA_2013PassportSelectionIndices}
   */
  public enum DOTA_2013PassportSelectionIndices
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_0(0, 0),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_1(1, 1),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_2(2, 2),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_3(3, 3),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_4(4, 4),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_5(5, 5),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_6(6, 6),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_7(7, 7),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_8(8, 8),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_9(9, 9),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    PP13_SEL_QUALPRED_WEST_0(10, 10),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    PP13_SEL_QUALPRED_WEST_1(11, 11),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    PP13_SEL_QUALPRED_WEST_2(12, 12),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    PP13_SEL_QUALPRED_WEST_3(13, 13),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    PP13_SEL_QUALPRED_WEST_4(14, 14),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    PP13_SEL_QUALPRED_WEST_5(15, 15),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    PP13_SEL_QUALPRED_WEST_6(16, 16),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    PP13_SEL_QUALPRED_WEST_7(17, 17),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    PP13_SEL_QUALPRED_WEST_8(18, 18),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    PP13_SEL_QUALPRED_WEST_9(19, 19),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    PP13_SEL_QUALPRED_WEST_10(20, 20),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    PP13_SEL_QUALPRED_WEST_11(21, 21),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    PP13_SEL_QUALPRED_WEST_12(22, 22),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    PP13_SEL_QUALPRED_WEST_13(23, 23),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    PP13_SEL_QUALPRED_WEST_14(24, 24),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    PP13_SEL_QUALPRED_EAST_0(25, 25),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    PP13_SEL_QUALPRED_EAST_1(26, 26),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    PP13_SEL_QUALPRED_EAST_2(27, 27),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    PP13_SEL_QUALPRED_EAST_3(28, 28),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    PP13_SEL_QUALPRED_EAST_4(29, 29),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    PP13_SEL_QUALPRED_EAST_5(30, 30),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    PP13_SEL_QUALPRED_EAST_6(31, 31),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    PP13_SEL_QUALPRED_EAST_7(32, 32),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    PP13_SEL_QUALPRED_EAST_8(33, 33),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    PP13_SEL_QUALPRED_EAST_9(34, 34),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    PP13_SEL_QUALPRED_EAST_10(35, 35),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    PP13_SEL_QUALPRED_EAST_11(36, 36),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    PP13_SEL_QUALPRED_EAST_12(37, 37),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    PP13_SEL_QUALPRED_EAST_13(38, 38),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    PP13_SEL_QUALPRED_EAST_14(39, 39),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    PP13_SEL_TEAMCUP_TEAM(40, 40),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER(41, 41),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    PP13_SEL_TEAMCUP_TEAM_LOCK(42, 42),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER_LOCK(43, 43),
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    PP13_SEL_EVENTPRED_0(44, 44),
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    PP13_SEL_EVENTPRED_1(45, 45),
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    PP13_SEL_EVENTPRED_2(46, 46),
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    PP13_SEL_EVENTPRED_3(47, 47),
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    PP13_SEL_EVENTPRED_4(48, 48),
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    PP13_SEL_EVENTPRED_5(49, 49),
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    PP13_SEL_EVENTPRED_6(50, 50),
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    PP13_SEL_EVENTPRED_7(51, 51),
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    PP13_SEL_EVENTPRED_8(52, 52),
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    PP13_SEL_EVENTPRED_9(53, 53),
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    PP13_SEL_EVENTPRED_10(54, 54),
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    PP13_SEL_EVENTPRED_11(55, 55),
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    PP13_SEL_EVENTPRED_12(56, 56),
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    PP13_SEL_EVENTPRED_13(57, 57),
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    PP13_SEL_EVENTPRED_14(58, 58),
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    PP13_SEL_EVENTPRED_15(59, 59),
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    PP13_SEL_EVENTPRED_16(60, 60),
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    PP13_SEL_EVENTPRED_17(61, 61),
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    PP13_SEL_EVENTPRED_18(62, 62),
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    PP13_SEL_EVENTPRED_19(63, 63),
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    PP13_SEL_EVENTPRED_20(64, 64),
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    PP13_SEL_EVENTPRED_21(65, 65),
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    PP13_SEL_EVENTPRED_22(66, 66),
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    PP13_SEL_EVENTPRED_23(67, 67),
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    PP13_SEL_EVENTPRED_24(68, 68),
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    PP13_SEL_EVENTPRED_25(69, 69),
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    PP13_SEL_EVENTPRED_26(70, 70),
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    PP13_SEL_EVENTPRED_27(71, 71),
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    PP13_SEL_EVENTPRED_28(72, 72),
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    PP13_SEL_EVENTPRED_29(73, 73),
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    PP13_SEL_EVENTPRED_30(74, 74),
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    PP13_SEL_EVENTPRED_31(75, 75),
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    PP13_SEL_EVENTPRED_32(76, 76),
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    PP13_SEL_EVENTPRED_33(77, 77),
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    PP13_SEL_EVENTPRED_34(78, 78),
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    PP13_SEL_EVENTPRED_35(79, 79),
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    PP13_SEL_EVENTPRED_36(80, 80),
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    PP13_SEL_EVENTPRED_37(81, 81),
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    PP13_SEL_EVENTPRED_38(82, 82),
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    PP13_SEL_EVENTPRED_39(83, 83),
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    PP13_SEL_EVENTPRED_40(84, 84),
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    PP13_SEL_EVENTPRED_41(85, 85),
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    PP13_SEL_EVENTPRED_42(86, 86),
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    PP13_SEL_EVENTPRED_43(87, 87),
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    PP13_SEL_SOLO_0(88, 88),
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    PP13_SEL_SOLO_1(89, 89),
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    PP13_SEL_SOLO_2(90, 90),
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    PP13_SEL_SOLO_3(91, 91),
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    PP13_SEL_SOLO_4(92, 92),
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    PP13_SEL_SOLO_5(93, 93),
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    PP13_SEL_SOLO_6(94, 94),
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    PP13_SEL_SOLO_7(95, 95),
    ;

    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_0_VALUE = 0;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_1_VALUE = 1;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_2_VALUE = 2;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_3_VALUE = 3;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_4_VALUE = 4;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_5_VALUE = 5;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_6_VALUE = 6;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_7_VALUE = 7;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_8_VALUE = 8;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_9_VALUE = 9;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_0_VALUE = 10;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_1_VALUE = 11;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_2_VALUE = 12;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_3_VALUE = 13;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_4_VALUE = 14;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_5_VALUE = 15;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_6_VALUE = 16;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_7_VALUE = 17;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_8_VALUE = 18;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_9_VALUE = 19;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_10_VALUE = 20;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_11_VALUE = 21;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_12_VALUE = 22;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_13_VALUE = 23;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_14_VALUE = 24;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_0_VALUE = 25;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_1_VALUE = 26;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_2_VALUE = 27;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_3_VALUE = 28;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_4_VALUE = 29;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_5_VALUE = 30;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_6_VALUE = 31;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_7_VALUE = 32;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_8_VALUE = 33;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_9_VALUE = 34;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_10_VALUE = 35;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_11_VALUE = 36;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_12_VALUE = 37;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_13_VALUE = 38;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_14_VALUE = 39;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_VALUE = 40;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_VALUE = 41;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_LOCK_VALUE = 42;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_LOCK_VALUE = 43;
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    public static final int PP13_SEL_EVENTPRED_0_VALUE = 44;
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    public static final int PP13_SEL_EVENTPRED_1_VALUE = 45;
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    public static final int PP13_SEL_EVENTPRED_2_VALUE = 46;
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    public static final int PP13_SEL_EVENTPRED_3_VALUE = 47;
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    public static final int PP13_SEL_EVENTPRED_4_VALUE = 48;
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    public static final int PP13_SEL_EVENTPRED_5_VALUE = 49;
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    public static final int PP13_SEL_EVENTPRED_6_VALUE = 50;
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    public static final int PP13_SEL_EVENTPRED_7_VALUE = 51;
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    public static final int PP13_SEL_EVENTPRED_8_VALUE = 52;
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    public static final int PP13_SEL_EVENTPRED_9_VALUE = 53;
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    public static final int PP13_SEL_EVENTPRED_10_VALUE = 54;
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    public static final int PP13_SEL_EVENTPRED_11_VALUE = 55;
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    public static final int PP13_SEL_EVENTPRED_12_VALUE = 56;
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    public static final int PP13_SEL_EVENTPRED_13_VALUE = 57;
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    public static final int PP13_SEL_EVENTPRED_14_VALUE = 58;
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    public static final int PP13_SEL_EVENTPRED_15_VALUE = 59;
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    public static final int PP13_SEL_EVENTPRED_16_VALUE = 60;
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    public static final int PP13_SEL_EVENTPRED_17_VALUE = 61;
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    public static final int PP13_SEL_EVENTPRED_18_VALUE = 62;
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    public static final int PP13_SEL_EVENTPRED_19_VALUE = 63;
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    public static final int PP13_SEL_EVENTPRED_20_VALUE = 64;
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    public static final int PP13_SEL_EVENTPRED_21_VALUE = 65;
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    public static final int PP13_SEL_EVENTPRED_22_VALUE = 66;
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    public static final int PP13_SEL_EVENTPRED_23_VALUE = 67;
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    public static final int PP13_SEL_EVENTPRED_24_VALUE = 68;
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    public static final int PP13_SEL_EVENTPRED_25_VALUE = 69;
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    public static final int PP13_SEL_EVENTPRED_26_VALUE = 70;
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    public static final int PP13_SEL_EVENTPRED_27_VALUE = 71;
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    public static final int PP13_SEL_EVENTPRED_28_VALUE = 72;
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    public static final int PP13_SEL_EVENTPRED_29_VALUE = 73;
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    public static final int PP13_SEL_EVENTPRED_30_VALUE = 74;
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    public static final int PP13_SEL_EVENTPRED_31_VALUE = 75;
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    public static final int PP13_SEL_EVENTPRED_32_VALUE = 76;
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    public static final int PP13_SEL_EVENTPRED_33_VALUE = 77;
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    public static final int PP13_SEL_EVENTPRED_34_VALUE = 78;
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    public static final int PP13_SEL_EVENTPRED_35_VALUE = 79;
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    public static final int PP13_SEL_EVENTPRED_36_VALUE = 80;
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    public static final int PP13_SEL_EVENTPRED_37_VALUE = 81;
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    public static final int PP13_SEL_EVENTPRED_38_VALUE = 82;
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    public static final int PP13_SEL_EVENTPRED_39_VALUE = 83;
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    public static final int PP13_SEL_EVENTPRED_40_VALUE = 84;
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    public static final int PP13_SEL_EVENTPRED_41_VALUE = 85;
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    public static final int PP13_SEL_EVENTPRED_42_VALUE = 86;
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    public static final int PP13_SEL_EVENTPRED_43_VALUE = 87;
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    public static final int PP13_SEL_SOLO_0_VALUE = 88;
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    public static final int PP13_SEL_SOLO_1_VALUE = 89;
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    public static final int PP13_SEL_SOLO_2_VALUE = 90;
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    public static final int PP13_SEL_SOLO_3_VALUE = 91;
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    public static final int PP13_SEL_SOLO_4_VALUE = 92;
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    public static final int PP13_SEL_SOLO_5_VALUE = 93;
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    public static final int PP13_SEL_SOLO_6_VALUE = 94;
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    public static final int PP13_SEL_SOLO_7_VALUE = 95;


    public final int getNumber() { return value; }

    public static DOTA_2013PassportSelectionIndices valueOf(int value) {
      switch (value) {
        case 0: return PP13_SEL_ALLSTAR_PLAYER_0;
        case 1: return PP13_SEL_ALLSTAR_PLAYER_1;
        case 2: return PP13_SEL_ALLSTAR_PLAYER_2;
        case 3: return PP13_SEL_ALLSTAR_PLAYER_3;
        case 4: return PP13_SEL_ALLSTAR_PLAYER_4;
        case 5: return PP13_SEL_ALLSTAR_PLAYER_5;
        case 6: return PP13_SEL_ALLSTAR_PLAYER_6;
        case 7: return PP13_SEL_ALLSTAR_PLAYER_7;
        case 8: return PP13_SEL_ALLSTAR_PLAYER_8;
        case 9: return PP13_SEL_ALLSTAR_PLAYER_9;
        case 10: return PP13_SEL_QUALPRED_WEST_0;
        case 11: return PP13_SEL_QUALPRED_WEST_1;
        case 12: return PP13_SEL_QUALPRED_WEST_2;
        case 13: return PP13_SEL_QUALPRED_WEST_3;
        case 14: return PP13_SEL_QUALPRED_WEST_4;
        case 15: return PP13_SEL_QUALPRED_WEST_5;
        case 16: return PP13_SEL_QUALPRED_WEST_6;
        case 17: return PP13_SEL_QUALPRED_WEST_7;
        case 18: return PP13_SEL_QUALPRED_WEST_8;
        case 19: return PP13_SEL_QUALPRED_WEST_9;
        case 20: return PP13_SEL_QUALPRED_WEST_10;
        case 21: return PP13_SEL_QUALPRED_WEST_11;
        case 22: return PP13_SEL_QUALPRED_WEST_12;
        case 23: return PP13_SEL_QUALPRED_WEST_13;
        case 24: return PP13_SEL_QUALPRED_WEST_14;
        case 25: return PP13_SEL_QUALPRED_EAST_0;
        case 26: return PP13_SEL_QUALPRED_EAST_1;
        case 27: return PP13_SEL_QUALPRED_EAST_2;
        case 28: return PP13_SEL_QUALPRED_EAST_3;
        case 29: return PP13_SEL_QUALPRED_EAST_4;
        case 30: return PP13_SEL_QUALPRED_EAST_5;
        case 31: return PP13_SEL_QUALPRED_EAST_6;
        case 32: return PP13_SEL_QUALPRED_EAST_7;
        case 33: return PP13_SEL_QUALPRED_EAST_8;
        case 34: return PP13_SEL_QUALPRED_EAST_9;
        case 35: return PP13_SEL_QUALPRED_EAST_10;
        case 36: return PP13_SEL_QUALPRED_EAST_11;
        case 37: return PP13_SEL_QUALPRED_EAST_12;
        case 38: return PP13_SEL_QUALPRED_EAST_13;
        case 39: return PP13_SEL_QUALPRED_EAST_14;
        case 40: return PP13_SEL_TEAMCUP_TEAM;
        case 41: return PP13_SEL_TEAMCUP_PLAYER;
        case 42: return PP13_SEL_TEAMCUP_TEAM_LOCK;
        case 43: return PP13_SEL_TEAMCUP_PLAYER_LOCK;
        case 44: return PP13_SEL_EVENTPRED_0;
        case 45: return PP13_SEL_EVENTPRED_1;
        case 46: return PP13_SEL_EVENTPRED_2;
        case 47: return PP13_SEL_EVENTPRED_3;
        case 48: return PP13_SEL_EVENTPRED_4;
        case 49: return PP13_SEL_EVENTPRED_5;
        case 50: return PP13_SEL_EVENTPRED_6;
        case 51: return PP13_SEL_EVENTPRED_7;
        case 52: return PP13_SEL_EVENTPRED_8;
        case 53: return PP13_SEL_EVENTPRED_9;
        case 54: return PP13_SEL_EVENTPRED_10;
        case 55: return PP13_SEL_EVENTPRED_11;
        case 56: return PP13_SEL_EVENTPRED_12;
        case 57: return PP13_SEL_EVENTPRED_13;
        case 58: return PP13_SEL_EVENTPRED_14;
        case 59: return PP13_SEL_EVENTPRED_15;
        case 60: return PP13_SEL_EVENTPRED_16;
        case 61: return PP13_SEL_EVENTPRED_17;
        case 62: return PP13_SEL_EVENTPRED_18;
        case 63: return PP13_SEL_EVENTPRED_19;
        case 64: return PP13_SEL_EVENTPRED_20;
        case 65: return PP13_SEL_EVENTPRED_21;
        case 66: return PP13_SEL_EVENTPRED_22;
        case 67: return PP13_SEL_EVENTPRED_23;
        case 68: return PP13_SEL_EVENTPRED_24;
        case 69: return PP13_SEL_EVENTPRED_25;
        case 70: return PP13_SEL_EVENTPRED_26;
        case 71: return PP13_SEL_EVENTPRED_27;
        case 72: return PP13_SEL_EVENTPRED_28;
        case 73: return PP13_SEL_EVENTPRED_29;
        case 74: return PP13_SEL_EVENTPRED_30;
        case 75: return PP13_SEL_EVENTPRED_31;
        case 76: return PP13_SEL_EVENTPRED_32;
        case 77: return PP13_SEL_EVENTPRED_33;
        case 78: return PP13_SEL_EVENTPRED_34;
        case 79: return PP13_SEL_EVENTPRED_35;
        case 80: return PP13_SEL_EVENTPRED_36;
        case 81: return PP13_SEL_EVENTPRED_37;
        case 82: return PP13_SEL_EVENTPRED_38;
        case 83: return PP13_SEL_EVENTPRED_39;
        case 84: return PP13_SEL_EVENTPRED_40;
        case 85: return PP13_SEL_EVENTPRED_41;
        case 86: return PP13_SEL_EVENTPRED_42;
        case 87: return PP13_SEL_EVENTPRED_43;
        case 88: return PP13_SEL_SOLO_0;
        case 89: return PP13_SEL_SOLO_1;
        case 90: return PP13_SEL_SOLO_2;
        case 91: return PP13_SEL_SOLO_3;
        case 92: return PP13_SEL_SOLO_4;
        case 93: return PP13_SEL_SOLO_5;
        case 94: return PP13_SEL_SOLO_6;
        case 95: return PP13_SEL_SOLO_7;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>() {
            public DOTA_2013PassportSelectionIndices findValueByNumber(int number) {
              return DOTA_2013PassportSelectionIndices.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.getDescriptor().getEnumTypes().get(4);
    }

    private static final DOTA_2013PassportSelectionIndices[] VALUES = values();

    public static DOTA_2013PassportSelectionIndices valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_2013PassportSelectionIndices(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_2013PassportSelectionIndices)
  }

  public interface CMsgGCPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> 
        getPlayerInfosList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index);
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    int getPlayerInfosCount();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> 
        getLeaderboardsList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index);
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    int getLeaderboardsCount();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgGCPlayerInfo}
   */
  public static final class CMsgGCPlayerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo)
      CMsgGCPlayerInfoOrBuilder {
    // Use CMsgGCPlayerInfo.newBuilder() to construct.
    private CMsgGCPlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCPlayerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCPlayerInfo defaultInstance;
    public static CMsgGCPlayerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCPlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerInfos_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerInfos_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                leaderboards_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard>();
                mutable_bitField0_ |= 0x00000002;
              }
              leaderboards_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          leaderboards_ = java.util.Collections.unmodifiableList(leaderboards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCPlayerInfo> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCPlayerInfo>() {
      public CMsgGCPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCPlayerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCPlayerInfo> getParserForType() {
      return PARSER;
    }

    public interface PlayerInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo.PlayerInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string country_code = 3;</code>
       */
      boolean hasCountryCode();
      /**
       * <code>optional string country_code = 3;</code>
       */
      java.lang.String getCountryCode();
      /**
       * <code>optional string country_code = 3;</code>
       */
      com.google.protobuf.ByteString
          getCountryCodeBytes();

      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      boolean hasFantasyRole();
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      int getFantasyRole();

      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 6;</code>
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 6;</code>
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 6;</code>
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional string team_tag = 7;</code>
       */
      boolean hasTeamTag();
      /**
       * <code>optional string team_tag = 7;</code>
       */
      java.lang.String getTeamTag();
      /**
       * <code>optional string team_tag = 7;</code>
       */
      com.google.protobuf.ByteString
          getTeamTagBytes();

      /**
       * <code>optional string sponsor = 8;</code>
       */
      boolean hasSponsor();
      /**
       * <code>optional string sponsor = 8;</code>
       */
      java.lang.String getSponsor();
      /**
       * <code>optional string sponsor = 8;</code>
       */
      com.google.protobuf.ByteString
          getSponsorBytes();

      /**
       * <code>optional bool is_locked = 9;</code>
       */
      boolean hasIsLocked();
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      boolean getIsLocked();

      /**
       * <code>optional bool is_pro = 10;</code>
       */
      boolean hasIsPro();
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      boolean getIsPro();

      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      boolean hasLockedUntil();
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      int getLockedUntil();
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo.PlayerInfo}
     */
    public static final class PlayerInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo.PlayerInfo)
        PlayerInfoOrBuilder {
      // Use PlayerInfo.newBuilder() to construct.
      private PlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayerInfo defaultInstance;
      public static PlayerInfo getDefaultInstance() {
        return defaultInstance;
      }

      public PlayerInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                countryCode_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                fantasyRole_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                teamId_ = input.readUInt32();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                teamName_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                teamTag_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                sponsor_ = bs;
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                isLocked_ = input.readBool();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                isPro_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                lockedUntil_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayerInfo> PARSER =
          new com.google.protobuf.AbstractParser<PlayerInfo>() {
        public PlayerInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int COUNTRY_CODE_FIELD_NUMBER = 3;
      private java.lang.Object countryCode_;
      /**
       * <code>optional string country_code = 3;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string country_code = 3;</code>
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            countryCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string country_code = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FANTASY_ROLE_FIELD_NUMBER = 4;
      private int fantasyRole_;
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      public boolean hasFantasyRole() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      public int getFantasyRole() {
        return fantasyRole_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 5;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 6;
      private java.lang.Object teamName_;
      /**
       * <code>optional string team_name = 6;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string team_name = 6;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_TAG_FIELD_NUMBER = 7;
      private java.lang.Object teamTag_;
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamTag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SPONSOR_FIELD_NUMBER = 8;
      private java.lang.Object sponsor_;
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public boolean hasSponsor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public java.lang.String getSponsor() {
        java.lang.Object ref = sponsor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sponsor_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSponsorBytes() {
        java.lang.Object ref = sponsor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sponsor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IS_LOCKED_FIELD_NUMBER = 9;
      private boolean isLocked_;
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      public boolean hasIsLocked() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      public boolean getIsLocked() {
        return isLocked_;
      }

      public static final int IS_PRO_FIELD_NUMBER = 10;
      private boolean isPro_;
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      public boolean hasIsPro() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      public boolean getIsPro() {
        return isPro_;
      }

      public static final int LOCKED_UNTIL_FIELD_NUMBER = 11;
      private int lockedUntil_;
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      public boolean hasLockedUntil() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      public int getLockedUntil() {
        return lockedUntil_;
      }

      private void initFields() {
        accountId_ = 0;
        name_ = "";
        countryCode_ = "";
        fantasyRole_ = 0;
        teamId_ = 0;
        teamName_ = "";
        teamTag_ = "";
        sponsor_ = "";
        isLocked_ = false;
        isPro_ = false;
        lockedUntil_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, fantasyRole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, teamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getTeamNameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getTeamTagBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getSponsorBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(9, isLocked_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, isPro_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(11, lockedUntil_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, fantasyRole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, teamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getTeamNameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getTeamTagBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getSponsorBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, isLocked_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, isPro_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, lockedUntil_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCPlayerInfo.PlayerInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo.PlayerInfo)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          countryCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyRole_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          teamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          teamTag_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          sponsor_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          isLocked_ = false;
          bitField0_ = (bitField0_ & ~0x00000100);
          isPro_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          lockedUntil_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.countryCode_ = countryCode_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fantasyRole_ = fantasyRole_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.teamName_ = teamName_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.teamTag_ = teamTag_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.sponsor_ = sponsor_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.isLocked_ = isLocked_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.isPro_ = isPro_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.lockedUntil_ = lockedUntil_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasCountryCode()) {
            bitField0_ |= 0x00000004;
            countryCode_ = other.countryCode_;
            onChanged();
          }
          if (other.hasFantasyRole()) {
            setFantasyRole(other.getFantasyRole());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            bitField0_ |= 0x00000020;
            teamName_ = other.teamName_;
            onChanged();
          }
          if (other.hasTeamTag()) {
            bitField0_ |= 0x00000040;
            teamTag_ = other.teamTag_;
            onChanged();
          }
          if (other.hasSponsor()) {
            bitField0_ |= 0x00000080;
            sponsor_ = other.sponsor_;
            onChanged();
          }
          if (other.hasIsLocked()) {
            setIsLocked(other.getIsLocked());
          }
          if (other.hasIsPro()) {
            setIsPro(other.getIsPro());
          }
          if (other.hasLockedUntil()) {
            setLockedUntil(other.getLockedUntil());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object countryCode_ = "";
        /**
         * <code>optional string country_code = 3;</code>
         */
        public boolean hasCountryCode() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public java.lang.String getCountryCode() {
          java.lang.Object ref = countryCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              countryCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public com.google.protobuf.ByteString
            getCountryCodeBytes() {
          java.lang.Object ref = countryCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            countryCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder setCountryCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          countryCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder clearCountryCode() {
          bitField0_ = (bitField0_ & ~0x00000004);
          countryCode_ = getDefaultInstance().getCountryCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder setCountryCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          countryCode_ = value;
          onChanged();
          return this;
        }

        private int fantasyRole_ ;
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public boolean hasFantasyRole() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public int getFantasyRole() {
          return fantasyRole_;
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public Builder setFantasyRole(int value) {
          bitField0_ |= 0x00000008;
          fantasyRole_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public Builder clearFantasyRole() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fantasyRole_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000010;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 6;</code>
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          teamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder clearTeamName() {
          bitField0_ = (bitField0_ & ~0x00000020);
          teamName_ = getDefaultInstance().getTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          teamName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object teamTag_ = "";
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public boolean hasTeamTag() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public java.lang.String getTeamTag() {
          java.lang.Object ref = teamTag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamTag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public com.google.protobuf.ByteString
            getTeamTagBytes() {
          java.lang.Object ref = teamTag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamTag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder setTeamTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          teamTag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder clearTeamTag() {
          bitField0_ = (bitField0_ & ~0x00000040);
          teamTag_ = getDefaultInstance().getTeamTag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder setTeamTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          teamTag_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object sponsor_ = "";
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public boolean hasSponsor() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public java.lang.String getSponsor() {
          java.lang.Object ref = sponsor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sponsor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public com.google.protobuf.ByteString
            getSponsorBytes() {
          java.lang.Object ref = sponsor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sponsor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder setSponsor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sponsor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder clearSponsor() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sponsor_ = getDefaultInstance().getSponsor();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder setSponsorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sponsor_ = value;
          onChanged();
          return this;
        }

        private boolean isLocked_ ;
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public boolean hasIsLocked() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public boolean getIsLocked() {
          return isLocked_;
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public Builder setIsLocked(boolean value) {
          bitField0_ |= 0x00000100;
          isLocked_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public Builder clearIsLocked() {
          bitField0_ = (bitField0_ & ~0x00000100);
          isLocked_ = false;
          onChanged();
          return this;
        }

        private boolean isPro_ ;
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public boolean hasIsPro() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public boolean getIsPro() {
          return isPro_;
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public Builder setIsPro(boolean value) {
          bitField0_ |= 0x00000200;
          isPro_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public Builder clearIsPro() {
          bitField0_ = (bitField0_ & ~0x00000200);
          isPro_ = false;
          onChanged();
          return this;
        }

        private int lockedUntil_ ;
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public boolean hasLockedUntil() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public int getLockedUntil() {
          return lockedUntil_;
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public Builder setLockedUntil(int value) {
          bitField0_ |= 0x00000400;
          lockedUntil_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public Builder clearLockedUntil() {
          bitField0_ = (bitField0_ & ~0x00000400);
          lockedUntil_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo.PlayerInfo)
      }

      static {
        defaultInstance = new PlayerInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo.PlayerInfo)
    }

    public interface RegionLeaderboardOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo.RegionLeaderboard)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division = 1;</code>
       */
      boolean hasDivision();
      /**
       * <code>optional uint32 division = 1;</code>
       */
      int getDivision();

      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      java.util.List<java.lang.Integer> getAccountIdsList();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      int getAccountIdsCount();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      int getAccountIds(int index);
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo.RegionLeaderboard}
     */
    public static final class RegionLeaderboard extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo.RegionLeaderboard)
        RegionLeaderboardOrBuilder {
      // Use RegionLeaderboard.newBuilder() to construct.
      private RegionLeaderboard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private RegionLeaderboard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final RegionLeaderboard defaultInstance;
      public static RegionLeaderboard getDefaultInstance() {
        return defaultInstance;
      }

      public RegionLeaderboard getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private RegionLeaderboard(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                division_ = input.readUInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                accountIds_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  accountIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder.class);
      }

      public static com.google.protobuf.Parser<RegionLeaderboard> PARSER =
          new com.google.protobuf.AbstractParser<RegionLeaderboard>() {
        public RegionLeaderboard parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RegionLeaderboard(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<RegionLeaderboard> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int DIVISION_FIELD_NUMBER = 1;
      private int division_;
      /**
       * <code>optional uint32 division = 1;</code>
       */
      public boolean hasDivision() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 division = 1;</code>
       */
      public int getDivision() {
        return division_;
      }

      public static final int ACCOUNT_IDS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> accountIds_;
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        return accountIds_;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public int getAccountIds(int index) {
        return accountIds_.get(index);
      }

      private void initFields() {
        division_ = 0;
        accountIds_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, division_);
        }
        for (int i = 0; i < accountIds_.size(); i++) {
          output.writeUInt32(2, accountIds_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, division_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < accountIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(accountIds_.get(i));
          }
          size += dataSize;
          size += 1 * getAccountIdsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCPlayerInfo.RegionLeaderboard}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo.RegionLeaderboard)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          division_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          accountIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.division_ = division_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.accountIds_ = accountIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance()) return this;
          if (other.hasDivision()) {
            setDivision(other.getDivision());
          }
          if (!other.accountIds_.isEmpty()) {
            if (accountIds_.isEmpty()) {
              accountIds_ = other.accountIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAccountIdsIsMutable();
              accountIds_.addAll(other.accountIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int division_ ;
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public boolean hasDivision() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public int getDivision() {
          return division_;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public Builder setDivision(int value) {
          bitField0_ |= 0x00000001;
          division_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public Builder clearDivision() {
          bitField0_ = (bitField0_ & ~0x00000001);
          division_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> accountIds_ = java.util.Collections.emptyList();
        private void ensureAccountIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = new java.util.ArrayList<java.lang.Integer>(accountIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getAccountIdsList() {
          return java.util.Collections.unmodifiableList(accountIds_);
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public int getAccountIdsCount() {
          return accountIds_.size();
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public int getAccountIds(int index) {
          return accountIds_.get(index);
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder setAccountIds(
            int index, int value) {
          ensureAccountIdsIsMutable();
          accountIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder addAccountIds(int value) {
          ensureAccountIdsIsMutable();
          accountIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder addAllAccountIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAccountIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder clearAccountIds() {
          accountIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo.RegionLeaderboard)
      }

      static {
        defaultInstance = new RegionLeaderboard(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo.RegionLeaderboard)
    }

    public static final int PLAYER_INFOS_FIELD_NUMBER = 1;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> playerInfos_;
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> getPlayerInfosList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public int getPlayerInfosCount() {
      return playerInfos_.size();
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index) {
      return playerInfos_.get(index);
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index) {
      return playerInfos_.get(index);
    }

    public static final int LEADERBOARDS_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> leaderboards_;
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> getLeaderboardsList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public int getLeaderboardsCount() {
      return leaderboards_.size();
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index) {
      return leaderboards_.get(index);
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index) {
      return leaderboards_.get(index);
    }

    private void initFields() {
      playerInfos_ = java.util.Collections.emptyList();
      leaderboards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerInfos_.size(); i++) {
        output.writeMessage(1, playerInfos_.get(i));
      }
      for (int i = 0; i < leaderboards_.size(); i++) {
        output.writeMessage(2, leaderboards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfos_.get(i));
      }
      for (int i = 0; i < leaderboards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, leaderboards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerInfosFieldBuilder();
          getLeaderboardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerInfosBuilder_.clear();
        }
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          leaderboardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgGCPlayerInfo_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo(this);
        int from_bitField0_ = bitField0_;
        if (playerInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerInfos_ = playerInfos_;
        } else {
          result.playerInfos_ = playerInfosBuilder_.build();
        }
        if (leaderboardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            leaderboards_ = java.util.Collections.unmodifiableList(leaderboards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.leaderboards_ = leaderboards_;
        } else {
          result.leaderboards_ = leaderboardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance()) return this;
        if (playerInfosBuilder_ == null) {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfos_.isEmpty()) {
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerInfosIsMutable();
              playerInfos_.addAll(other.playerInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfosBuilder_.isEmpty()) {
              playerInfosBuilder_.dispose();
              playerInfosBuilder_ = null;
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerInfosFieldBuilder() : null;
            } else {
              playerInfosBuilder_.addAllMessages(other.playerInfos_);
            }
          }
        }
        if (leaderboardsBuilder_ == null) {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboards_.isEmpty()) {
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLeaderboardsIsMutable();
              leaderboards_.addAll(other.leaderboards_);
            }
            onChanged();
          }
        } else {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboardsBuilder_.isEmpty()) {
              leaderboardsBuilder_.dispose();
              leaderboardsBuilder_ = null;
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              leaderboardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeaderboardsFieldBuilder() : null;
            } else {
              leaderboardsBuilder_.addAllMessages(other.leaderboards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> playerInfos_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo>(playerInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> playerInfosBuilder_;

      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> getPlayerInfosList() {
        if (playerInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfos_);
        } else {
          return playerInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public int getPlayerInfosCount() {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.size();
        } else {
          return playerInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);
        } else {
          return playerInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addAllPlayerInfos(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo> values) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfos_);
          onChanged();
        } else {
          playerInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder clearPlayerInfos() {
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder removePlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.remove(index);
          onChanged();
        } else {
          playerInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder getPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
          int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);  } else {
          return playerInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
           getPlayerInfosOrBuilderList() {
        if (playerInfosBuilder_ != null) {
          return playerInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfos_);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder addPlayerInfosBuilder() {
        return getPlayerInfosFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder addPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder> 
           getPlayerInfosBuilderList() {
        return getPlayerInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
          getPlayerInfosFieldBuilder() {
        if (playerInfosBuilder_ == null) {
          playerInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder>(
                  playerInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerInfos_ = null;
        }
        return playerInfosBuilder_;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> leaderboards_ =
        java.util.Collections.emptyList();
      private void ensureLeaderboardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          leaderboards_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard>(leaderboards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> leaderboardsBuilder_;

      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> getLeaderboardsList() {
        if (leaderboardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leaderboards_);
        } else {
          return leaderboardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public int getLeaderboardsCount() {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.size();
        } else {
          return leaderboardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);
        } else {
          return leaderboardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addAllLeaderboards(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard> values) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leaderboards_);
          onChanged();
        } else {
          leaderboardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder clearLeaderboards() {
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          leaderboardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder removeLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.remove(index);
          onChanged();
        } else {
          leaderboardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder getLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
          int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);  } else {
          return leaderboardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
           getLeaderboardsOrBuilderList() {
        if (leaderboardsBuilder_ != null) {
          return leaderboardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leaderboards_);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder addLeaderboardsBuilder() {
        return getLeaderboardsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder addLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder> 
           getLeaderboardsBuilderList() {
        return getLeaderboardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
          getLeaderboardsFieldBuilder() {
        if (leaderboardsBuilder_ == null) {
          leaderboardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder>(
                  leaderboards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          leaderboards_ = null;
        }
        return leaderboardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo)
    }

    static {
      defaultInstance = new CMsgGCPlayerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo)
  }

  public interface CMsgDOTACreateFantasyLeagueRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTACreateFantasyLeagueRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string league_name = 1;</code>
     */
    boolean hasLeagueName();
    /**
     * <code>optional string league_name = 1;</code>
     */
    java.lang.String getLeagueName();
    /**
     * <code>optional string league_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getLeagueNameBytes();

    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    boolean hasLeagueLogo();
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    long getLeagueLogo();

    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    boolean hasSelectionMode();
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode();

    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    boolean hasTeamCount();
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    int getTeamCount();
  }
  /**
   * Protobuf type {@code CMsgDOTACreateFantasyLeagueRequest}
   */
  public static final class CMsgDOTACreateFantasyLeagueRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTACreateFantasyLeagueRequest)
      CMsgDOTACreateFantasyLeagueRequestOrBuilder {
    // Use CMsgDOTACreateFantasyLeagueRequest.newBuilder() to construct.
    private CMsgDOTACreateFantasyLeagueRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTACreateFantasyLeagueRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTACreateFantasyLeagueRequest defaultInstance;
    public static CMsgDOTACreateFantasyLeagueRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTACreateFantasyLeagueRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACreateFantasyLeagueRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              leagueName_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              leagueLogo_ = input.readUInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode value = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                selectionMode_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teamCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTACreateFantasyLeagueRequest>() {
      public CMsgDOTACreateFantasyLeagueRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTACreateFantasyLeagueRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEAGUE_NAME_FIELD_NUMBER = 1;
    private java.lang.Object leagueName_;
    /**
     * <code>optional string league_name = 1;</code>
     */
    public boolean hasLeagueName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string league_name = 1;</code>
     */
    public java.lang.String getLeagueName() {
      java.lang.Object ref = leagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          leagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string league_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLeagueNameBytes() {
      java.lang.Object ref = leagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        leagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEAGUE_LOGO_FIELD_NUMBER = 2;
    private long leagueLogo_;
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    public boolean hasLeagueLogo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    public long getLeagueLogo() {
      return leagueLogo_;
    }

    public static final int SELECTION_MODE_FIELD_NUMBER = 3;
    private telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode selectionMode_;
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public boolean hasSelectionMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode() {
      return selectionMode_;
    }

    public static final int TEAM_COUNT_FIELD_NUMBER = 4;
    private int teamCount_;
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    public boolean hasTeamCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    public int getTeamCount() {
      return teamCount_;
    }

    private void initFields() {
      leagueName_ = "";
      leagueLogo_ = 0L;
      selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
      teamCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, leagueLogo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, selectionMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, teamCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, leagueLogo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, selectionMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, teamCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACreateFantasyLeagueRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTACreateFantasyLeagueRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        leagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueName_ = leagueName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leagueLogo_ = leagueLogo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.selectionMode_ = selectionMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamCount_ = teamCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest.getDefaultInstance()) return this;
        if (other.hasLeagueName()) {
          bitField0_ |= 0x00000001;
          leagueName_ = other.leagueName_;
          onChanged();
        }
        if (other.hasLeagueLogo()) {
          setLeagueLogo(other.getLeagueLogo());
        }
        if (other.hasSelectionMode()) {
          setSelectionMode(other.getSelectionMode());
        }
        if (other.hasTeamCount()) {
          setTeamCount(other.getTeamCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object leagueName_ = "";
      /**
       * <code>optional string league_name = 1;</code>
       */
      public boolean hasLeagueName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public java.lang.String getLeagueName() {
        java.lang.Object ref = leagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            leagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLeagueNameBytes() {
        java.lang.Object ref = leagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          leagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder setLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder clearLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueName_ = getDefaultInstance().getLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder setLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leagueName_ = value;
        onChanged();
        return this;
      }

      private long leagueLogo_ ;
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public boolean hasLeagueLogo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public long getLeagueLogo() {
        return leagueLogo_;
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public Builder setLeagueLogo(long value) {
        bitField0_ |= 0x00000002;
        leagueLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public Builder clearLeagueLogo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leagueLogo_ = 0L;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public boolean hasSelectionMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode() {
        return selectionMode_;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder setSelectionMode(telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        selectionMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder clearSelectionMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
        onChanged();
        return this;
      }

      private int teamCount_ ;
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public boolean hasTeamCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public int getTeamCount() {
        return teamCount_;
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public Builder setTeamCount(int value) {
        bitField0_ |= 0x00000008;
        teamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public Builder clearTeamCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTACreateFantasyLeagueRequest)
    }

    static {
      defaultInstance = new CMsgDOTACreateFantasyLeagueRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACreateFantasyLeagueRequest)
  }

  public interface CMsgDOTACreateFantasyLeagueResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTACreateFantasyLeagueResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTACreateFantasyLeagueResponse}
   */
  public static final class CMsgDOTACreateFantasyLeagueResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTACreateFantasyLeagueResponse)
      CMsgDOTACreateFantasyLeagueResponseOrBuilder {
    // Use CMsgDOTACreateFantasyLeagueResponse.newBuilder() to construct.
    private CMsgDOTACreateFantasyLeagueResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTACreateFantasyLeagueResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTACreateFantasyLeagueResponse defaultInstance;
    public static CMsgDOTACreateFantasyLeagueResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTACreateFantasyLeagueResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACreateFantasyLeagueResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTACreateFantasyLeagueResponse>() {
      public CMsgDOTACreateFantasyLeagueResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTACreateFantasyLeagueResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTACreateFantasyLeagueResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_TOO_MANY_LEAGUES = 2;</code>
       */
      ERROR_TOO_MANY_LEAGUES(2, 2),
      /**
       * <code>ERROR_INVALID_TEAM_COUNT = 3;</code>
       */
      ERROR_INVALID_TEAM_COUNT(3, 3),
      /**
       * <code>ERROR_CREATION_DISABLED = 4;</code>
       */
      ERROR_CREATION_DISABLED(4, 4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_TOO_MANY_LEAGUES = 2;</code>
       */
      public static final int ERROR_TOO_MANY_LEAGUES_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TEAM_COUNT = 3;</code>
       */
      public static final int ERROR_INVALID_TEAM_COUNT_VALUE = 3;
      /**
       * <code>ERROR_CREATION_DISABLED = 4;</code>
       */
      public static final int ERROR_CREATION_DISABLED_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_TOO_MANY_LEAGUES;
          case 3: return ERROR_INVALID_TEAM_COUNT;
          case 4: return ERROR_CREATION_DISABLED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTACreateFantasyLeagueResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACreateFantasyLeagueResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTACreateFantasyLeagueResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTACreateFantasyLeagueResponse)
    }

    static {
      defaultInstance = new CMsgDOTACreateFantasyLeagueResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACreateFantasyLeagueResponse)
  }

  public interface CMsgFantasyLeagueScoringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgFantasyLeagueScoring)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float level = 1;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional float level = 1;</code>
     */
    float getLevel();

    /**
     * <code>optional float kills = 2;</code>
     */
    boolean hasKills();
    /**
     * <code>optional float kills = 2;</code>
     */
    float getKills();

    /**
     * <code>optional float deaths = 3;</code>
     */
    boolean hasDeaths();
    /**
     * <code>optional float deaths = 3;</code>
     */
    float getDeaths();

    /**
     * <code>optional float assists = 4;</code>
     */
    boolean hasAssists();
    /**
     * <code>optional float assists = 4;</code>
     */
    float getAssists();

    /**
     * <code>optional float last_hits = 5;</code>
     */
    boolean hasLastHits();
    /**
     * <code>optional float last_hits = 5;</code>
     */
    float getLastHits();

    /**
     * <code>optional float denies = 6;</code>
     */
    boolean hasDenies();
    /**
     * <code>optional float denies = 6;</code>
     */
    float getDenies();

    /**
     * <code>optional float gpm = 7;</code>
     */
    boolean hasGpm();
    /**
     * <code>optional float gpm = 7;</code>
     */
    float getGpm();

    /**
     * <code>optional float xppm = 8;</code>
     */
    boolean hasXppm();
    /**
     * <code>optional float xppm = 8;</code>
     */
    float getXppm();

    /**
     * <code>optional float stuns = 9;</code>
     */
    boolean hasStuns();
    /**
     * <code>optional float stuns = 9;</code>
     */
    float getStuns();

    /**
     * <code>optional float healing = 10;</code>
     */
    boolean hasHealing();
    /**
     * <code>optional float healing = 10;</code>
     */
    float getHealing();

    /**
     * <code>optional float tower_kills = 11;</code>
     */
    boolean hasTowerKills();
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    float getTowerKills();

    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    boolean hasRoshanKills();
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    float getRoshanKills();

    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    boolean hasMultiplierPremium();
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    float getMultiplierPremium();

    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    boolean hasMultiplierProfessional();
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    float getMultiplierProfessional();
  }
  /**
   * Protobuf type {@code CMsgFantasyLeagueScoring}
   */
  public static final class CMsgFantasyLeagueScoring extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgFantasyLeagueScoring)
      CMsgFantasyLeagueScoringOrBuilder {
    // Use CMsgFantasyLeagueScoring.newBuilder() to construct.
    private CMsgFantasyLeagueScoring(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgFantasyLeagueScoring(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgFantasyLeagueScoring defaultInstance;
    public static CMsgFantasyLeagueScoring getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgFantasyLeagueScoring getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgFantasyLeagueScoring(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              level_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              kills_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              deaths_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              assists_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              lastHits_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              denies_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              gpm_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              xppm_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              stuns_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              healing_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              towerKills_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              roshanKills_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              multiplierPremium_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              multiplierProfessional_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgFantasyLeagueScoring> PARSER =
        new com.google.protobuf.AbstractParser<CMsgFantasyLeagueScoring>() {
      public CMsgFantasyLeagueScoring parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgFantasyLeagueScoring(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgFantasyLeagueScoring> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private float level_;
    /**
     * <code>optional float level = 1;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float level = 1;</code>
     */
    public float getLevel() {
      return level_;
    }

    public static final int KILLS_FIELD_NUMBER = 2;
    private float kills_;
    /**
     * <code>optional float kills = 2;</code>
     */
    public boolean hasKills() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float kills = 2;</code>
     */
    public float getKills() {
      return kills_;
    }

    public static final int DEATHS_FIELD_NUMBER = 3;
    private float deaths_;
    /**
     * <code>optional float deaths = 3;</code>
     */
    public boolean hasDeaths() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float deaths = 3;</code>
     */
    public float getDeaths() {
      return deaths_;
    }

    public static final int ASSISTS_FIELD_NUMBER = 4;
    private float assists_;
    /**
     * <code>optional float assists = 4;</code>
     */
    public boolean hasAssists() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float assists = 4;</code>
     */
    public float getAssists() {
      return assists_;
    }

    public static final int LAST_HITS_FIELD_NUMBER = 5;
    private float lastHits_;
    /**
     * <code>optional float last_hits = 5;</code>
     */
    public boolean hasLastHits() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float last_hits = 5;</code>
     */
    public float getLastHits() {
      return lastHits_;
    }

    public static final int DENIES_FIELD_NUMBER = 6;
    private float denies_;
    /**
     * <code>optional float denies = 6;</code>
     */
    public boolean hasDenies() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float denies = 6;</code>
     */
    public float getDenies() {
      return denies_;
    }

    public static final int GPM_FIELD_NUMBER = 7;
    private float gpm_;
    /**
     * <code>optional float gpm = 7;</code>
     */
    public boolean hasGpm() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float gpm = 7;</code>
     */
    public float getGpm() {
      return gpm_;
    }

    public static final int XPPM_FIELD_NUMBER = 8;
    private float xppm_;
    /**
     * <code>optional float xppm = 8;</code>
     */
    public boolean hasXppm() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float xppm = 8;</code>
     */
    public float getXppm() {
      return xppm_;
    }

    public static final int STUNS_FIELD_NUMBER = 9;
    private float stuns_;
    /**
     * <code>optional float stuns = 9;</code>
     */
    public boolean hasStuns() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float stuns = 9;</code>
     */
    public float getStuns() {
      return stuns_;
    }

    public static final int HEALING_FIELD_NUMBER = 10;
    private float healing_;
    /**
     * <code>optional float healing = 10;</code>
     */
    public boolean hasHealing() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float healing = 10;</code>
     */
    public float getHealing() {
      return healing_;
    }

    public static final int TOWER_KILLS_FIELD_NUMBER = 11;
    private float towerKills_;
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    public boolean hasTowerKills() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    public float getTowerKills() {
      return towerKills_;
    }

    public static final int ROSHAN_KILLS_FIELD_NUMBER = 12;
    private float roshanKills_;
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    public boolean hasRoshanKills() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    public float getRoshanKills() {
      return roshanKills_;
    }

    public static final int MULTIPLIER_PREMIUM_FIELD_NUMBER = 13;
    private float multiplierPremium_;
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    public boolean hasMultiplierPremium() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    public float getMultiplierPremium() {
      return multiplierPremium_;
    }

    public static final int MULTIPLIER_PROFESSIONAL_FIELD_NUMBER = 14;
    private float multiplierProfessional_;
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    public boolean hasMultiplierProfessional() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    public float getMultiplierProfessional() {
      return multiplierProfessional_;
    }

    private void initFields() {
      level_ = 0F;
      kills_ = 0F;
      deaths_ = 0F;
      assists_ = 0F;
      lastHits_ = 0F;
      denies_ = 0F;
      gpm_ = 0F;
      xppm_ = 0F;
      stuns_ = 0F;
      healing_ = 0F;
      towerKills_ = 0F;
      roshanKills_ = 0F;
      multiplierPremium_ = 0F;
      multiplierProfessional_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, kills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, deaths_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, assists_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, lastHits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, denies_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, gpm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, xppm_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, stuns_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, healing_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, towerKills_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, roshanKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, multiplierPremium_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, multiplierProfessional_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, kills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, deaths_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, assists_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, lastHits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, denies_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, gpm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, xppm_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, stuns_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, healing_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, towerKills_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, roshanKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, multiplierPremium_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, multiplierProfessional_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgFantasyLeagueScoring}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgFantasyLeagueScoring)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        level_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        kills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        deaths_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        assists_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastHits_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        denies_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        gpm_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        xppm_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        stuns_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        healing_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        towerKills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        roshanKills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        multiplierPremium_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        multiplierProfessional_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kills_ = kills_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deaths_ = deaths_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.assists_ = assists_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastHits_ = lastHits_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.denies_ = denies_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gpm_ = gpm_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.xppm_ = xppm_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.stuns_ = stuns_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.healing_ = healing_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.towerKills_ = towerKills_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roshanKills_ = roshanKills_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.multiplierPremium_ = multiplierPremium_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.multiplierProfessional_ = multiplierProfessional_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasKills()) {
          setKills(other.getKills());
        }
        if (other.hasDeaths()) {
          setDeaths(other.getDeaths());
        }
        if (other.hasAssists()) {
          setAssists(other.getAssists());
        }
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasDenies()) {
          setDenies(other.getDenies());
        }
        if (other.hasGpm()) {
          setGpm(other.getGpm());
        }
        if (other.hasXppm()) {
          setXppm(other.getXppm());
        }
        if (other.hasStuns()) {
          setStuns(other.getStuns());
        }
        if (other.hasHealing()) {
          setHealing(other.getHealing());
        }
        if (other.hasTowerKills()) {
          setTowerKills(other.getTowerKills());
        }
        if (other.hasRoshanKills()) {
          setRoshanKills(other.getRoshanKills());
        }
        if (other.hasMultiplierPremium()) {
          setMultiplierPremium(other.getMultiplierPremium());
        }
        if (other.hasMultiplierProfessional()) {
          setMultiplierProfessional(other.getMultiplierProfessional());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float level_ ;
      /**
       * <code>optional float level = 1;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public float getLevel() {
        return level_;
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public Builder setLevel(float value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0F;
        onChanged();
        return this;
      }

      private float kills_ ;
      /**
       * <code>optional float kills = 2;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public float getKills() {
        return kills_;
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public Builder setKills(float value) {
        bitField0_ |= 0x00000002;
        kills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public Builder clearKills() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kills_ = 0F;
        onChanged();
        return this;
      }

      private float deaths_ ;
      /**
       * <code>optional float deaths = 3;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public float getDeaths() {
        return deaths_;
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public Builder setDeaths(float value) {
        bitField0_ |= 0x00000004;
        deaths_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public Builder clearDeaths() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deaths_ = 0F;
        onChanged();
        return this;
      }

      private float assists_ ;
      /**
       * <code>optional float assists = 4;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public float getAssists() {
        return assists_;
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public Builder setAssists(float value) {
        bitField0_ |= 0x00000008;
        assists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public Builder clearAssists() {
        bitField0_ = (bitField0_ & ~0x00000008);
        assists_ = 0F;
        onChanged();
        return this;
      }

      private float lastHits_ ;
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public float getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public Builder setLastHits(float value) {
        bitField0_ |= 0x00000010;
        lastHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastHits_ = 0F;
        onChanged();
        return this;
      }

      private float denies_ ;
      /**
       * <code>optional float denies = 6;</code>
       */
      public boolean hasDenies() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public float getDenies() {
        return denies_;
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public Builder setDenies(float value) {
        bitField0_ |= 0x00000020;
        denies_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public Builder clearDenies() {
        bitField0_ = (bitField0_ & ~0x00000020);
        denies_ = 0F;
        onChanged();
        return this;
      }

      private float gpm_ ;
      /**
       * <code>optional float gpm = 7;</code>
       */
      public boolean hasGpm() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public float getGpm() {
        return gpm_;
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public Builder setGpm(float value) {
        bitField0_ |= 0x00000040;
        gpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public Builder clearGpm() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gpm_ = 0F;
        onChanged();
        return this;
      }

      private float xppm_ ;
      /**
       * <code>optional float xppm = 8;</code>
       */
      public boolean hasXppm() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public float getXppm() {
        return xppm_;
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public Builder setXppm(float value) {
        bitField0_ |= 0x00000080;
        xppm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public Builder clearXppm() {
        bitField0_ = (bitField0_ & ~0x00000080);
        xppm_ = 0F;
        onChanged();
        return this;
      }

      private float stuns_ ;
      /**
       * <code>optional float stuns = 9;</code>
       */
      public boolean hasStuns() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public float getStuns() {
        return stuns_;
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public Builder setStuns(float value) {
        bitField0_ |= 0x00000100;
        stuns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public Builder clearStuns() {
        bitField0_ = (bitField0_ & ~0x00000100);
        stuns_ = 0F;
        onChanged();
        return this;
      }

      private float healing_ ;
      /**
       * <code>optional float healing = 10;</code>
       */
      public boolean hasHealing() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public float getHealing() {
        return healing_;
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public Builder setHealing(float value) {
        bitField0_ |= 0x00000200;
        healing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public Builder clearHealing() {
        bitField0_ = (bitField0_ & ~0x00000200);
        healing_ = 0F;
        onChanged();
        return this;
      }

      private float towerKills_ ;
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public boolean hasTowerKills() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public float getTowerKills() {
        return towerKills_;
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public Builder setTowerKills(float value) {
        bitField0_ |= 0x00000400;
        towerKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public Builder clearTowerKills() {
        bitField0_ = (bitField0_ & ~0x00000400);
        towerKills_ = 0F;
        onChanged();
        return this;
      }

      private float roshanKills_ ;
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public boolean hasRoshanKills() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public float getRoshanKills() {
        return roshanKills_;
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public Builder setRoshanKills(float value) {
        bitField0_ |= 0x00000800;
        roshanKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public Builder clearRoshanKills() {
        bitField0_ = (bitField0_ & ~0x00000800);
        roshanKills_ = 0F;
        onChanged();
        return this;
      }

      private float multiplierPremium_ ;
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public boolean hasMultiplierPremium() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public float getMultiplierPremium() {
        return multiplierPremium_;
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public Builder setMultiplierPremium(float value) {
        bitField0_ |= 0x00001000;
        multiplierPremium_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public Builder clearMultiplierPremium() {
        bitField0_ = (bitField0_ & ~0x00001000);
        multiplierPremium_ = 0F;
        onChanged();
        return this;
      }

      private float multiplierProfessional_ ;
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public boolean hasMultiplierProfessional() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public float getMultiplierProfessional() {
        return multiplierProfessional_;
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public Builder setMultiplierProfessional(float value) {
        bitField0_ |= 0x00002000;
        multiplierProfessional_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public Builder clearMultiplierProfessional() {
        bitField0_ = (bitField0_ & ~0x00002000);
        multiplierProfessional_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgFantasyLeagueScoring)
    }

    static {
      defaultInstance = new CMsgFantasyLeagueScoring(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgFantasyLeagueScoring)
  }

  public interface CMsgDOTAFantasyLeagueInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    boolean hasCommissionerAccountId();
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    int getCommissionerAccountId();

    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    boolean hasSelectionMode();
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode();

    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    boolean hasTeamCount();
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    int getTeamCount();

    /**
     * <code>optional uint64 logo = 6;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    long getLogo();

    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    boolean hasScoring();
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getScoring();
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder();

    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    boolean hasDraftTime();
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    int getDraftTime();

    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    boolean hasDraftPickTime();
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    int getDraftPickTime();

    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    boolean hasSeasonStart();
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    int getSeasonStart();

    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    boolean hasSeasonLength();
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    int getSeasonLength();

    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    boolean hasVetoVotes();
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    int getVetoVotes();

    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    boolean hasAcquisitions();
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    int getAcquisitions();

    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    boolean hasSlot1();
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    int getSlot1();

    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    boolean hasSlot2();
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    int getSlot2();

    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    boolean hasSlot3();
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    int getSlot3();

    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    boolean hasSlot4();
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    int getSlot4();

    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    boolean hasSlot5();
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    int getSlot5();

    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    boolean hasBenchSlots();
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    int getBenchSlots();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> 
        getOwnerInfoList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    int getOwnerInfoCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
        getOwnerInfoOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
        int index);

    /**
     * <code>repeated uint32 players = 26;</code>
     */
    java.util.List<java.lang.Integer> getPlayersList();
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    int getPlayers(int index);

    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    boolean hasTimeZone();
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    int getTimeZone();

    /**
     * <code>optional uint32 season = 28;</code>
     */
    boolean hasSeason();
    /**
     * <code>optional uint32 season = 28;</code>
     */
    int getSeason();

    /**
     * <code>optional string password = 29;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 29;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 29;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfo}
   */
  public static final class CMsgDOTAFantasyLeagueInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfo)
      CMsgDOTAFantasyLeagueInfoOrBuilder {
    // Use CMsgDOTAFantasyLeagueInfo.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueInfo defaultInstance;
    public static CMsgDOTAFantasyLeagueInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              commissionerAccountId_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fantasyLeagueName_ = bs;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode value = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                selectionMode_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              teamCount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              logo_ = input.readUInt64();
              break;
            }
            case 58: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = scoring_.toBuilder();
              }
              scoring_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scoring_);
                scoring_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              draftTime_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              draftPickTime_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              seasonStart_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              seasonLength_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              vetoVotes_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00001000;
              acquisitions_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00002000;
              slot1_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00004000;
              slot2_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00008000;
              slot3_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00010000;
              slot4_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              slot5_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00040000;
              benchSlots_ = input.readUInt32();
              break;
            }
            case 202: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                ownerInfo_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo>();
                mutable_bitField0_ |= 0x00080000;
              }
              ownerInfo_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.PARSER, extensionRegistry));
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              players_.add(input.readUInt32());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                players_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              bitField0_ |= 0x00080000;
              timeZone_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00100000;
              season_ = input.readUInt32();
              break;
            }
            case 234: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          ownerInfo_ = java.util.Collections.unmodifiableList(ownerInfo_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfo> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfo>() {
      public CMsgDOTAFantasyLeagueInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfo> getParserForType() {
      return PARSER;
    }

    public interface OwnerInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      boolean hasOwnerAccountId();
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      int getOwnerAccountId();

      /**
       * <code>optional bool left_league = 2;</code>
       */
      boolean hasLeftLeague();
      /**
       * <code>optional bool left_league = 2;</code>
       */
      boolean getLeftLeague();

      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      java.util.List<java.lang.Integer> getPlayerAccountIdList();
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      int getPlayerAccountIdCount();
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      int getPlayerAccountId(int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfo.OwnerInfo}
     */
    public static final class OwnerInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
        OwnerInfoOrBuilder {
      // Use OwnerInfo.newBuilder() to construct.
      private OwnerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private OwnerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final OwnerInfo defaultInstance;
      public static OwnerInfo getDefaultInstance() {
        return defaultInstance;
      }

      public OwnerInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private OwnerInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ownerAccountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                leftLeague_ = input.readBool();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  playerAccountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                playerAccountId_.add(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  playerAccountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  playerAccountId_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = java.util.Collections.unmodifiableList(playerAccountId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<OwnerInfo> PARSER =
          new com.google.protobuf.AbstractParser<OwnerInfo>() {
        public OwnerInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new OwnerInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<OwnerInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 1;
      private int ownerAccountId_;
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }

      public static final int LEFT_LEAGUE_FIELD_NUMBER = 2;
      private boolean leftLeague_;
      /**
       * <code>optional bool left_league = 2;</code>
       */
      public boolean hasLeftLeague() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool left_league = 2;</code>
       */
      public boolean getLeftLeague() {
        return leftLeague_;
      }

      public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> playerAccountId_;
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerAccountIdList() {
        return playerAccountId_;
      }
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountIdCount() {
        return playerAccountId_.size();
      }
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId(int index) {
        return playerAccountId_.get(index);
      }

      private void initFields() {
        ownerAccountId_ = 0;
        leftLeague_ = false;
        playerAccountId_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, leftLeague_);
        }
        for (int i = 0; i < playerAccountId_.size(); i++) {
          output.writeUInt32(3, playerAccountId_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, leftLeague_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerAccountId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerAccountId_.get(i));
          }
          size += dataSize;
          size += 1 * getPlayerAccountIdList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueInfo.OwnerInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ownerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          leftLeague_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          playerAccountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ownerAccountId_ = ownerAccountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.leftLeague_ = leftLeague_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = java.util.Collections.unmodifiableList(playerAccountId_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerAccountId_ = playerAccountId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance()) return this;
          if (other.hasOwnerAccountId()) {
            setOwnerAccountId(other.getOwnerAccountId());
          }
          if (other.hasLeftLeague()) {
            setLeftLeague(other.getLeftLeague());
          }
          if (!other.playerAccountId_.isEmpty()) {
            if (playerAccountId_.isEmpty()) {
              playerAccountId_ = other.playerAccountId_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerAccountIdIsMutable();
              playerAccountId_.addAll(other.playerAccountId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ownerAccountId_ ;
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public boolean hasOwnerAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public int getOwnerAccountId() {
          return ownerAccountId_;
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public Builder setOwnerAccountId(int value) {
          bitField0_ |= 0x00000001;
          ownerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public Builder clearOwnerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId_ = 0;
          onChanged();
          return this;
        }

        private boolean leftLeague_ ;
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public boolean hasLeftLeague() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public boolean getLeftLeague() {
          return leftLeague_;
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public Builder setLeftLeague(boolean value) {
          bitField0_ |= 0x00000002;
          leftLeague_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public Builder clearLeftLeague() {
          bitField0_ = (bitField0_ & ~0x00000002);
          leftLeague_ = false;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> playerAccountId_ = java.util.Collections.emptyList();
        private void ensurePlayerAccountIdIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = new java.util.ArrayList<java.lang.Integer>(playerAccountId_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayerAccountIdList() {
          return java.util.Collections.unmodifiableList(playerAccountId_);
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public int getPlayerAccountIdCount() {
          return playerAccountId_.size();
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public int getPlayerAccountId(int index) {
          return playerAccountId_.get(index);
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder setPlayerAccountId(
            int index, int value) {
          ensurePlayerAccountIdIsMutable();
          playerAccountId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder addPlayerAccountId(int value) {
          ensurePlayerAccountIdIsMutable();
          playerAccountId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder addAllPlayerAccountId(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerAccountIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerAccountId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder clearPlayerAccountId() {
          playerAccountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
      }

      static {
        defaultInstance = new OwnerInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COMMISSIONER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int commissionerAccountId_;
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    public boolean hasCommissionerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    public int getCommissionerAccountId() {
      return commissionerAccountId_;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 3;
    private java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELECTION_MODE_FIELD_NUMBER = 4;
    private telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode selectionMode_;
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public boolean hasSelectionMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode() {
      return selectionMode_;
    }

    public static final int TEAM_COUNT_FIELD_NUMBER = 5;
    private int teamCount_;
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    public boolean hasTeamCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    public int getTeamCount() {
      return teamCount_;
    }

    public static final int LOGO_FIELD_NUMBER = 6;
    private long logo_;
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int SCORING_FIELD_NUMBER = 7;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring scoring_;
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public boolean hasScoring() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getScoring() {
      return scoring_;
    }
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder() {
      return scoring_;
    }

    public static final int DRAFT_TIME_FIELD_NUMBER = 12;
    private int draftTime_;
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    public boolean hasDraftTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    public int getDraftTime() {
      return draftTime_;
    }

    public static final int DRAFT_PICK_TIME_FIELD_NUMBER = 13;
    private int draftPickTime_;
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    public boolean hasDraftPickTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    public int getDraftPickTime() {
      return draftPickTime_;
    }

    public static final int SEASON_START_FIELD_NUMBER = 15;
    private int seasonStart_;
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    public boolean hasSeasonStart() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    public int getSeasonStart() {
      return seasonStart_;
    }

    public static final int SEASON_LENGTH_FIELD_NUMBER = 16;
    private int seasonLength_;
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    public boolean hasSeasonLength() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    public int getSeasonLength() {
      return seasonLength_;
    }

    public static final int VETO_VOTES_FIELD_NUMBER = 17;
    private int vetoVotes_;
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    public boolean hasVetoVotes() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    public int getVetoVotes() {
      return vetoVotes_;
    }

    public static final int ACQUISITIONS_FIELD_NUMBER = 18;
    private int acquisitions_;
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    public boolean hasAcquisitions() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    public int getAcquisitions() {
      return acquisitions_;
    }

    public static final int SLOT_1_FIELD_NUMBER = 19;
    private int slot1_;
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    public boolean hasSlot1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    public int getSlot1() {
      return slot1_;
    }

    public static final int SLOT_2_FIELD_NUMBER = 20;
    private int slot2_;
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    public boolean hasSlot2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    public int getSlot2() {
      return slot2_;
    }

    public static final int SLOT_3_FIELD_NUMBER = 21;
    private int slot3_;
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    public boolean hasSlot3() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    public int getSlot3() {
      return slot3_;
    }

    public static final int SLOT_4_FIELD_NUMBER = 22;
    private int slot4_;
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    public boolean hasSlot4() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    public int getSlot4() {
      return slot4_;
    }

    public static final int SLOT_5_FIELD_NUMBER = 23;
    private int slot5_;
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    public boolean hasSlot5() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    public int getSlot5() {
      return slot5_;
    }

    public static final int BENCH_SLOTS_FIELD_NUMBER = 24;
    private int benchSlots_;
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    public boolean hasBenchSlots() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    public int getBenchSlots() {
      return benchSlots_;
    }

    public static final int OWNER_INFO_FIELD_NUMBER = 25;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> ownerInfo_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> getOwnerInfoList() {
      return ownerInfo_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
        getOwnerInfoOrBuilderList() {
      return ownerInfo_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public int getOwnerInfoCount() {
      return ownerInfo_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index) {
      return ownerInfo_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
        int index) {
      return ownerInfo_.get(index);
    }

    public static final int PLAYERS_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Integer> players_;
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public int getPlayers(int index) {
      return players_.get(index);
    }

    public static final int TIME_ZONE_FIELD_NUMBER = 27;
    private int timeZone_;
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    public boolean hasTimeZone() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    public int getTimeZone() {
      return timeZone_;
    }

    public static final int SEASON_FIELD_NUMBER = 28;
    private int season_;
    /**
     * <code>optional uint32 season = 28;</code>
     */
    public boolean hasSeason() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 season = 28;</code>
     */
    public int getSeason() {
      return season_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 29;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 29;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string password = 29;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 29;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      commissionerAccountId_ = 0;
      fantasyLeagueName_ = "";
      selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
      teamCount_ = 0;
      logo_ = 0L;
      scoring_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
      draftTime_ = 0;
      draftPickTime_ = 0;
      seasonStart_ = 0;
      seasonLength_ = 0;
      vetoVotes_ = 0;
      acquisitions_ = 0;
      slot1_ = 0;
      slot2_ = 0;
      slot3_ = 0;
      slot4_ = 0;
      slot5_ = 0;
      benchSlots_ = 0;
      ownerInfo_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
      timeZone_ = 0;
      season_ = 0;
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, commissionerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, selectionMode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, teamCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, logo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, scoring_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(12, draftTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(13, draftPickTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(15, seasonStart_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(16, seasonLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(17, vetoVotes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(18, acquisitions_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(19, slot1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(20, slot2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(21, slot3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(22, slot4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(23, slot5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(24, benchSlots_);
      }
      for (int i = 0; i < ownerInfo_.size(); i++) {
        output.writeMessage(25, ownerInfo_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeUInt32(26, players_.get(i));
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(27, timeZone_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(28, season_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(29, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, commissionerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, selectionMode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, logo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, scoring_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, draftTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, draftPickTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, seasonStart_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, seasonLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, vetoVotes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, acquisitions_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, slot1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, slot2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, slot3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, slot4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, slot5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, benchSlots_);
      }
      for (int i = 0; i < ownerInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, ownerInfo_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(players_.get(i));
        }
        size += dataSize;
        size += 2 * getPlayersList().size();
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, timeZone_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, season_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(29, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfo)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScoringFieldBuilder();
          getOwnerInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        commissionerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
        bitField0_ = (bitField0_ & ~0x00000008);
        teamCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (scoringBuilder_ == null) {
          scoring_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
        } else {
          scoringBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        draftTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        draftPickTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        seasonStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        seasonLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        vetoVotes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        acquisitions_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        slot1_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        slot2_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        slot3_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        slot4_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        slot5_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        benchSlots_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (ownerInfoBuilder_ == null) {
          ownerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          ownerInfoBuilder_.clear();
        }
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        timeZone_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        season_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commissionerAccountId_ = commissionerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.selectionMode_ = selectionMode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamCount_ = teamCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (scoringBuilder_ == null) {
          result.scoring_ = scoring_;
        } else {
          result.scoring_ = scoringBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.draftTime_ = draftTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.draftPickTime_ = draftPickTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.seasonStart_ = seasonStart_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.seasonLength_ = seasonLength_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vetoVotes_ = vetoVotes_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.acquisitions_ = acquisitions_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.slot1_ = slot1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.slot2_ = slot2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.slot3_ = slot3_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.slot4_ = slot4_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.slot5_ = slot5_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.benchSlots_ = benchSlots_;
        if (ownerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            ownerInfo_ = java.util.Collections.unmodifiableList(ownerInfo_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.ownerInfo_ = ownerInfo_;
        } else {
          result.ownerInfo_ = ownerInfoBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.players_ = players_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.timeZone_ = timeZone_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.season_ = season_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCommissionerAccountId()) {
          setCommissionerAccountId(other.getCommissionerAccountId());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000004;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasSelectionMode()) {
          setSelectionMode(other.getSelectionMode());
        }
        if (other.hasTeamCount()) {
          setTeamCount(other.getTeamCount());
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasScoring()) {
          mergeScoring(other.getScoring());
        }
        if (other.hasDraftTime()) {
          setDraftTime(other.getDraftTime());
        }
        if (other.hasDraftPickTime()) {
          setDraftPickTime(other.getDraftPickTime());
        }
        if (other.hasSeasonStart()) {
          setSeasonStart(other.getSeasonStart());
        }
        if (other.hasSeasonLength()) {
          setSeasonLength(other.getSeasonLength());
        }
        if (other.hasVetoVotes()) {
          setVetoVotes(other.getVetoVotes());
        }
        if (other.hasAcquisitions()) {
          setAcquisitions(other.getAcquisitions());
        }
        if (other.hasSlot1()) {
          setSlot1(other.getSlot1());
        }
        if (other.hasSlot2()) {
          setSlot2(other.getSlot2());
        }
        if (other.hasSlot3()) {
          setSlot3(other.getSlot3());
        }
        if (other.hasSlot4()) {
          setSlot4(other.getSlot4());
        }
        if (other.hasSlot5()) {
          setSlot5(other.getSlot5());
        }
        if (other.hasBenchSlots()) {
          setBenchSlots(other.getBenchSlots());
        }
        if (ownerInfoBuilder_ == null) {
          if (!other.ownerInfo_.isEmpty()) {
            if (ownerInfo_.isEmpty()) {
              ownerInfo_ = other.ownerInfo_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureOwnerInfoIsMutable();
              ownerInfo_.addAll(other.ownerInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.ownerInfo_.isEmpty()) {
            if (ownerInfoBuilder_.isEmpty()) {
              ownerInfoBuilder_.dispose();
              ownerInfoBuilder_ = null;
              ownerInfo_ = other.ownerInfo_;
              bitField0_ = (bitField0_ & ~0x00080000);
              ownerInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOwnerInfoFieldBuilder() : null;
            } else {
              ownerInfoBuilder_.addAllMessages(other.ownerInfo_);
            }
          }
        }
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        if (other.hasTimeZone()) {
          setTimeZone(other.getTimeZone());
        }
        if (other.hasSeason()) {
          setSeason(other.getSeason());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00800000;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int commissionerAccountId_ ;
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public boolean hasCommissionerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public int getCommissionerAccountId() {
        return commissionerAccountId_;
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public Builder setCommissionerAccountId(int value) {
        bitField0_ |= 0x00000002;
        commissionerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public Builder clearCommissionerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commissionerAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public boolean hasSelectionMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode getSelectionMode() {
        return selectionMode_;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder setSelectionMode(telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        selectionMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder clearSelectionMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        selectionMode_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID;
        onChanged();
        return this;
      }

      private int teamCount_ ;
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public boolean hasTeamCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public int getTeamCount() {
        return teamCount_;
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public Builder setTeamCount(int value) {
        bitField0_ |= 0x00000010;
        teamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public Builder clearTeamCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamCount_ = 0;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000020;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring scoring_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder> scoringBuilder_;
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public boolean hasScoring() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getScoring() {
        if (scoringBuilder_ == null) {
          return scoring_;
        } else {
          return scoringBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder setScoring(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring value) {
        if (scoringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scoring_ = value;
          onChanged();
        } else {
          scoringBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder setScoring(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder builderForValue) {
        if (scoringBuilder_ == null) {
          scoring_ = builderForValue.build();
          onChanged();
        } else {
          scoringBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder mergeScoring(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring value) {
        if (scoringBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              scoring_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance()) {
            scoring_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.newBuilder(scoring_).mergeFrom(value).buildPartial();
          } else {
            scoring_ = value;
          }
          onChanged();
        } else {
          scoringBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder clearScoring() {
        if (scoringBuilder_ == null) {
          scoring_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
          onChanged();
        } else {
          scoringBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder getScoringBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getScoringFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder() {
        if (scoringBuilder_ != null) {
          return scoringBuilder_.getMessageOrBuilder();
        } else {
          return scoring_;
        }
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder> 
          getScoringFieldBuilder() {
        if (scoringBuilder_ == null) {
          scoringBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder>(
                  getScoring(),
                  getParentForChildren(),
                  isClean());
          scoring_ = null;
        }
        return scoringBuilder_;
      }

      private int draftTime_ ;
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public boolean hasDraftTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public int getDraftTime() {
        return draftTime_;
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public Builder setDraftTime(int value) {
        bitField0_ |= 0x00000080;
        draftTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public Builder clearDraftTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        draftTime_ = 0;
        onChanged();
        return this;
      }

      private int draftPickTime_ ;
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public boolean hasDraftPickTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public int getDraftPickTime() {
        return draftPickTime_;
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public Builder setDraftPickTime(int value) {
        bitField0_ |= 0x00000100;
        draftPickTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public Builder clearDraftPickTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        draftPickTime_ = 0;
        onChanged();
        return this;
      }

      private int seasonStart_ ;
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public boolean hasSeasonStart() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public int getSeasonStart() {
        return seasonStart_;
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public Builder setSeasonStart(int value) {
        bitField0_ |= 0x00000200;
        seasonStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public Builder clearSeasonStart() {
        bitField0_ = (bitField0_ & ~0x00000200);
        seasonStart_ = 0;
        onChanged();
        return this;
      }

      private int seasonLength_ ;
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public boolean hasSeasonLength() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public int getSeasonLength() {
        return seasonLength_;
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public Builder setSeasonLength(int value) {
        bitField0_ |= 0x00000400;
        seasonLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public Builder clearSeasonLength() {
        bitField0_ = (bitField0_ & ~0x00000400);
        seasonLength_ = 0;
        onChanged();
        return this;
      }

      private int vetoVotes_ ;
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public boolean hasVetoVotes() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public int getVetoVotes() {
        return vetoVotes_;
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public Builder setVetoVotes(int value) {
        bitField0_ |= 0x00000800;
        vetoVotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public Builder clearVetoVotes() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vetoVotes_ = 0;
        onChanged();
        return this;
      }

      private int acquisitions_ ;
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public boolean hasAcquisitions() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public int getAcquisitions() {
        return acquisitions_;
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public Builder setAcquisitions(int value) {
        bitField0_ |= 0x00001000;
        acquisitions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public Builder clearAcquisitions() {
        bitField0_ = (bitField0_ & ~0x00001000);
        acquisitions_ = 0;
        onChanged();
        return this;
      }

      private int slot1_ ;
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public boolean hasSlot1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public int getSlot1() {
        return slot1_;
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public Builder setSlot1(int value) {
        bitField0_ |= 0x00002000;
        slot1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public Builder clearSlot1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        slot1_ = 0;
        onChanged();
        return this;
      }

      private int slot2_ ;
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public boolean hasSlot2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public int getSlot2() {
        return slot2_;
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public Builder setSlot2(int value) {
        bitField0_ |= 0x00004000;
        slot2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public Builder clearSlot2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        slot2_ = 0;
        onChanged();
        return this;
      }

      private int slot3_ ;
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public boolean hasSlot3() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public int getSlot3() {
        return slot3_;
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public Builder setSlot3(int value) {
        bitField0_ |= 0x00008000;
        slot3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public Builder clearSlot3() {
        bitField0_ = (bitField0_ & ~0x00008000);
        slot3_ = 0;
        onChanged();
        return this;
      }

      private int slot4_ ;
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public boolean hasSlot4() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public int getSlot4() {
        return slot4_;
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public Builder setSlot4(int value) {
        bitField0_ |= 0x00010000;
        slot4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public Builder clearSlot4() {
        bitField0_ = (bitField0_ & ~0x00010000);
        slot4_ = 0;
        onChanged();
        return this;
      }

      private int slot5_ ;
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public boolean hasSlot5() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public int getSlot5() {
        return slot5_;
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public Builder setSlot5(int value) {
        bitField0_ |= 0x00020000;
        slot5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public Builder clearSlot5() {
        bitField0_ = (bitField0_ & ~0x00020000);
        slot5_ = 0;
        onChanged();
        return this;
      }

      private int benchSlots_ ;
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public boolean hasBenchSlots() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public int getBenchSlots() {
        return benchSlots_;
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public Builder setBenchSlots(int value) {
        bitField0_ |= 0x00040000;
        benchSlots_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public Builder clearBenchSlots() {
        bitField0_ = (bitField0_ & ~0x00040000);
        benchSlots_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> ownerInfo_ =
        java.util.Collections.emptyList();
      private void ensureOwnerInfoIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          ownerInfo_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo>(ownerInfo_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> ownerInfoBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> getOwnerInfoList() {
        if (ownerInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ownerInfo_);
        } else {
          return ownerInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public int getOwnerInfoCount() {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.size();
        } else {
          return ownerInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index) {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.get(index);
        } else {
          return ownerInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder setOwnerInfo(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.set(index, value);
          onChanged();
        } else {
          ownerInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder setOwnerInfo(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(value);
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(index, value);
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addAllOwnerInfo(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> values) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ownerInfo_);
          onChanged();
        } else {
          ownerInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder clearOwnerInfo() {
        if (ownerInfoBuilder_ == null) {
          ownerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          ownerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder removeOwnerInfo(int index) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.remove(index);
          onChanged();
        } else {
          ownerInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder getOwnerInfoBuilder(
          int index) {
        return getOwnerInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
          int index) {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.get(index);  } else {
          return ownerInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
           getOwnerInfoOrBuilderList() {
        if (ownerInfoBuilder_ != null) {
          return ownerInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ownerInfo_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder addOwnerInfoBuilder() {
        return getOwnerInfoFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder addOwnerInfoBuilder(
          int index) {
        return getOwnerInfoFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder> 
           getOwnerInfoBuilderList() {
        return getOwnerInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
          getOwnerInfoFieldBuilder() {
        if (ownerInfoBuilder_ == null) {
          ownerInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder>(
                  ownerInfo_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          ownerInfo_ = null;
        }
        return ownerInfoBuilder_;
      }

      private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = new java.util.ArrayList<java.lang.Integer>(players_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return java.util.Collections.unmodifiableList(players_);
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder setPlayers(
          int index, int value) {
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder addPlayers(int value) {
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder clearPlayers() {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      private int timeZone_ ;
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public boolean hasTimeZone() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public int getTimeZone() {
        return timeZone_;
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public Builder setTimeZone(int value) {
        bitField0_ |= 0x00200000;
        timeZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public Builder clearTimeZone() {
        bitField0_ = (bitField0_ & ~0x00200000);
        timeZone_ = 0;
        onChanged();
        return this;
      }

      private int season_ ;
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public boolean hasSeason() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public int getSeason() {
        return season_;
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public Builder setSeason(int value) {
        bitField0_ |= 0x00400000;
        season_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public Builder clearSeason() {
        bitField0_ = (bitField0_ & ~0x00400000);
        season_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 29;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00800000);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        password_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfo)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfo)
  }

  public interface CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    boolean hasEditInfo();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo getEditInfo();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoRequest}
   */
  public static final class CMsgDOTAFantasyLeagueEditInfoRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInfoRequest)
      CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueEditInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInfoRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueEditInfoRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueEditInfoRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = editInfo_.toBuilder();
              }
              editInfo_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(editInfo_);
                editInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInfoRequest>() {
      public CMsgDOTAFantasyLeagueEditInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueEditInfoRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int EDIT_INFO_FIELD_NUMBER = 2;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo editInfo_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public boolean hasEditInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo getEditInfo() {
      return editInfo_;
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder() {
      return editInfo_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      editInfo_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, editInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, editInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInfoRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEditInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (editInfoBuilder_ == null) {
          editInfo_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
        } else {
          editInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (editInfoBuilder_ == null) {
          result.editInfo_ = editInfo_;
        } else {
          result.editInfo_ = editInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasEditInfo()) {
          mergeEditInfo(other.getEditInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo editInfo_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder> editInfoBuilder_;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public boolean hasEditInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo getEditInfo() {
        if (editInfoBuilder_ == null) {
          return editInfo_;
        } else {
          return editInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder setEditInfo(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo value) {
        if (editInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          editInfo_ = value;
          onChanged();
        } else {
          editInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder setEditInfo(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder builderForValue) {
        if (editInfoBuilder_ == null) {
          editInfo_ = builderForValue.build();
          onChanged();
        } else {
          editInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder mergeEditInfo(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo value) {
        if (editInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              editInfo_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance()) {
            editInfo_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.newBuilder(editInfo_).mergeFrom(value).buildPartial();
          } else {
            editInfo_ = value;
          }
          onChanged();
        } else {
          editInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder clearEditInfo() {
        if (editInfoBuilder_ == null) {
          editInfo_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
          onChanged();
        } else {
          editInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder getEditInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEditInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder() {
        if (editInfoBuilder_ != null) {
          return editInfoBuilder_.getMessageOrBuilder();
        } else {
          return editInfo_;
        }
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder> 
          getEditInfoFieldBuilder() {
        if (editInfoBuilder_ == null) {
          editInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoOrBuilder>(
                  getEditInfo(),
                  getParentForChildren(),
                  isClean());
          editInfo_ = null;
        }
        return editInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInfoRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueEditInfoRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInfoRequest)
  }

  public interface CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoResponse}
   */
  public static final class CMsgDOTAFantasyLeagueEditInfoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInfoResponse)
      CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueEditInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueEditInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueEditInfoResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInfoResponse>() {
      public CMsgDOTAFantasyLeagueEditInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueEditInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueEditInfoResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueEditInfoResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInfoResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInfoResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueEditInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInfoResponse)
  }

  public interface CMsgDOTAFantasyLeagueFindRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueFindRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueFindRequest}
   */
  public static final class CMsgDOTAFantasyLeagueFindRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueFindRequest)
      CMsgDOTAFantasyLeagueFindRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueFindRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueFindRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueFindRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueFindRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueFindRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueFindRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueFindRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueFindRequest>() {
      public CMsgDOTAFantasyLeagueFindRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueFindRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueFindRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueFindRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueFindRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueFindRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueFindRequest)
  }

  public interface CMsgDOTAFantasyLeagueFindResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueFindResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult();

    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    boolean hasCommissionerName();
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    java.lang.String getCommissionerName();
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getCommissionerNameBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueFindResponse}
   */
  public static final class CMsgDOTAFantasyLeagueFindResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueFindResponse)
      CMsgDOTAFantasyLeagueFindResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueFindResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueFindResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueFindResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueFindResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueFindResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueFindResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueFindResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fantasyLeagueName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              commissionerName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueFindResponse>() {
      public CMsgDOTAFantasyLeagueFindResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueFindResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueFindResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 1;</code>
       */
      ERROR_LEAGUE_NOT_FOUND(1, 1),
      /**
       * <code>ERROR_BAD_PASSWORD = 2;</code>
       */
      ERROR_BAD_PASSWORD(2, 2),
      /**
       * <code>ERROR_UNSPECIFIED = 3;</code>
       */
      ERROR_UNSPECIFIED(3, 3),
      /**
       * <code>ERROR_FULL = 4;</code>
       */
      ERROR_FULL(4, 4),
      /**
       * <code>ERROR_ALREADY_MEMBER = 5;</code>
       */
      ERROR_ALREADY_MEMBER(5, 5),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 6;</code>
       */
      ERROR_LEAGUE_LOCKED(6, 6),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 1;</code>
       */
      public static final int ERROR_LEAGUE_NOT_FOUND_VALUE = 1;
      /**
       * <code>ERROR_BAD_PASSWORD = 2;</code>
       */
      public static final int ERROR_BAD_PASSWORD_VALUE = 2;
      /**
       * <code>ERROR_UNSPECIFIED = 3;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 3;
      /**
       * <code>ERROR_FULL = 4;</code>
       */
      public static final int ERROR_FULL_VALUE = 4;
      /**
       * <code>ERROR_ALREADY_MEMBER = 5;</code>
       */
      public static final int ERROR_ALREADY_MEMBER_VALUE = 5;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 6;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 6;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_LEAGUE_NOT_FOUND;
          case 2: return ERROR_BAD_PASSWORD;
          case 3: return ERROR_UNSPECIFIED;
          case 4: return ERROR_FULL;
          case 5: return ERROR_ALREADY_MEMBER;
          case 6: return ERROR_LEAGUE_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueFindResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 2;
    private java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMISSIONER_NAME_FIELD_NUMBER = 3;
    private java.lang.Object commissionerName_;
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public boolean hasCommissionerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public java.lang.String getCommissionerName() {
      java.lang.Object ref = commissionerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          commissionerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCommissionerNameBytes() {
      java.lang.Object ref = commissionerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commissionerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS;
      fantasyLeagueName_ = "";
      commissionerName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCommissionerNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCommissionerNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueFindResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueFindResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        commissionerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.commissionerName_ = commissionerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000002;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasCommissionerName()) {
          bitField0_ |= 0x00000004;
          commissionerName_ = other.commissionerName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commissionerName_ = "";
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public boolean hasCommissionerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public java.lang.String getCommissionerName() {
        java.lang.Object ref = commissionerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            commissionerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCommissionerNameBytes() {
        java.lang.Object ref = commissionerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commissionerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder setCommissionerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        commissionerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder clearCommissionerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        commissionerName_ = getDefaultInstance().getCommissionerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder setCommissionerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        commissionerName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueFindResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueFindResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueFindResponse)
  }

  public interface CMsgDOTAFantasyLeagueInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfoRequest}
   */
  public static final class CMsgDOTAFantasyLeagueInfoRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfoRequest)
      CMsgDOTAFantasyLeagueInfoRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfoRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueInfoRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueInfoRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueInfoRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfoRequest>() {
      public CMsgDOTAFantasyLeagueInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueInfoRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfoRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfoRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueInfoRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfoRequest)
  }

  public interface CMsgDOTAFantasyLeagueInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfoResponse}
   */
  public static final class CMsgDOTAFantasyLeagueInfoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfoResponse)
      CMsgDOTAFantasyLeagueInfoResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueInfoResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfoResponse>() {
      public CMsgDOTAFantasyLeagueInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueInfoResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      ERROR_BAD_LEAGUE_ID(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_BAD_LEAGUE_ID_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_BAD_LEAGUE_ID;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueInfoResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfoResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfoResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfoResponse)
  }

  public interface CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsRequest}
   */
  public static final class CMsgDOTAFantasyLeagueMatchupsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsRequest)
      CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueMatchupsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueMatchupsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueMatchupsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueMatchupsRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueMatchupsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueMatchupsRequest>() {
      public CMsgDOTAFantasyLeagueMatchupsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueMatchupsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueMatchupsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsRequest)
  }

  public interface CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> 
        getWeeklyMatchupsList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    int getWeeklyMatchupsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
        getWeeklyMatchupsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse}
   */
  public static final class CMsgDOTAFantasyLeagueMatchupsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse)
      CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueMatchupsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueMatchupsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueMatchupsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueMatchupsResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueMatchupsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                weeklyMatchups_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups>();
                mutable_bitField0_ |= 0x00000004;
              }
              weeklyMatchups_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          weeklyMatchups_ = java.util.Collections.unmodifiableList(weeklyMatchups_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueMatchupsResponse>() {
      public CMsgDOTAFantasyLeagueMatchupsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueMatchupsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueMatchupsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      ERROR_BAD_LEAGUE_ID(2, 2),
      /**
       * <code>ERROR_NO_PERMISSION = 3;</code>
       */
      ERROR_NO_PERMISSION(3, 3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_BAD_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_NO_PERMISSION = 3;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 3;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_BAD_LEAGUE_ID;
          case 3: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueMatchupsResponse.EResult)
    }

    public interface MatchupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      boolean hasOwnerAccountId1();
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      int getOwnerAccountId1();

      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      boolean hasOwnerAccountId2();
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      int getOwnerAccountId2();

      /**
       * <code>optional float score_1 = 3;</code>
       */
      boolean hasScore1();
      /**
       * <code>optional float score_1 = 3;</code>
       */
      float getScore1();

      /**
       * <code>optional float score_2 = 4;</code>
       */
      boolean hasScore2();
      /**
       * <code>optional float score_2 = 4;</code>
       */
      float getScore2();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.Matchup}
     */
    public static final class Matchup extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
        MatchupOrBuilder {
      // Use Matchup.newBuilder() to construct.
      private Matchup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Matchup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Matchup defaultInstance;
      public static Matchup getDefaultInstance() {
        return defaultInstance;
      }

      public Matchup getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Matchup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ownerAccountId1_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId2_ = input.readUInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                score1_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                score2_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder.class);
      }

      public static com.google.protobuf.Parser<Matchup> PARSER =
          new com.google.protobuf.AbstractParser<Matchup>() {
        public Matchup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Matchup(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Matchup> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int OWNER_ACCOUNT_ID_1_FIELD_NUMBER = 1;
      private int ownerAccountId1_;
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      public boolean hasOwnerAccountId1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      public int getOwnerAccountId1() {
        return ownerAccountId1_;
      }

      public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 2;
      private int ownerAccountId2_;
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }

      public static final int SCORE_1_FIELD_NUMBER = 3;
      private float score1_;
      /**
       * <code>optional float score_1 = 3;</code>
       */
      public boolean hasScore1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float score_1 = 3;</code>
       */
      public float getScore1() {
        return score1_;
      }

      public static final int SCORE_2_FIELD_NUMBER = 4;
      private float score2_;
      /**
       * <code>optional float score_2 = 4;</code>
       */
      public boolean hasScore2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float score_2 = 4;</code>
       */
      public float getScore2() {
        return score2_;
      }

      private void initFields() {
        ownerAccountId1_ = 0;
        ownerAccountId2_ = 0;
        score1_ = 0F;
        score2_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, score1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, score2_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, score1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, score2_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.Matchup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ownerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          score1_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          score2_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ownerAccountId1_ = ownerAccountId1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId2_ = ownerAccountId2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.score1_ = score1_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.score2_ = score2_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance()) return this;
          if (other.hasOwnerAccountId1()) {
            setOwnerAccountId1(other.getOwnerAccountId1());
          }
          if (other.hasOwnerAccountId2()) {
            setOwnerAccountId2(other.getOwnerAccountId2());
          }
          if (other.hasScore1()) {
            setScore1(other.getScore1());
          }
          if (other.hasScore2()) {
            setScore2(other.getScore2());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ownerAccountId1_ ;
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public boolean hasOwnerAccountId1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public int getOwnerAccountId1() {
          return ownerAccountId1_;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public Builder setOwnerAccountId1(int value) {
          bitField0_ |= 0x00000001;
          ownerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public Builder clearOwnerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId2_ ;
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public boolean hasOwnerAccountId2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public int getOwnerAccountId2() {
          return ownerAccountId2_;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public Builder setOwnerAccountId2(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public Builder clearOwnerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private float score1_ ;
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public boolean hasScore1() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public float getScore1() {
          return score1_;
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public Builder setScore1(float value) {
          bitField0_ |= 0x00000004;
          score1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public Builder clearScore1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          score1_ = 0F;
          onChanged();
          return this;
        }

        private float score2_ ;
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public boolean hasScore2() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public float getScore2() {
          return score2_;
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public Builder setScore2(float value) {
          bitField0_ |= 0x00000008;
          score2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public Builder clearScore2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          score2_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
      }

      static {
        defaultInstance = new Matchup(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
    }

    public interface WeeklyMatchupsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> 
          getMatchupList();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index);
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      int getMatchupCount();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
          getMatchupOrBuilderList();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
          int index);

      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      int getStartTime();

      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      boolean hasEndTime();
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      int getEndTime();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups}
     */
    public static final class WeeklyMatchups extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
        WeeklyMatchupsOrBuilder {
      // Use WeeklyMatchups.newBuilder() to construct.
      private WeeklyMatchups(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private WeeklyMatchups(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final WeeklyMatchups defaultInstance;
      public static WeeklyMatchups getDefaultInstance() {
        return defaultInstance;
      }

      public WeeklyMatchups getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private WeeklyMatchups(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  matchup_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup>();
                  mutable_bitField0_ |= 0x00000001;
                }
                matchup_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.PARSER, extensionRegistry));
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            matchup_ = java.util.Collections.unmodifiableList(matchup_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder.class);
      }

      public static com.google.protobuf.Parser<WeeklyMatchups> PARSER =
          new com.google.protobuf.AbstractParser<WeeklyMatchups>() {
        public WeeklyMatchups parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WeeklyMatchups(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<WeeklyMatchups> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MATCHUP_FIELD_NUMBER = 1;
      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> matchup_;
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> getMatchupList() {
        return matchup_;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
          getMatchupOrBuilderList() {
        return matchup_;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public int getMatchupCount() {
        return matchup_.size();
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index) {
        return matchup_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
          int index) {
        return matchup_.get(index);
      }

      public static final int START_TIME_FIELD_NUMBER = 2;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      public static final int END_TIME_FIELD_NUMBER = 3;
      private int endTime_;
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      public int getEndTime() {
        return endTime_;
      }

      private void initFields() {
        matchup_ = java.util.Collections.emptyList();
        startTime_ = 0;
        endTime_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < matchup_.size(); i++) {
          output.writeMessage(1, matchup_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(2, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(3, endTime_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < matchup_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, matchup_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, endTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getMatchupFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (matchupBuilder_ == null) {
            matchup_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            matchupBuilder_.clear();
          }
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (matchupBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              matchup_ = java.util.Collections.unmodifiableList(matchup_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.matchup_ = matchup_;
          } else {
            result.matchup_ = matchupBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance()) return this;
          if (matchupBuilder_ == null) {
            if (!other.matchup_.isEmpty()) {
              if (matchup_.isEmpty()) {
                matchup_ = other.matchup_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureMatchupIsMutable();
                matchup_.addAll(other.matchup_);
              }
              onChanged();
            }
          } else {
            if (!other.matchup_.isEmpty()) {
              if (matchupBuilder_.isEmpty()) {
                matchupBuilder_.dispose();
                matchupBuilder_ = null;
                matchup_ = other.matchup_;
                bitField0_ = (bitField0_ & ~0x00000001);
                matchupBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMatchupFieldBuilder() : null;
              } else {
                matchupBuilder_.addAllMessages(other.matchup_);
              }
            }
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> matchup_ =
          java.util.Collections.emptyList();
        private void ensureMatchupIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            matchup_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup>(matchup_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> matchupBuilder_;

        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> getMatchupList() {
          if (matchupBuilder_ == null) {
            return java.util.Collections.unmodifiableList(matchup_);
          } else {
            return matchupBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public int getMatchupCount() {
          if (matchupBuilder_ == null) {
            return matchup_.size();
          } else {
            return matchupBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index) {
          if (matchupBuilder_ == null) {
            return matchup_.get(index);
          } else {
            return matchupBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder setMatchup(
            int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.set(index, value);
            onChanged();
          } else {
            matchupBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder setMatchup(
            int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.set(index, builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.add(value);
            onChanged();
          } else {
            matchupBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.add(index, value);
            onChanged();
          } else {
            matchupBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.add(builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.add(index, builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addAllMatchup(
            java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> values) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, matchup_);
            onChanged();
          } else {
            matchupBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder clearMatchup() {
          if (matchupBuilder_ == null) {
            matchup_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            matchupBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder removeMatchup(int index) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.remove(index);
            onChanged();
          } else {
            matchupBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder getMatchupBuilder(
            int index) {
          return getMatchupFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
            int index) {
          if (matchupBuilder_ == null) {
            return matchup_.get(index);  } else {
            return matchupBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
             getMatchupOrBuilderList() {
          if (matchupBuilder_ != null) {
            return matchupBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(matchup_);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder addMatchupBuilder() {
          return getMatchupFieldBuilder().addBuilder(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder addMatchupBuilder(
            int index) {
          return getMatchupFieldBuilder().addBuilder(
              index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder> 
             getMatchupBuilderList() {
          return getMatchupFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
            getMatchupFieldBuilder() {
          if (matchupBuilder_ == null) {
            matchupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder>(
                    matchup_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            matchup_ = null;
          }
          return matchupBuilder_;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000002;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startTime_ = 0;
          onChanged();
          return this;
        }

        private int endTime_ ;
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public int getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public Builder setEndTime(int value) {
          bitField0_ |= 0x00000004;
          endTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000004);
          endTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
      }

      static {
        defaultInstance = new WeeklyMatchups(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int WEEKLY_MATCHUPS_FIELD_NUMBER = 3;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> weeklyMatchups_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> getWeeklyMatchupsList() {
      return weeklyMatchups_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
        getWeeklyMatchupsOrBuilderList() {
      return weeklyMatchups_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public int getWeeklyMatchupsCount() {
      return weeklyMatchups_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index) {
      return weeklyMatchups_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
        int index) {
      return weeklyMatchups_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS;
      fantasyLeagueId_ = 0;
      weeklyMatchups_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      for (int i = 0; i < weeklyMatchups_.size(); i++) {
        output.writeMessage(3, weeklyMatchups_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      for (int i = 0; i < weeklyMatchups_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, weeklyMatchups_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWeeklyMatchupsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          weeklyMatchupsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (weeklyMatchupsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            weeklyMatchups_ = java.util.Collections.unmodifiableList(weeklyMatchups_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.weeklyMatchups_ = weeklyMatchups_;
        } else {
          result.weeklyMatchups_ = weeklyMatchupsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (weeklyMatchupsBuilder_ == null) {
          if (!other.weeklyMatchups_.isEmpty()) {
            if (weeklyMatchups_.isEmpty()) {
              weeklyMatchups_ = other.weeklyMatchups_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureWeeklyMatchupsIsMutable();
              weeklyMatchups_.addAll(other.weeklyMatchups_);
            }
            onChanged();
          }
        } else {
          if (!other.weeklyMatchups_.isEmpty()) {
            if (weeklyMatchupsBuilder_.isEmpty()) {
              weeklyMatchupsBuilder_.dispose();
              weeklyMatchupsBuilder_ = null;
              weeklyMatchups_ = other.weeklyMatchups_;
              bitField0_ = (bitField0_ & ~0x00000004);
              weeklyMatchupsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWeeklyMatchupsFieldBuilder() : null;
            } else {
              weeklyMatchupsBuilder_.addAllMessages(other.weeklyMatchups_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> weeklyMatchups_ =
        java.util.Collections.emptyList();
      private void ensureWeeklyMatchupsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          weeklyMatchups_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups>(weeklyMatchups_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> weeklyMatchupsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> getWeeklyMatchupsList() {
        if (weeklyMatchupsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weeklyMatchups_);
        } else {
          return weeklyMatchupsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public int getWeeklyMatchupsCount() {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.size();
        } else {
          return weeklyMatchupsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index) {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.get(index);
        } else {
          return weeklyMatchupsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder setWeeklyMatchups(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.set(index, value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder setWeeklyMatchups(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.set(index, builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(index, value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(index, builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addAllWeeklyMatchups(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> values) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weeklyMatchups_);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder clearWeeklyMatchups() {
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder removeWeeklyMatchups(int index) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.remove(index);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder getWeeklyMatchupsBuilder(
          int index) {
        return getWeeklyMatchupsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
          int index) {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.get(index);  } else {
          return weeklyMatchupsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
           getWeeklyMatchupsOrBuilderList() {
        if (weeklyMatchupsBuilder_ != null) {
          return weeklyMatchupsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weeklyMatchups_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder addWeeklyMatchupsBuilder() {
        return getWeeklyMatchupsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder addWeeklyMatchupsBuilder(
          int index) {
        return getWeeklyMatchupsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder> 
           getWeeklyMatchupsBuilderList() {
        return getWeeklyMatchupsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
          getWeeklyMatchupsFieldBuilder() {
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder>(
                  weeklyMatchups_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          weeklyMatchups_ = null;
        }
        return weeklyMatchupsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueMatchupsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse)
  }

  public interface CMsgDOTAEditFantasyTeamRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAEditFantasyTeamRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional string team_name = 3;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    boolean hasTeamLogo();
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    long getTeamLogo();
  }
  /**
   * Protobuf type {@code CMsgDOTAEditFantasyTeamRequest}
   */
  public static final class CMsgDOTAEditFantasyTeamRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAEditFantasyTeamRequest)
      CMsgDOTAEditFantasyTeamRequestOrBuilder {
    // Use CMsgDOTAEditFantasyTeamRequest.newBuilder() to construct.
    private CMsgDOTAEditFantasyTeamRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAEditFantasyTeamRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAEditFantasyTeamRequest defaultInstance;
    public static CMsgDOTAEditFantasyTeamRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAEditFantasyTeamRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAEditFantasyTeamRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              teamName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teamLogo_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAEditFantasyTeamRequest>() {
      public CMsgDOTAEditFantasyTeamRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAEditFantasyTeamRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 3;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 3;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_LOGO_FIELD_NUMBER = 4;
    private long teamLogo_;
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    public boolean hasTeamLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    public long getTeamLogo() {
      return teamLogo_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      teamName_ = "";
      teamLogo_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, teamLogo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, teamLogo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAEditFantasyTeamRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAEditFantasyTeamRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamLogo_ = teamLogo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000004;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasTeamLogo()) {
          setTeamLogo(other.getTeamLogo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 3;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long teamLogo_ ;
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public Builder setTeamLogo(long value) {
        bitField0_ |= 0x00000008;
        teamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public Builder clearTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamLogo_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAEditFantasyTeamRequest)
    }

    static {
      defaultInstance = new CMsgDOTAEditFantasyTeamRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAEditFantasyTeamRequest)
  }

  public interface CMsgDOTAEditFantasyTeamResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAEditFantasyTeamResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAEditFantasyTeamResponse}
   */
  public static final class CMsgDOTAEditFantasyTeamResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAEditFantasyTeamResponse)
      CMsgDOTAEditFantasyTeamResponseOrBuilder {
    // Use CMsgDOTAEditFantasyTeamResponse.newBuilder() to construct.
    private CMsgDOTAEditFantasyTeamResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAEditFantasyTeamResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAEditFantasyTeamResponse defaultInstance;
    public static CMsgDOTAEditFantasyTeamResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAEditFantasyTeamResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAEditFantasyTeamResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAEditFantasyTeamResponse>() {
      public CMsgDOTAEditFantasyTeamResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAEditFantasyTeamResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAEditFantasyTeamResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_INVALID_TEAM_INFO = 2;</code>
       */
      ERROR_INVALID_TEAM_INFO(2, 2),
      /**
       * <code>ERROR_NAME_ALREADY_TAKEN = 3;</code>
       */
      ERROR_NAME_ALREADY_TAKEN(3, 3),
      /**
       * <code>ERROR_NO_PERMISSION = 4;</code>
       */
      ERROR_NO_PERMISSION(4, 4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_TEAM_INFO = 2;</code>
       */
      public static final int ERROR_INVALID_TEAM_INFO_VALUE = 2;
      /**
       * <code>ERROR_NAME_ALREADY_TAKEN = 3;</code>
       */
      public static final int ERROR_NAME_ALREADY_TAKEN_VALUE = 3;
      /**
       * <code>ERROR_NO_PERMISSION = 4;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_TEAM_INFO;
          case 3: return ERROR_NAME_ALREADY_TAKEN;
          case 4: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAEditFantasyTeamResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAEditFantasyTeamResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAEditFantasyTeamResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAEditFantasyTeamResponse)
    }

    static {
      defaultInstance = new CMsgDOTAEditFantasyTeamResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAEditFantasyTeamResponse)
  }

  public interface CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID}
   */
  public static final class CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
      CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder {
    // Use CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID defaultInstance;
    public static CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID>() {
      public CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
  }

  public interface CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    int getOwnerAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID}
   */
  public static final class CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
      CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder {
    // Use CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID defaultInstance;
    public static CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ownerAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID>() {
      public CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 1;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    private void initFields() {
      ownerAccountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ownerAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ownerAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ownerAccountId_ = ownerAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.getDefaultInstance()) return this;
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000001;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
  }

  public interface CMsgDOTAFantasyTeamInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> 
        getResultsList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo getResults(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoResponse}
   */
  public static final class CMsgDOTAFantasyTeamInfoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoResponse)
      CMsgDOTAFantasyTeamInfoResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamInfoResponse defaultInstance;
    public static CMsgDOTAFantasyTeamInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoResponse>() {
      public CMsgDOTAFantasyTeamInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoResponse> getParserForType() {
      return PARSER;
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> results_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private void initFields() {
      results_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder setResults(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder setResults(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoResponse)
  }

  public interface CMsgDOTAFantasyTeamInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    int getFantasyTeamIndex();

    /**
     * <code>optional string team_name = 4;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    boolean hasTeamLogo();
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    long getTeamLogo();

    /**
     * <code>optional uint32 wins = 6;</code>
     */
    boolean hasWins();
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    int getWins();

    /**
     * <code>optional uint32 losses = 7;</code>
     */
    boolean hasLosses();
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    int getLosses();

    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    java.util.List<java.lang.Integer> getCurrentRosterList();
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    int getCurrentRosterCount();
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    int getCurrentRoster(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfo}
   */
  public static final class CMsgDOTAFantasyTeamInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfo)
      CMsgDOTAFantasyTeamInfoOrBuilder {
    // Use CMsgDOTAFantasyTeamInfo.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamInfo defaultInstance;
    public static CMsgDOTAFantasyTeamInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              teamName_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              teamLogo_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              wins_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              losses_ = input.readUInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                currentRoster_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              currentRoster_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                currentRoster_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                currentRoster_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = java.util.Collections.unmodifiableList(currentRoster_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfo> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfo>() {
      public CMsgDOTAFantasyTeamInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 4;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 4;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_LOGO_FIELD_NUMBER = 5;
    private long teamLogo_;
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public boolean hasTeamLogo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public long getTeamLogo() {
      return teamLogo_;
    }

    public static final int WINS_FIELD_NUMBER = 6;
    private int wins_;
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    public boolean hasWins() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    public int getWins() {
      return wins_;
    }

    public static final int LOSSES_FIELD_NUMBER = 7;
    private int losses_;
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    public boolean hasLosses() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    public int getLosses() {
      return losses_;
    }

    public static final int CURRENT_ROSTER_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> currentRoster_;
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getCurrentRosterList() {
      return currentRoster_;
    }
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public int getCurrentRosterCount() {
      return currentRoster_.size();
    }
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public int getCurrentRoster(int index) {
      return currentRoster_.get(index);
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      fantasyTeamIndex_ = 0;
      teamName_ = "";
      teamLogo_ = 0L;
      wins_ = 0;
      losses_ = 0;
      currentRoster_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, wins_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, losses_);
      }
      for (int i = 0; i < currentRoster_.size(); i++) {
        output.writeUInt32(8, currentRoster_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, wins_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, losses_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < currentRoster_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(currentRoster_.get(i));
        }
        size += dataSize;
        size += 1 * getCurrentRosterList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfo)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        teamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        losses_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        currentRoster_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamLogo_ = teamLogo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.wins_ = wins_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.losses_ = losses_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = java.util.Collections.unmodifiableList(currentRoster_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.currentRoster_ = currentRoster_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000008;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasTeamLogo()) {
          setTeamLogo(other.getTeamLogo());
        }
        if (other.hasWins()) {
          setWins(other.getWins());
        }
        if (other.hasLosses()) {
          setLosses(other.getLosses());
        }
        if (!other.currentRoster_.isEmpty()) {
          if (currentRoster_.isEmpty()) {
            currentRoster_ = other.currentRoster_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCurrentRosterIsMutable();
            currentRoster_.addAll(other.currentRoster_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long teamLogo_ ;
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder setTeamLogo(long value) {
        bitField0_ |= 0x00000010;
        teamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder clearTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamLogo_ = 0L;
        onChanged();
        return this;
      }

      private int wins_ ;
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public int getWins() {
        return wins_;
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public Builder setWins(int value) {
        bitField0_ |= 0x00000020;
        wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public Builder clearWins() {
        bitField0_ = (bitField0_ & ~0x00000020);
        wins_ = 0;
        onChanged();
        return this;
      }

      private int losses_ ;
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public boolean hasLosses() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public int getLosses() {
        return losses_;
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public Builder setLosses(int value) {
        bitField0_ |= 0x00000040;
        losses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public Builder clearLosses() {
        bitField0_ = (bitField0_ & ~0x00000040);
        losses_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> currentRoster_ = java.util.Collections.emptyList();
      private void ensureCurrentRosterIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = new java.util.ArrayList<java.lang.Integer>(currentRoster_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getCurrentRosterList() {
        return java.util.Collections.unmodifiableList(currentRoster_);
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public int getCurrentRosterCount() {
        return currentRoster_.size();
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public int getCurrentRoster(int index) {
        return currentRoster_.get(index);
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder setCurrentRoster(
          int index, int value) {
        ensureCurrentRosterIsMutable();
        currentRoster_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder addCurrentRoster(int value) {
        ensureCurrentRosterIsMutable();
        currentRoster_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder addAllCurrentRoster(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCurrentRosterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, currentRoster_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder clearCurrentRoster() {
        currentRoster_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfo)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfo)
  }

  public interface CMsgDOTAFantasyTeamScoreRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    int getFantasyTeamIndex();

    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional bool include_bench = 7;</code>
     */
    boolean hasIncludeBench();
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    boolean getIncludeBench();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamScoreRequest}
   */
  public static final class CMsgDOTAFantasyTeamScoreRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreRequest)
      CMsgDOTAFantasyTeamScoreRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamScoreRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamScoreRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamScoreRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamScoreRequest defaultInstance;
    public static CMsgDOTAFantasyTeamScoreRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamScoreRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamScoreRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              includeBench_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamScoreRequest>() {
      public CMsgDOTAFantasyTeamScoreRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamScoreRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 4;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 5;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 6;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int INCLUDE_BENCH_FIELD_NUMBER = 7;
    private boolean includeBench_;
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    public boolean hasIncludeBench() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    public boolean getIncludeBench() {
      return includeBench_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      fantasyTeamIndex_ = 0;
      filterMatchId_ = 0L;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      includeBench_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, filterMatchId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, filterStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, filterEndTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, includeBench_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, filterMatchId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, filterStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, filterEndTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, includeBench_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        includeBench_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.includeBench_ = includeBench_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasIncludeBench()) {
          setIncludeBench(other.getIncludeBench());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000008;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000010;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000020;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private boolean includeBench_ ;
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public boolean hasIncludeBench() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public boolean getIncludeBench() {
        return includeBench_;
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public Builder setIncludeBench(boolean value) {
        bitField0_ |= 0x00000040;
        includeBench_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public Builder clearIncludeBench() {
        bitField0_ = (bitField0_ & ~0x00000040);
        includeBench_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamScoreRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreRequest)
  }

  public interface CMsgDOTAFantasyTeamScoreResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult();

    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    boolean hasFantasyTeamScore();
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    float getFantasyTeamScore();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> 
        getFantasyPlayerScoreList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    int getFantasyPlayerScoreCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
        getFantasyPlayerScoreOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse}
   */
  public static final class CMsgDOTAFantasyTeamScoreResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreResponse)
      CMsgDOTAFantasyTeamScoreResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamScoreResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamScoreResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamScoreResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamScoreResponse defaultInstance;
    public static CMsgDOTAFantasyTeamScoreResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamScoreResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamScoreResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              fantasyTeamScore_ = input.readFloat();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fantasyPlayerScore_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore>();
                mutable_bitField0_ |= 0x00000004;
              }
              fantasyPlayerScore_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fantasyPlayerScore_ = java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamScoreResponse>() {
      public CMsgDOTAFantasyTeamScoreResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamScoreResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamScoreResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(3, 3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 3;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_OWNER_NOT_IN_LEAGUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamScoreResponse.EResult)
    }

    public interface CMsgPlayerScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional float score = 2;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 2;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore}
     */
    public static final class CMsgPlayerScore extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
        CMsgPlayerScoreOrBuilder {
      // Use CMsgPlayerScore.newBuilder() to construct.
      private CMsgPlayerScore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CMsgPlayerScore(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CMsgPlayerScore defaultInstance;
      public static CMsgPlayerScore getDefaultInstance() {
        return defaultInstance;
      }

      public CMsgPlayerScore getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgPlayerScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder.class);
      }

      public static com.google.protobuf.Parser<CMsgPlayerScore> PARSER =
          new com.google.protobuf.AbstractParser<CMsgPlayerScore>() {
        public CMsgPlayerScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgPlayerScore(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgPlayerScore> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int SCORE_FIELD_NUMBER = 2;
      private float score_;
      /**
       * <code>optional float score = 2;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float score = 2;</code>
       */
      public float getScore() {
        return score_;
      }

      private void initFields() {
        accountId_ = 0;
        score_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, score_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, score_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 2;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000002;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000002);
          score_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
      }

      static {
        defaultInstance = new CMsgPlayerScore(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_TEAM_SCORE_FIELD_NUMBER = 2;
    private float fantasyTeamScore_;
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    public boolean hasFantasyTeamScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    public float getFantasyTeamScore() {
      return fantasyTeamScore_;
    }

    public static final int FANTASY_PLAYER_SCORE_FIELD_NUMBER = 3;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> fantasyPlayerScore_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> getFantasyPlayerScoreList() {
      return fantasyPlayerScore_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
        getFantasyPlayerScoreOrBuilderList() {
      return fantasyPlayerScore_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public int getFantasyPlayerScoreCount() {
      return fantasyPlayerScore_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index) {
      return fantasyPlayerScore_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
        int index) {
      return fantasyPlayerScore_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS;
      fantasyTeamScore_ = 0F;
      fantasyPlayerScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, fantasyTeamScore_);
      }
      for (int i = 0; i < fantasyPlayerScore_.size(); i++) {
        output.writeMessage(3, fantasyPlayerScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, fantasyTeamScore_);
      }
      for (int i = 0; i < fantasyPlayerScore_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fantasyPlayerScore_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFantasyPlayerScoreFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamScore_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fantasyPlayerScoreBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamScore_ = fantasyTeamScore_;
        if (fantasyPlayerScoreBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fantasyPlayerScore_ = java.util.Collections.unmodifiableList(fantasyPlayerScore_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fantasyPlayerScore_ = fantasyPlayerScore_;
        } else {
          result.fantasyPlayerScore_ = fantasyPlayerScoreBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyTeamScore()) {
          setFantasyTeamScore(other.getFantasyTeamScore());
        }
        if (fantasyPlayerScoreBuilder_ == null) {
          if (!other.fantasyPlayerScore_.isEmpty()) {
            if (fantasyPlayerScore_.isEmpty()) {
              fantasyPlayerScore_ = other.fantasyPlayerScore_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFantasyPlayerScoreIsMutable();
              fantasyPlayerScore_.addAll(other.fantasyPlayerScore_);
            }
            onChanged();
          }
        } else {
          if (!other.fantasyPlayerScore_.isEmpty()) {
            if (fantasyPlayerScoreBuilder_.isEmpty()) {
              fantasyPlayerScoreBuilder_.dispose();
              fantasyPlayerScoreBuilder_ = null;
              fantasyPlayerScore_ = other.fantasyPlayerScore_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fantasyPlayerScoreBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFantasyPlayerScoreFieldBuilder() : null;
            } else {
              fantasyPlayerScoreBuilder_.addAllMessages(other.fantasyPlayerScore_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private float fantasyTeamScore_ ;
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public boolean hasFantasyTeamScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public float getFantasyTeamScore() {
        return fantasyTeamScore_;
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public Builder setFantasyTeamScore(float value) {
        bitField0_ |= 0x00000002;
        fantasyTeamScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public Builder clearFantasyTeamScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamScore_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> fantasyPlayerScore_ =
        java.util.Collections.emptyList();
      private void ensureFantasyPlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fantasyPlayerScore_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore>(fantasyPlayerScore_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> fantasyPlayerScoreBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> getFantasyPlayerScoreList() {
        if (fantasyPlayerScoreBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        } else {
          return fantasyPlayerScoreBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public int getFantasyPlayerScoreCount() {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.size();
        } else {
          return fantasyPlayerScoreBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.get(index);
        } else {
          return fantasyPlayerScoreBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder setFantasyPlayerScore(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.set(index, value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder setFantasyPlayerScore(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.set(index, builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(index, value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(index, builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addAllFantasyPlayerScore(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> values) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fantasyPlayerScore_);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder clearFantasyPlayerScore() {
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder removeFantasyPlayerScore(int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.remove(index);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder getFantasyPlayerScoreBuilder(
          int index) {
        return getFantasyPlayerScoreFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
          int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.get(index);  } else {
          return fantasyPlayerScoreBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
           getFantasyPlayerScoreOrBuilderList() {
        if (fantasyPlayerScoreBuilder_ != null) {
          return fantasyPlayerScoreBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder addFantasyPlayerScoreBuilder() {
        return getFantasyPlayerScoreFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder addFantasyPlayerScoreBuilder(
          int index) {
        return getFantasyPlayerScoreFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder> 
           getFantasyPlayerScoreBuilderList() {
        return getFantasyPlayerScoreFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
          getFantasyPlayerScoreFieldBuilder() {
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder>(
                  fantasyPlayerScore_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fantasyPlayerScore_ = null;
        }
        return fantasyPlayerScoreBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamScoreResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreResponse)
  }

  public interface CMsgDOTAFantasyTeamStandingsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 count = 2;</code>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 2;</code>
     */
    int getCount();

    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean getFilterLastMatch();

    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    boolean hasFilterInHall();
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    boolean getFilterInHall();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamStandingsRequest}
   */
  public static final class CMsgDOTAFantasyTeamStandingsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsRequest)
      CMsgDOTAFantasyTeamStandingsRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamStandingsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamStandingsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamStandingsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamStandingsRequest defaultInstance;
    public static CMsgDOTAFantasyTeamStandingsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamStandingsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamStandingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterLastMatch_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              filterInHall_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamStandingsRequest>() {
      public CMsgDOTAFantasyTeamStandingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamStandingsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 3;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 4;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 5;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 6;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    public static final int FILTER_IN_HALL_FIELD_NUMBER = 7;
    private boolean filterInHall_;
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    public boolean hasFilterInHall() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    public boolean getFilterInHall() {
      return filterInHall_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      count_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
      filterInHall_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, filterLastMatch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, filterInHall_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, filterLastMatch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, filterInHall_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        filterInHall_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterLastMatch_ = filterLastMatch_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.filterInHall_ = filterInHall_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        if (other.hasFilterInHall()) {
          setFilterInHall(other.getFilterInHall());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000004;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000008;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000010;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000020;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }

      private boolean filterInHall_ ;
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public boolean hasFilterInHall() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public boolean getFilterInHall() {
        return filterInHall_;
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public Builder setFilterInHall(boolean value) {
        bitField0_ |= 0x00000040;
        filterInHall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public Builder clearFilterInHall() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filterInHall_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamStandingsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsRequest)
  }

  public interface CMsgDOTAFantasyTeamStandingsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> 
        getTeamScoresList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    int getTeamScoresCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
        getTeamScoresOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse}
   */
  public static final class CMsgDOTAFantasyTeamStandingsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsResponse)
      CMsgDOTAFantasyTeamStandingsResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamStandingsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamStandingsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamStandingsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamStandingsResponse defaultInstance;
    public static CMsgDOTAFantasyTeamStandingsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamStandingsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamStandingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                teamScores_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore>();
                mutable_bitField0_ |= 0x00000002;
              }
              teamScores_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          teamScores_ = java.util.Collections.unmodifiableList(teamScores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamStandingsResponse>() {
      public CMsgDOTAFantasyTeamStandingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamStandingsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamStandingsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamStandingsResponse.EResult)
    }

    public interface CMsgTeamScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      boolean hasFantasyLeagueId();
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      int getFantasyLeagueId();

      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      boolean hasOwnerAccountId();
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      int getOwnerAccountId();

      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      boolean hasFantasyTeamIndex();
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      int getFantasyTeamIndex();

      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      boolean hasFantasyTeamLogo();
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      long getFantasyTeamLogo();

      /**
       * <code>optional string owner_name = 5;</code>
       */
      boolean hasOwnerName();
      /**
       * <code>optional string owner_name = 5;</code>
       */
      java.lang.String getOwnerName();
      /**
       * <code>optional string owner_name = 5;</code>
       */
      com.google.protobuf.ByteString
          getOwnerNameBytes();

      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      boolean hasFantasyTeamName();
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      java.lang.String getFantasyTeamName();
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      com.google.protobuf.ByteString
          getFantasyTeamNameBytes();

      /**
       * <code>optional float score = 7;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 7;</code>
       */
      float getScore();

      /**
       * <code>optional float score_against = 8;</code>
       */
      boolean hasScoreAgainst();
      /**
       * <code>optional float score_against = 8;</code>
       */
      float getScoreAgainst();

      /**
       * <code>optional uint32 wins = 9;</code>
       */
      boolean hasWins();
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      int getWins();

      /**
       * <code>optional uint32 losses = 10;</code>
       */
      boolean hasLosses();
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      int getLosses();

      /**
       * <code>optional int32 streak = 11;</code>
       */
      boolean hasStreak();
      /**
       * <code>optional int32 streak = 11;</code>
       */
      int getStreak();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore}
     */
    public static final class CMsgTeamScore extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
        CMsgTeamScoreOrBuilder {
      // Use CMsgTeamScore.newBuilder() to construct.
      private CMsgTeamScore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CMsgTeamScore(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CMsgTeamScore defaultInstance;
      public static CMsgTeamScore getDefaultInstance() {
        return defaultInstance;
      }

      public CMsgTeamScore getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgTeamScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                fantasyLeagueId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                fantasyTeamIndex_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                fantasyTeamLogo_ = input.readUInt64();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                ownerName_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                fantasyTeamName_ = bs;
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                score_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                scoreAgainst_ = input.readFloat();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                wins_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                losses_ = input.readUInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                streak_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder.class);
      }

      public static com.google.protobuf.Parser<CMsgTeamScore> PARSER =
          new com.google.protobuf.AbstractParser<CMsgTeamScore>() {
        public CMsgTeamScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgTeamScore(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgTeamScore> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
      private int fantasyLeagueId_;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }

      public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
      private int ownerAccountId_;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }

      public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
      private int fantasyTeamIndex_;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }

      public static final int FANTASY_TEAM_LOGO_FIELD_NUMBER = 4;
      private long fantasyTeamLogo_;
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      public boolean hasFantasyTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      public long getFantasyTeamLogo() {
        return fantasyTeamLogo_;
      }

      public static final int OWNER_NAME_FIELD_NUMBER = 5;
      private java.lang.Object ownerName_;
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public boolean hasOwnerName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public java.lang.String getOwnerName() {
        java.lang.Object ref = ownerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ownerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOwnerNameBytes() {
        java.lang.Object ref = ownerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ownerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FANTASY_TEAM_NAME_FIELD_NUMBER = 6;
      private java.lang.Object fantasyTeamName_;
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public boolean hasFantasyTeamName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public java.lang.String getFantasyTeamName() {
        java.lang.Object ref = fantasyTeamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyTeamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyTeamNameBytes() {
        java.lang.Object ref = fantasyTeamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCORE_FIELD_NUMBER = 7;
      private float score_;
      /**
       * <code>optional float score = 7;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float score = 7;</code>
       */
      public float getScore() {
        return score_;
      }

      public static final int SCORE_AGAINST_FIELD_NUMBER = 8;
      private float scoreAgainst_;
      /**
       * <code>optional float score_against = 8;</code>
       */
      public boolean hasScoreAgainst() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score_against = 8;</code>
       */
      public float getScoreAgainst() {
        return scoreAgainst_;
      }

      public static final int WINS_FIELD_NUMBER = 9;
      private int wins_;
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      public int getWins() {
        return wins_;
      }

      public static final int LOSSES_FIELD_NUMBER = 10;
      private int losses_;
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      public boolean hasLosses() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      public int getLosses() {
        return losses_;
      }

      public static final int STREAK_FIELD_NUMBER = 11;
      private int streak_;
      /**
       * <code>optional int32 streak = 11;</code>
       */
      public boolean hasStreak() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 streak = 11;</code>
       */
      public int getStreak() {
        return streak_;
      }

      private void initFields() {
        fantasyLeagueId_ = 0;
        ownerAccountId_ = 0;
        fantasyTeamIndex_ = 0;
        fantasyTeamLogo_ = 0L;
        ownerName_ = "";
        fantasyTeamName_ = "";
        score_ = 0F;
        scoreAgainst_ = 0F;
        wins_ = 0;
        losses_ = 0;
        streak_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, fantasyLeagueId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, fantasyTeamIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, fantasyTeamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getOwnerNameBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getFantasyTeamNameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, score_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, scoreAgainst_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(9, wins_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(10, losses_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(11, streak_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, fantasyLeagueId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, fantasyTeamIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, fantasyTeamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getOwnerNameBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getFantasyTeamNameBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, score_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, scoreAgainst_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, wins_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, losses_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, streak_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          fantasyLeagueId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          fantasyTeamIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyTeamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          ownerName_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          fantasyTeamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          scoreAgainst_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          wins_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          losses_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          streak_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.fantasyLeagueId_ = fantasyLeagueId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId_ = ownerAccountId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.fantasyTeamIndex_ = fantasyTeamIndex_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fantasyTeamLogo_ = fantasyTeamLogo_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.ownerName_ = ownerName_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.fantasyTeamName_ = fantasyTeamName_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.score_ = score_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.scoreAgainst_ = scoreAgainst_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.wins_ = wins_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.losses_ = losses_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.streak_ = streak_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance()) return this;
          if (other.hasFantasyLeagueId()) {
            setFantasyLeagueId(other.getFantasyLeagueId());
          }
          if (other.hasOwnerAccountId()) {
            setOwnerAccountId(other.getOwnerAccountId());
          }
          if (other.hasFantasyTeamIndex()) {
            setFantasyTeamIndex(other.getFantasyTeamIndex());
          }
          if (other.hasFantasyTeamLogo()) {
            setFantasyTeamLogo(other.getFantasyTeamLogo());
          }
          if (other.hasOwnerName()) {
            bitField0_ |= 0x00000010;
            ownerName_ = other.ownerName_;
            onChanged();
          }
          if (other.hasFantasyTeamName()) {
            bitField0_ |= 0x00000020;
            fantasyTeamName_ = other.fantasyTeamName_;
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasScoreAgainst()) {
            setScoreAgainst(other.getScoreAgainst());
          }
          if (other.hasWins()) {
            setWins(other.getWins());
          }
          if (other.hasLosses()) {
            setLosses(other.getLosses());
          }
          if (other.hasStreak()) {
            setStreak(other.getStreak());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int fantasyLeagueId_ ;
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public boolean hasFantasyLeagueId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public int getFantasyLeagueId() {
          return fantasyLeagueId_;
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public Builder setFantasyLeagueId(int value) {
          bitField0_ |= 0x00000001;
          fantasyLeagueId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public Builder clearFantasyLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fantasyLeagueId_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId_ ;
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public boolean hasOwnerAccountId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public int getOwnerAccountId() {
          return ownerAccountId_;
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public Builder setOwnerAccountId(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public Builder clearOwnerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId_ = 0;
          onChanged();
          return this;
        }

        private int fantasyTeamIndex_ ;
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public boolean hasFantasyTeamIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public int getFantasyTeamIndex() {
          return fantasyTeamIndex_;
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public Builder setFantasyTeamIndex(int value) {
          bitField0_ |= 0x00000004;
          fantasyTeamIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public Builder clearFantasyTeamIndex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyTeamIndex_ = 0;
          onChanged();
          return this;
        }

        private long fantasyTeamLogo_ ;
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public boolean hasFantasyTeamLogo() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public long getFantasyTeamLogo() {
          return fantasyTeamLogo_;
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public Builder setFantasyTeamLogo(long value) {
          bitField0_ |= 0x00000008;
          fantasyTeamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public Builder clearFantasyTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fantasyTeamLogo_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object ownerName_ = "";
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public boolean hasOwnerName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public java.lang.String getOwnerName() {
          java.lang.Object ref = ownerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ownerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public com.google.protobuf.ByteString
            getOwnerNameBytes() {
          java.lang.Object ref = ownerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ownerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder setOwnerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          ownerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder clearOwnerName() {
          bitField0_ = (bitField0_ & ~0x00000010);
          ownerName_ = getDefaultInstance().getOwnerName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder setOwnerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          ownerName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object fantasyTeamName_ = "";
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public boolean hasFantasyTeamName() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public java.lang.String getFantasyTeamName() {
          java.lang.Object ref = fantasyTeamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fantasyTeamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public com.google.protobuf.ByteString
            getFantasyTeamNameBytes() {
          java.lang.Object ref = fantasyTeamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fantasyTeamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder setFantasyTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          fantasyTeamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder clearFantasyTeamName() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fantasyTeamName_ = getDefaultInstance().getFantasyTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder setFantasyTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          fantasyTeamName_ = value;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 7;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000040;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000040);
          score_ = 0F;
          onChanged();
          return this;
        }

        private float scoreAgainst_ ;
        /**
         * <code>optional float score_against = 8;</code>
         */
        public boolean hasScoreAgainst() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public float getScoreAgainst() {
          return scoreAgainst_;
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public Builder setScoreAgainst(float value) {
          bitField0_ |= 0x00000080;
          scoreAgainst_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public Builder clearScoreAgainst() {
          bitField0_ = (bitField0_ & ~0x00000080);
          scoreAgainst_ = 0F;
          onChanged();
          return this;
        }

        private int wins_ ;
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public boolean hasWins() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public int getWins() {
          return wins_;
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public Builder setWins(int value) {
          bitField0_ |= 0x00000100;
          wins_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public Builder clearWins() {
          bitField0_ = (bitField0_ & ~0x00000100);
          wins_ = 0;
          onChanged();
          return this;
        }

        private int losses_ ;
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public boolean hasLosses() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public int getLosses() {
          return losses_;
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public Builder setLosses(int value) {
          bitField0_ |= 0x00000200;
          losses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public Builder clearLosses() {
          bitField0_ = (bitField0_ & ~0x00000200);
          losses_ = 0;
          onChanged();
          return this;
        }

        private int streak_ ;
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public boolean hasStreak() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public int getStreak() {
          return streak_;
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public Builder setStreak(int value) {
          bitField0_ |= 0x00000400;
          streak_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public Builder clearStreak() {
          bitField0_ = (bitField0_ & ~0x00000400);
          streak_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
      }

      static {
        defaultInstance = new CMsgTeamScore(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult() {
      return result_;
    }

    public static final int TEAM_SCORES_FIELD_NUMBER = 3;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> teamScores_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> getTeamScoresList() {
      return teamScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
        getTeamScoresOrBuilderList() {
      return teamScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public int getTeamScoresCount() {
      return teamScores_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index) {
      return teamScores_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
        int index) {
      return teamScores_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS;
      teamScores_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < teamScores_.size(); i++) {
        output.writeMessage(3, teamScores_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < teamScores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, teamScores_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamScoresFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teamScoresBuilder_ == null) {
          teamScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          teamScoresBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (teamScoresBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            teamScores_ = java.util.Collections.unmodifiableList(teamScores_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teamScores_ = teamScores_;
        } else {
          result.teamScores_ = teamScoresBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (teamScoresBuilder_ == null) {
          if (!other.teamScores_.isEmpty()) {
            if (teamScores_.isEmpty()) {
              teamScores_ = other.teamScores_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeamScoresIsMutable();
              teamScores_.addAll(other.teamScores_);
            }
            onChanged();
          }
        } else {
          if (!other.teamScores_.isEmpty()) {
            if (teamScoresBuilder_.isEmpty()) {
              teamScoresBuilder_.dispose();
              teamScoresBuilder_ = null;
              teamScores_ = other.teamScores_;
              bitField0_ = (bitField0_ & ~0x00000002);
              teamScoresBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamScoresFieldBuilder() : null;
            } else {
              teamScoresBuilder_.addAllMessages(other.teamScores_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> teamScores_ =
        java.util.Collections.emptyList();
      private void ensureTeamScoresIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          teamScores_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore>(teamScores_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> teamScoresBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> getTeamScoresList() {
        if (teamScoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamScores_);
        } else {
          return teamScoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public int getTeamScoresCount() {
        if (teamScoresBuilder_ == null) {
          return teamScores_.size();
        } else {
          return teamScoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index) {
        if (teamScoresBuilder_ == null) {
          return teamScores_.get(index);
        } else {
          return teamScoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder setTeamScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.set(index, value);
          onChanged();
        } else {
          teamScoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder setTeamScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.add(value);
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.add(index, value);
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.add(builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addAllTeamScores(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> values) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamScores_);
          onChanged();
        } else {
          teamScoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder clearTeamScores() {
        if (teamScoresBuilder_ == null) {
          teamScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          teamScoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder removeTeamScores(int index) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.remove(index);
          onChanged();
        } else {
          teamScoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder getTeamScoresBuilder(
          int index) {
        return getTeamScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
          int index) {
        if (teamScoresBuilder_ == null) {
          return teamScores_.get(index);  } else {
          return teamScoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
           getTeamScoresOrBuilderList() {
        if (teamScoresBuilder_ != null) {
          return teamScoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamScores_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder addTeamScoresBuilder() {
        return getTeamScoresFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder addTeamScoresBuilder(
          int index) {
        return getTeamScoresFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder> 
           getTeamScoresBuilderList() {
        return getTeamScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
          getTeamScoresFieldBuilder() {
        if (teamScoresBuilder_ == null) {
          teamScoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder>(
                  teamScores_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          teamScores_ = null;
        }
        return teamScoresBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamStandingsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsResponse)
  }

  public interface CMsgDOTAFantasyPlayerScoreRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean getFilterLastMatch();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreRequest}
   */
  public static final class CMsgDOTAFantasyPlayerScoreRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreRequest)
      CMsgDOTAFantasyPlayerScoreRequestOrBuilder {
    // Use CMsgDOTAFantasyPlayerScoreRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerScoreRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerScoreRequest defaultInstance;
    public static CMsgDOTAFantasyPlayerScoreRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerScoreRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterLastMatch_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreRequest>() {
      public CMsgDOTAFantasyPlayerScoreRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerScoreRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 3;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 4;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 5;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 6;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, filterLastMatch_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, filterLastMatch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterLastMatch_ = filterLastMatch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000002;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000004;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000008;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000010;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000020;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerScoreRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreRequest)
  }

  public interface CMsgDOTAFantasyPlayerScoreResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional string player_name = 4;</code>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string player_name = 4;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string player_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <code>optional float score = 5;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 5;</code>
     */
    float getScore();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreResponse}
   */
  public static final class CMsgDOTAFantasyPlayerScoreResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreResponse)
      CMsgDOTAFantasyPlayerScoreResponseOrBuilder {
    // Use CMsgDOTAFantasyPlayerScoreResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerScoreResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerScoreResponse defaultInstance;
    public static CMsgDOTAFantasyPlayerScoreResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerScoreResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              playerName_ = bs;
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreResponse>() {
      public CMsgDOTAFantasyPlayerScoreResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerScoreResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerScoreResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerScoreResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int PLAYER_NAME_FIELD_NUMBER = 4;
    private java.lang.Object playerName_;
    /**
     * <code>optional string player_name = 4;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string player_name = 4;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 5;
    private float score_;
    /**
     * <code>optional float score = 5;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float score = 5;</code>
     */
    public float getScore() {
      return score_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS;
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      playerName_ = "";
      score_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000008;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000004;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string player_name = 4;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        playerName_ = value;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 5;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000010;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerScoreResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreResponse)
  }

  public interface CMsgDOTAFantasyPlayerStandingsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 count = 2;</code>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 2;</code>
     */
    int getCount();

    /**
     * <code>optional uint32 role = 3;</code>
     */
    boolean hasRole();
    /**
     * <code>optional uint32 role = 3;</code>
     */
    int getRole();

    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    boolean getFilterLastMatch();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsRequest}
   */
  public static final class CMsgDOTAFantasyPlayerStandingsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsRequest)
      CMsgDOTAFantasyPlayerStandingsRequestOrBuilder {
    // Use CMsgDOTAFantasyPlayerStandingsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerStandingsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerStandingsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerStandingsRequest defaultInstance;
    public static CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerStandingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              role_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              filterLastMatch_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerStandingsRequest>() {
      public CMsgDOTAFantasyPlayerStandingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerStandingsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public int getRole() {
      return role_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 4;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 5;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 6;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 7;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      count_ = 0;
      role_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterStartTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, filterEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, filterMatchId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, filterLastMatch_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterStartTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, filterEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, filterMatchId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, filterLastMatch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.role_ = role_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.filterLastMatch_ = filterLastMatch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      private int role_ ;
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00000004;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        role_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000008;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000010;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000020;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000040;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerStandingsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsRequest)
  }

  public interface CMsgDOTAFantasyPlayerStandingsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 role = 3;</code>
     */
    boolean hasRole();
    /**
     * <code>optional uint32 role = 3;</code>
     */
    int getRole();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> 
        getPlayerScoresList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    int getPlayerScoresCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
        getPlayerScoresOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse}
   */
  public static final class CMsgDOTAFantasyPlayerStandingsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsResponse)
      CMsgDOTAFantasyPlayerStandingsResponseOrBuilder {
    // Use CMsgDOTAFantasyPlayerStandingsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerStandingsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerStandingsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerStandingsResponse defaultInstance;
    public static CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerStandingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              role_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                playerScores_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore>();
                mutable_bitField0_ |= 0x00000008;
              }
              playerScores_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          playerScores_ = java.util.Collections.unmodifiableList(playerScores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerStandingsResponse>() {
      public CMsgDOTAFantasyPlayerStandingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerStandingsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerStandingsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerStandingsResponse.EResult)
    }

    public interface CMsgPlayerScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      boolean hasPlayerAccountId();
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      int getPlayerAccountId();

      /**
       * <code>optional string player_name = 2;</code>
       */
      boolean hasPlayerName();
      /**
       * <code>optional string player_name = 2;</code>
       */
      java.lang.String getPlayerName();
      /**
       * <code>optional string player_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getPlayerNameBytes();

      /**
       * <code>optional float score = 3;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 3;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore}
     */
    public static final class CMsgPlayerScore extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
        CMsgPlayerScoreOrBuilder {
      // Use CMsgPlayerScore.newBuilder() to construct.
      private CMsgPlayerScore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CMsgPlayerScore(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CMsgPlayerScore defaultInstance;
      public static CMsgPlayerScore getDefaultInstance() {
        return defaultInstance;
      }

      public CMsgPlayerScore getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgPlayerScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerAccountId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                playerName_ = bs;
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder.class);
      }

      public static com.google.protobuf.Parser<CMsgPlayerScore> PARSER =
          new com.google.protobuf.AbstractParser<CMsgPlayerScore>() {
        public CMsgPlayerScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgPlayerScore(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgPlayerScore> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 1;
      private int playerAccountId_;
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }

      public static final int PLAYER_NAME_FIELD_NUMBER = 2;
      private java.lang.Object playerName_;
      /**
       * <code>optional string player_name = 2;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string player_name = 2;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string player_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCORE_FIELD_NUMBER = 3;
      private float score_;
      /**
       * <code>optional float score = 3;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float score = 3;</code>
       */
      public float getScore() {
        return score_;
      }

      private void initFields() {
        playerAccountId_ = 0;
        playerName_ = "";
        score_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getPlayerNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, score_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getPlayerNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, score_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          playerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          playerName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerAccountId_ = playerAccountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.playerName_ = playerName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance()) return this;
          if (other.hasPlayerAccountId()) {
            setPlayerAccountId(other.getPlayerAccountId());
          }
          if (other.hasPlayerName()) {
            bitField0_ |= 0x00000002;
            playerName_ = other.playerName_;
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int playerAccountId_ ;
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public boolean hasPlayerAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public int getPlayerAccountId() {
          return playerAccountId_;
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public Builder setPlayerAccountId(int value) {
          bitField0_ |= 0x00000001;
          playerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public Builder clearPlayerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerAccountId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object playerName_ = "";
        /**
         * <code>optional string player_name = 2;</code>
         */
        public boolean hasPlayerName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public java.lang.String getPlayerName() {
          java.lang.Object ref = playerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              playerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPlayerNameBytes() {
          java.lang.Object ref = playerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            playerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder setPlayerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          playerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder clearPlayerName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          playerName_ = getDefaultInstance().getPlayerName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder setPlayerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          playerName_ = value;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 3;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000004;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000004);
          score_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
      }

      static {
        defaultInstance = new CMsgPlayerScore(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public int getRole() {
      return role_;
    }

    public static final int PLAYER_SCORES_FIELD_NUMBER = 4;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> playerScores_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> getPlayerScoresList() {
      return playerScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
        getPlayerScoresOrBuilderList() {
      return playerScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public int getPlayerScoresCount() {
      return playerScores_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index) {
      return playerScores_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
        int index) {
      return playerScores_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS;
      fantasyLeagueId_ = 0;
      role_ = 0;
      playerScores_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, role_);
      }
      for (int i = 0; i < playerScores_.size(); i++) {
        output.writeMessage(4, playerScores_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, role_);
      }
      for (int i = 0; i < playerScores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerScores_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerScoresFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playerScoresBuilder_ == null) {
          playerScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerScoresBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.role_ = role_;
        if (playerScoresBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerScores_ = java.util.Collections.unmodifiableList(playerScores_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerScores_ = playerScores_;
        } else {
          result.playerScores_ = playerScoresBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (playerScoresBuilder_ == null) {
          if (!other.playerScores_.isEmpty()) {
            if (playerScores_.isEmpty()) {
              playerScores_ = other.playerScores_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerScoresIsMutable();
              playerScores_.addAll(other.playerScores_);
            }
            onChanged();
          }
        } else {
          if (!other.playerScores_.isEmpty()) {
            if (playerScoresBuilder_.isEmpty()) {
              playerScoresBuilder_.dispose();
              playerScoresBuilder_ = null;
              playerScores_ = other.playerScores_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerScoresBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerScoresFieldBuilder() : null;
            } else {
              playerScoresBuilder_.addAllMessages(other.playerScores_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int role_ ;
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00000004;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        role_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> playerScores_ =
        java.util.Collections.emptyList();
      private void ensurePlayerScoresIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          playerScores_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore>(playerScores_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> playerScoresBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> getPlayerScoresList() {
        if (playerScoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerScores_);
        } else {
          return playerScoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public int getPlayerScoresCount() {
        if (playerScoresBuilder_ == null) {
          return playerScores_.size();
        } else {
          return playerScoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index) {
        if (playerScoresBuilder_ == null) {
          return playerScores_.get(index);
        } else {
          return playerScoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder setPlayerScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.set(index, value);
          onChanged();
        } else {
          playerScoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder setPlayerScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.add(value);
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.add(index, value);
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.add(builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addAllPlayerScores(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> values) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerScores_);
          onChanged();
        } else {
          playerScoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder clearPlayerScores() {
        if (playerScoresBuilder_ == null) {
          playerScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerScoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder removePlayerScores(int index) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.remove(index);
          onChanged();
        } else {
          playerScoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder getPlayerScoresBuilder(
          int index) {
        return getPlayerScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
          int index) {
        if (playerScoresBuilder_ == null) {
          return playerScores_.get(index);  } else {
          return playerScoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
           getPlayerScoresOrBuilderList() {
        if (playerScoresBuilder_ != null) {
          return playerScoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerScores_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder addPlayerScoresBuilder() {
        return getPlayerScoresFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder addPlayerScoresBuilder(
          int index) {
        return getPlayerScoresFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder> 
           getPlayerScoresBuilderList() {
        return getPlayerScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
          getPlayerScoresFieldBuilder() {
        if (playerScoresBuilder_ == null) {
          playerScoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder>(
                  playerScores_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          playerScores_ = null;
        }
        return playerScoresBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerStandingsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsResponse)
  }

  public interface CMsgDOTAFantasyPlayerInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerInfoRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerInfoRequest}
   */
  public static final class CMsgDOTAFantasyPlayerInfoRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerInfoRequest)
      CMsgDOTAFantasyPlayerInfoRequestOrBuilder {
    // Use CMsgDOTAFantasyPlayerInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerInfoRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerInfoRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerInfoRequest defaultInstance;
    public static CMsgDOTAFantasyPlayerInfoRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerInfoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerInfoRequest>() {
      public CMsgDOTAFantasyPlayerInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerInfoRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerInfoRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerInfoRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerInfoRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerInfoRequest)
  }

  public interface CMsgDOTAFantasyPlayerInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    boolean hasMsg();
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo getMsg();
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerInfoResponse}
   */
  public static final class CMsgDOTAFantasyPlayerInfoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerInfoResponse)
      CMsgDOTAFantasyPlayerInfoResponseOrBuilder {
    // Use CMsgDOTAFantasyPlayerInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerInfoResponse defaultInstance;
    public static CMsgDOTAFantasyPlayerInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = msg_.toBuilder();
              }
              msg_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msg_);
                msg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerInfoResponse>() {
      public CMsgDOTAFantasyPlayerInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MSG_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo msg_;
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo getMsg() {
      return msg_;
    }
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder() {
      return msg_;
    }

    private void initFields() {
      msg_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, msg_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, msg_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerInfoResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMsgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (msgBuilder_ == null) {
          msg_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance();
        } else {
          msgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (msgBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = msgBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          mergeMsg(other.getMsg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo msg_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder> msgBuilder_;
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo getMsg() {
        if (msgBuilder_ == null) {
          return msg_;
        } else {
          return msgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder setMsg(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          msgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder setMsg(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder builderForValue) {
        if (msgBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          msgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder mergeMsg(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo value) {
        if (msgBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              msg_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance()) {
            msg_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.newBuilder(msg_).mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          msgBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder clearMsg() {
        if (msgBuilder_ == null) {
          msg_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.getDefaultInstance();
          onChanged();
        } else {
          msgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder getMsgBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilder();
        } else {
          return msg_;
        }
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder> 
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfo.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgGCPlayerInfoOrBuilder>(
                  getMsg(),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerInfoResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerInfoResponse)
  }

  public interface CMsgDOTAFantasyLeagueCreateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueCreateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    boolean hasSeasonId();
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    int getSeasonId();

    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional string password = 3;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 3;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 3;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional string team_name = 4;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 logo = 5;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    long getLogo();

    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    boolean hasTicketItemId();
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    long getTicketItemId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueCreateRequest}
   */
  public static final class CMsgDOTAFantasyLeagueCreateRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueCreateRequest)
      CMsgDOTAFantasyLeagueCreateRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueCreateRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueCreateRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueCreateRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueCreateRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueCreateRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueCreateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueCreateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seasonId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fantasyLeagueName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              password_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              teamName_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              logo_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ticketItemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueCreateRequest>() {
      public CMsgDOTAFantasyLeagueCreateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueCreateRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEASON_ID_FIELD_NUMBER = 1;
    private int seasonId_;
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    public boolean hasSeasonId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    public int getSeasonId() {
      return seasonId_;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 2;
    private java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 3;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 3;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string password = 3;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 4;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 4;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGO_FIELD_NUMBER = 5;
    private long logo_;
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int TICKET_ITEM_ID_FIELD_NUMBER = 6;
    private long ticketItemId_;
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    public boolean hasTicketItemId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    public long getTicketItemId() {
      return ticketItemId_;
    }

    private void initFields() {
      seasonId_ = 0;
      fantasyLeagueName_ = "";
      password_ = "";
      teamName_ = "";
      logo_ = 0L;
      ticketItemId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, seasonId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, logo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, ticketItemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seasonId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFantasyLeagueNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, logo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, ticketItemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueCreateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueCreateRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seasonId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seasonId_ = seasonId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ticketItemId_ = ticketItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest.getDefaultInstance()) return this;
        if (other.hasSeasonId()) {
          setSeasonId(other.getSeasonId());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000002;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000004;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000008;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasTicketItemId()) {
          setTicketItemId(other.getTicketItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seasonId_ ;
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public boolean hasSeasonId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public int getSeasonId() {
        return seasonId_;
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public Builder setSeasonId(int value) {
        bitField0_ |= 0x00000001;
        seasonId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public Builder clearSeasonId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seasonId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 3;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000010;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private long ticketItemId_ ;
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public boolean hasTicketItemId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public long getTicketItemId() {
        return ticketItemId_;
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public Builder setTicketItemId(long value) {
        bitField0_ |= 0x00000020;
        ticketItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public Builder clearTicketItemId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ticketItemId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueCreateRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueCreateRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueCreateRequest)
  }

  public interface CMsgDOTAFantasyLeagueCreateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueCreateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueCreateResponse}
   */
  public static final class CMsgDOTAFantasyLeagueCreateResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueCreateResponse)
      CMsgDOTAFantasyLeagueCreateResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueCreateResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueCreateResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueCreateResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueCreateResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueCreateResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueCreateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueCreateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueCreateResponse>() {
      public CMsgDOTAFantasyLeagueCreateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueCreateResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueCreateResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      ERROR_NO_PERMISSION(1, 1),
      /**
       * <code>ERROR_BAD_SEASON_ID = 2;</code>
       */
      ERROR_BAD_SEASON_ID(2, 2),
      /**
       * <code>ERROR_BAD_LEAGUE_NAME = 3;</code>
       */
      ERROR_BAD_LEAGUE_NAME(3, 3),
      /**
       * <code>ERROR_BAD_TEAM_NAME = 4;</code>
       */
      ERROR_BAD_TEAM_NAME(4, 4),
      /**
       * <code>ERROR_UNSPECIFIED = 5;</code>
       */
      ERROR_UNSPECIFIED(5, 5),
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 6;</code>
       */
      ERROR_FAILED_LOGO_UPLOAD(6, 6),
      /**
       * <code>ERROR_NO_TICKET = 7;</code>
       */
      ERROR_NO_TICKET(7, 7),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 1;
      /**
       * <code>ERROR_BAD_SEASON_ID = 2;</code>
       */
      public static final int ERROR_BAD_SEASON_ID_VALUE = 2;
      /**
       * <code>ERROR_BAD_LEAGUE_NAME = 3;</code>
       */
      public static final int ERROR_BAD_LEAGUE_NAME_VALUE = 3;
      /**
       * <code>ERROR_BAD_TEAM_NAME = 4;</code>
       */
      public static final int ERROR_BAD_TEAM_NAME_VALUE = 4;
      /**
       * <code>ERROR_UNSPECIFIED = 5;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 5;
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 6;</code>
       */
      public static final int ERROR_FAILED_LOGO_UPLOAD_VALUE = 6;
      /**
       * <code>ERROR_NO_TICKET = 7;</code>
       */
      public static final int ERROR_NO_TICKET_VALUE = 7;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_NO_PERMISSION;
          case 2: return ERROR_BAD_SEASON_ID;
          case 3: return ERROR_BAD_LEAGUE_NAME;
          case 4: return ERROR_BAD_TEAM_NAME;
          case 5: return ERROR_UNSPECIFIED;
          case 6: return ERROR_FAILED_LOGO_UPLOAD;
          case 7: return ERROR_NO_TICKET;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueCreateResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS;
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueCreateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueCreateResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueCreateResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueCreateResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueCreateResponse)
  }

  public interface CMsgDOTAFantasyTeamCreateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamCreateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional string team_name = 3;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 logo = 4;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    long getLogo();

    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    boolean hasTicketItemId();
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    long getTicketItemId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamCreateRequest}
   */
  public static final class CMsgDOTAFantasyTeamCreateRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamCreateRequest)
      CMsgDOTAFantasyTeamCreateRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamCreateRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamCreateRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamCreateRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamCreateRequest defaultInstance;
    public static CMsgDOTAFantasyTeamCreateRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamCreateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamCreateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              teamName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              logo_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ticketItemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamCreateRequest>() {
      public CMsgDOTAFantasyTeamCreateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamCreateRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 3;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 3;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGO_FIELD_NUMBER = 4;
    private long logo_;
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int TICKET_ITEM_ID_FIELD_NUMBER = 5;
    private long ticketItemId_;
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    public boolean hasTicketItemId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    public long getTicketItemId() {
      return ticketItemId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      password_ = "";
      teamName_ = "";
      logo_ = 0L;
      ticketItemId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, logo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, ticketItemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, logo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, ticketItemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamCreateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamCreateRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ticketItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ticketItemId_ = ticketItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000004;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasTicketItemId()) {
          setTicketItemId(other.getTicketItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 3;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000008;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private long ticketItemId_ ;
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public boolean hasTicketItemId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public long getTicketItemId() {
        return ticketItemId_;
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public Builder setTicketItemId(long value) {
        bitField0_ |= 0x00000010;
        ticketItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public Builder clearTicketItemId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketItemId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamCreateRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamCreateRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamCreateRequest)
  }

  public interface CMsgDOTAFantasyTeamCreateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamCreateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    int getFantasyTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamCreateResponse}
   */
  public static final class CMsgDOTAFantasyTeamCreateResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamCreateResponse)
      CMsgDOTAFantasyTeamCreateResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamCreateResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamCreateResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamCreateResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamCreateResponse defaultInstance;
    public static CMsgDOTAFantasyTeamCreateResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamCreateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamCreateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamCreateResponse>() {
      public CMsgDOTAFantasyTeamCreateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamCreateResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamCreateResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      ERROR_NO_PERMISSION(1, 1),
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 2;</code>
       */
      ERROR_FAILED_LOGO_UPLOAD(2, 2),
      /**
       * <code>ERROR_BAD_FANTASY_LEAGUE_ID = 3;</code>
       */
      ERROR_BAD_FANTASY_LEAGUE_ID(3, 3),
      /**
       * <code>ERROR_BAD_NAME = 4;</code>
       */
      ERROR_BAD_NAME(4, 4),
      /**
       * <code>ERROR_FULL = 5;</code>
       */
      ERROR_FULL(5, 5),
      /**
       * <code>ERROR_ALREADY_MEMBER = 6;</code>
       */
      ERROR_ALREADY_MEMBER(6, 6),
      /**
       * <code>ERROR_BAD_PASSWORD = 7;</code>
       */
      ERROR_BAD_PASSWORD(7, 7),
      /**
       * <code>ERROR_UNSPECIFIED = 8;</code>
       */
      ERROR_UNSPECIFIED(8, 8),
      /**
       * <code>ERROR_NO_TICKET = 9;</code>
       */
      ERROR_NO_TICKET(9, 9),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 10;</code>
       */
      ERROR_LEAGUE_LOCKED(10, 10),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 1;
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 2;</code>
       */
      public static final int ERROR_FAILED_LOGO_UPLOAD_VALUE = 2;
      /**
       * <code>ERROR_BAD_FANTASY_LEAGUE_ID = 3;</code>
       */
      public static final int ERROR_BAD_FANTASY_LEAGUE_ID_VALUE = 3;
      /**
       * <code>ERROR_BAD_NAME = 4;</code>
       */
      public static final int ERROR_BAD_NAME_VALUE = 4;
      /**
       * <code>ERROR_FULL = 5;</code>
       */
      public static final int ERROR_FULL_VALUE = 5;
      /**
       * <code>ERROR_ALREADY_MEMBER = 6;</code>
       */
      public static final int ERROR_ALREADY_MEMBER_VALUE = 6;
      /**
       * <code>ERROR_BAD_PASSWORD = 7;</code>
       */
      public static final int ERROR_BAD_PASSWORD_VALUE = 7;
      /**
       * <code>ERROR_UNSPECIFIED = 8;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 8;
      /**
       * <code>ERROR_NO_TICKET = 9;</code>
       */
      public static final int ERROR_NO_TICKET_VALUE = 9;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 10;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 10;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_NO_PERMISSION;
          case 2: return ERROR_FAILED_LOGO_UPLOAD;
          case 3: return ERROR_BAD_FANTASY_LEAGUE_ID;
          case 4: return ERROR_BAD_NAME;
          case 5: return ERROR_FULL;
          case 6: return ERROR_ALREADY_MEMBER;
          case 7: return ERROR_BAD_PASSWORD;
          case 8: return ERROR_UNSPECIFIED;
          case 9: return ERROR_NO_TICKET;
          case 10: return ERROR_LEAGUE_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamCreateResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult() {
      return result_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 2;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS;
      fantasyTeamIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyTeamIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyTeamIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamCreateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamCreateResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamCreateResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamCreateResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamCreateResponse)
  }

  public interface CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> 
        getInviteChangeList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    int getInviteChangeCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
        getInviteChangeOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest}
   */
  public static final class CMsgDOTAFantasyLeagueEditInvitesRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesRequest)
      CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueEditInvitesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInvitesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueEditInvitesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueEditInvitesRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInvitesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                inviteChange_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange>();
                mutable_bitField0_ |= 0x00000004;
              }
              inviteChange_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          inviteChange_ = java.util.Collections.unmodifiableList(inviteChange_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInvitesRequest>() {
      public CMsgDOTAFantasyLeagueEditInvitesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueEditInvitesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesRequest> getParserForType() {
      return PARSER;
    }

    public interface InviteChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional bool invited = 2;</code>
       */
      boolean hasInvited();
      /**
       * <code>optional bool invited = 2;</code>
       */
      boolean getInvited();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange}
     */
    public static final class InviteChange extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
        InviteChangeOrBuilder {
      // Use InviteChange.newBuilder() to construct.
      private InviteChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private InviteChange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final InviteChange defaultInstance;
      public static InviteChange getDefaultInstance() {
        return defaultInstance;
      }

      public InviteChange getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private InviteChange(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                invited_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder.class);
      }

      public static com.google.protobuf.Parser<InviteChange> PARSER =
          new com.google.protobuf.AbstractParser<InviteChange>() {
        public InviteChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InviteChange(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<InviteChange> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int INVITED_FIELD_NUMBER = 2;
      private boolean invited_;
      /**
       * <code>optional bool invited = 2;</code>
       */
      public boolean hasInvited() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool invited = 2;</code>
       */
      public boolean getInvited() {
        return invited_;
      }

      private void initFields() {
        accountId_ = 0;
        invited_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, invited_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, invited_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          invited_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.invited_ = invited_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasInvited()) {
            setInvited(other.getInvited());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private boolean invited_ ;
        /**
         * <code>optional bool invited = 2;</code>
         */
        public boolean hasInvited() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public boolean getInvited() {
          return invited_;
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public Builder setInvited(boolean value) {
          bitField0_ |= 0x00000002;
          invited_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public Builder clearInvited() {
          bitField0_ = (bitField0_ & ~0x00000002);
          invited_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
      }

      static {
        defaultInstance = new InviteChange(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVITE_CHANGE_FIELD_NUMBER = 3;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> inviteChange_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> getInviteChangeList() {
      return inviteChange_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
        getInviteChangeOrBuilderList() {
      return inviteChange_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public int getInviteChangeCount() {
      return inviteChange_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index) {
      return inviteChange_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
        int index) {
      return inviteChange_.get(index);
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      password_ = "";
      inviteChange_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      for (int i = 0; i < inviteChange_.size(); i++) {
        output.writeMessage(3, inviteChange_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      for (int i = 0; i < inviteChange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inviteChange_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInviteChangeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inviteChangeBuilder_ == null) {
          inviteChange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          inviteChangeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        if (inviteChangeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            inviteChange_ = java.util.Collections.unmodifiableList(inviteChange_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inviteChange_ = inviteChange_;
        } else {
          result.inviteChange_ = inviteChangeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        if (inviteChangeBuilder_ == null) {
          if (!other.inviteChange_.isEmpty()) {
            if (inviteChange_.isEmpty()) {
              inviteChange_ = other.inviteChange_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInviteChangeIsMutable();
              inviteChange_.addAll(other.inviteChange_);
            }
            onChanged();
          }
        } else {
          if (!other.inviteChange_.isEmpty()) {
            if (inviteChangeBuilder_.isEmpty()) {
              inviteChangeBuilder_.dispose();
              inviteChangeBuilder_ = null;
              inviteChange_ = other.inviteChange_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inviteChangeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInviteChangeFieldBuilder() : null;
            } else {
              inviteChangeBuilder_.addAllMessages(other.inviteChange_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> inviteChange_ =
        java.util.Collections.emptyList();
      private void ensureInviteChangeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          inviteChange_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange>(inviteChange_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> inviteChangeBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> getInviteChangeList() {
        if (inviteChangeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inviteChange_);
        } else {
          return inviteChangeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public int getInviteChangeCount() {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.size();
        } else {
          return inviteChangeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index) {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.get(index);
        } else {
          return inviteChangeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder setInviteChange(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.set(index, value);
          onChanged();
        } else {
          inviteChangeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder setInviteChange(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.set(index, builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.add(value);
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.add(index, value);
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.add(builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.add(index, builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addAllInviteChange(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> values) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inviteChange_);
          onChanged();
        } else {
          inviteChangeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder clearInviteChange() {
        if (inviteChangeBuilder_ == null) {
          inviteChange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inviteChangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder removeInviteChange(int index) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.remove(index);
          onChanged();
        } else {
          inviteChangeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder getInviteChangeBuilder(
          int index) {
        return getInviteChangeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
          int index) {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.get(index);  } else {
          return inviteChangeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
           getInviteChangeOrBuilderList() {
        if (inviteChangeBuilder_ != null) {
          return inviteChangeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inviteChange_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder addInviteChangeBuilder() {
        return getInviteChangeFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder addInviteChangeBuilder(
          int index) {
        return getInviteChangeFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder> 
           getInviteChangeBuilderList() {
        return getInviteChangeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
          getInviteChangeFieldBuilder() {
        if (inviteChangeBuilder_ == null) {
          inviteChangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder>(
                  inviteChange_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          inviteChange_ = null;
        }
        return inviteChangeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueEditInvitesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesRequest)
  }

  public interface CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesResponse}
   */
  public static final class CMsgDOTAFantasyLeagueEditInvitesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesResponse)
      CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueEditInvitesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInvitesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueEditInvitesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueEditInvitesResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInvitesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInvitesResponse>() {
      public CMsgDOTAFantasyLeagueEditInvitesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueEditInvitesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueEditInvitesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueEditInvitesResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueEditInvitesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesResponse)
  }

  public interface CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftStatusRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatusRequest}
   */
  public static final class CMsgDOTAFantasyLeagueDraftStatusRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftStatusRequest)
      CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueDraftStatusRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftStatusRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueDraftStatusRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueDraftStatusRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftStatusRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatusRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftStatusRequest>() {
      public CMsgDOTAFantasyLeagueDraftStatusRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueDraftStatusRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatusRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatusRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftStatusRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftStatusRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueDraftStatusRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftStatusRequest)
  }

  public interface CMsgDOTAFantasyLeagueDraftStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    java.util.List<java.lang.Integer> getDraftOrderList();
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    int getDraftOrderCount();
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    int getDraftOrder(int index);

    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    boolean hasCurrentPick();
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    int getCurrentPick();

    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    boolean hasTimeRemaining();
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    int getTimeRemaining();

    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    boolean hasPendingResume();
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    boolean getPendingResume();

    /**
     * <code>optional bool completed = 6;</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional bool completed = 6;</code>
     */
    boolean getCompleted();

    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    java.util.List<java.lang.Integer> getAvailablePlayersList();
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    int getAvailablePlayersCount();
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    int getAvailablePlayers(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatus}
   */
  public static final class CMsgDOTAFantasyLeagueDraftStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftStatus)
      CMsgDOTAFantasyLeagueDraftStatusOrBuilder {
    // Use CMsgDOTAFantasyLeagueDraftStatus.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueDraftStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueDraftStatus defaultInstance;
    public static CMsgDOTAFantasyLeagueDraftStatus getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueDraftStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                draftOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              draftOrder_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                draftOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                draftOrder_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              currentPick_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              timeRemaining_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              pendingResume_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              completed_ = input.readBool();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                availablePlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              availablePlayers_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                availablePlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                availablePlayers_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = java.util.Collections.unmodifiableList(draftOrder_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = java.util.Collections.unmodifiableList(availablePlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatus> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftStatus>() {
      public CMsgDOTAFantasyLeagueDraftStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueDraftStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int DRAFT_ORDER_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> draftOrder_;
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getDraftOrderList() {
      return draftOrder_;
    }
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public int getDraftOrderCount() {
      return draftOrder_.size();
    }
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public int getDraftOrder(int index) {
      return draftOrder_.get(index);
    }

    public static final int CURRENT_PICK_FIELD_NUMBER = 3;
    private int currentPick_;
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    public boolean hasCurrentPick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    public int getCurrentPick() {
      return currentPick_;
    }

    public static final int TIME_REMAINING_FIELD_NUMBER = 4;
    private int timeRemaining_;
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    public boolean hasTimeRemaining() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    public int getTimeRemaining() {
      return timeRemaining_;
    }

    public static final int PENDING_RESUME_FIELD_NUMBER = 5;
    private boolean pendingResume_;
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    public boolean hasPendingResume() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    public boolean getPendingResume() {
      return pendingResume_;
    }

    public static final int COMPLETED_FIELD_NUMBER = 6;
    private boolean completed_;
    /**
     * <code>optional bool completed = 6;</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool completed = 6;</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    public static final int AVAILABLE_PLAYERS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> availablePlayers_;
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getAvailablePlayersList() {
      return availablePlayers_;
    }
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public int getAvailablePlayersCount() {
      return availablePlayers_.size();
    }
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public int getAvailablePlayers(int index) {
      return availablePlayers_.get(index);
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      draftOrder_ = java.util.Collections.emptyList();
      currentPick_ = 0;
      timeRemaining_ = 0;
      pendingResume_ = false;
      completed_ = false;
      availablePlayers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      for (int i = 0; i < draftOrder_.size(); i++) {
        output.writeUInt32(2, draftOrder_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, currentPick_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, timeRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, pendingResume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, completed_);
      }
      for (int i = 0; i < availablePlayers_.size(); i++) {
        output.writeUInt32(7, availablePlayers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < draftOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(draftOrder_.get(i));
        }
        size += dataSize;
        size += 1 * getDraftOrderList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, currentPick_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timeRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, pendingResume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, completed_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < availablePlayers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(availablePlayers_.get(i));
        }
        size += dataSize;
        size += 1 * getAvailablePlayersList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftStatus)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        draftOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pendingResume_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        completed_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        availablePlayers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = java.util.Collections.unmodifiableList(draftOrder_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.draftOrder_ = draftOrder_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPick_ = currentPick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeRemaining_ = timeRemaining_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pendingResume_ = pendingResume_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.completed_ = completed_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = java.util.Collections.unmodifiableList(availablePlayers_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.availablePlayers_ = availablePlayers_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (!other.draftOrder_.isEmpty()) {
          if (draftOrder_.isEmpty()) {
            draftOrder_ = other.draftOrder_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDraftOrderIsMutable();
            draftOrder_.addAll(other.draftOrder_);
          }
          onChanged();
        }
        if (other.hasCurrentPick()) {
          setCurrentPick(other.getCurrentPick());
        }
        if (other.hasTimeRemaining()) {
          setTimeRemaining(other.getTimeRemaining());
        }
        if (other.hasPendingResume()) {
          setPendingResume(other.getPendingResume());
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        if (!other.availablePlayers_.isEmpty()) {
          if (availablePlayers_.isEmpty()) {
            availablePlayers_ = other.availablePlayers_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAvailablePlayersIsMutable();
            availablePlayers_.addAll(other.availablePlayers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> draftOrder_ = java.util.Collections.emptyList();
      private void ensureDraftOrderIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = new java.util.ArrayList<java.lang.Integer>(draftOrder_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getDraftOrderList() {
        return java.util.Collections.unmodifiableList(draftOrder_);
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public int getDraftOrderCount() {
        return draftOrder_.size();
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public int getDraftOrder(int index) {
        return draftOrder_.get(index);
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder setDraftOrder(
          int index, int value) {
        ensureDraftOrderIsMutable();
        draftOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder addDraftOrder(int value) {
        ensureDraftOrderIsMutable();
        draftOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder addAllDraftOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDraftOrderIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, draftOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder clearDraftOrder() {
        draftOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int currentPick_ ;
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public boolean hasCurrentPick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public int getCurrentPick() {
        return currentPick_;
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public Builder setCurrentPick(int value) {
        bitField0_ |= 0x00000004;
        currentPick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public Builder clearCurrentPick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPick_ = 0;
        onChanged();
        return this;
      }

      private int timeRemaining_ ;
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public boolean hasTimeRemaining() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public int getTimeRemaining() {
        return timeRemaining_;
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public Builder setTimeRemaining(int value) {
        bitField0_ |= 0x00000008;
        timeRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public Builder clearTimeRemaining() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeRemaining_ = 0;
        onChanged();
        return this;
      }

      private boolean pendingResume_ ;
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public boolean hasPendingResume() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public boolean getPendingResume() {
        return pendingResume_;
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public Builder setPendingResume(boolean value) {
        bitField0_ |= 0x00000010;
        pendingResume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public Builder clearPendingResume() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pendingResume_ = false;
        onChanged();
        return this;
      }

      private boolean completed_ ;
      /**
       * <code>optional bool completed = 6;</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public Builder setCompleted(boolean value) {
        bitField0_ |= 0x00000020;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000020);
        completed_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> availablePlayers_ = java.util.Collections.emptyList();
      private void ensureAvailablePlayersIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = new java.util.ArrayList<java.lang.Integer>(availablePlayers_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getAvailablePlayersList() {
        return java.util.Collections.unmodifiableList(availablePlayers_);
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public int getAvailablePlayersCount() {
        return availablePlayers_.size();
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public int getAvailablePlayers(int index) {
        return availablePlayers_.get(index);
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder setAvailablePlayers(
          int index, int value) {
        ensureAvailablePlayersIsMutable();
        availablePlayers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder addAvailablePlayers(int value) {
        ensureAvailablePlayersIsMutable();
        availablePlayers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder addAllAvailablePlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAvailablePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, availablePlayers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder clearAvailablePlayers() {
        availablePlayers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftStatus)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueDraftStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftStatus)
  }

  public interface CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftPlayerRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    int getPlayerAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerRequest}
   */
  public static final class CMsgDOTAFantasyLeagueDraftPlayerRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftPlayerRequest)
      CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder {
    // Use CMsgDOTAFantasyLeagueDraftPlayerRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftPlayerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueDraftPlayerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueDraftPlayerRequest defaultInstance;
    public static CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftPlayerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftPlayerRequest>() {
      public CMsgDOTAFantasyLeagueDraftPlayerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueDraftPlayerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      playerAccountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftPlayerRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerAccountId_ = playerAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000004;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftPlayerRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueDraftPlayerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftPlayerRequest)
  }

  public interface CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftPlayerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerResponse}
   */
  public static final class CMsgDOTAFantasyLeagueDraftPlayerResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftPlayerResponse)
      CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder {
    // Use CMsgDOTAFantasyLeagueDraftPlayerResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftPlayerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeagueDraftPlayerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeagueDraftPlayerResponse defaultInstance;
    public static CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftPlayerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftPlayerResponse>() {
      public CMsgDOTAFantasyLeagueDraftPlayerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeagueDraftPlayerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_INVALID_FANTASY_LEAGUE = 2;</code>
       */
      ERROR_INVALID_FANTASY_LEAGUE(2, 2),
      /**
       * <code>ERROR_FANTASY_LEAGUE_NOT_DRAFTING = 3;</code>
       */
      ERROR_FANTASY_LEAGUE_NOT_DRAFTING(3, 3),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 4;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(4, 4),
      /**
       * <code>ERROR_NOT_OWNERS_TURN = 5;</code>
       */
      ERROR_NOT_OWNERS_TURN(5, 5),
      /**
       * <code>ERROR_PLAYER_INVALID = 6;</code>
       */
      ERROR_PLAYER_INVALID(6, 6),
      /**
       * <code>ERROR_PLAYER_UNAVAILABLE = 7;</code>
       */
      ERROR_PLAYER_UNAVAILABLE(7, 7),
      /**
       * <code>ERROR_PLAYER_NO_VALID_SLOTS = 8;</code>
       */
      ERROR_PLAYER_NO_VALID_SLOTS(8, 8),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_FANTASY_LEAGUE = 2;</code>
       */
      public static final int ERROR_INVALID_FANTASY_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_FANTASY_LEAGUE_NOT_DRAFTING = 3;</code>
       */
      public static final int ERROR_FANTASY_LEAGUE_NOT_DRAFTING_VALUE = 3;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 4;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 4;
      /**
       * <code>ERROR_NOT_OWNERS_TURN = 5;</code>
       */
      public static final int ERROR_NOT_OWNERS_TURN_VALUE = 5;
      /**
       * <code>ERROR_PLAYER_INVALID = 6;</code>
       */
      public static final int ERROR_PLAYER_INVALID_VALUE = 6;
      /**
       * <code>ERROR_PLAYER_UNAVAILABLE = 7;</code>
       */
      public static final int ERROR_PLAYER_UNAVAILABLE_VALUE = 7;
      /**
       * <code>ERROR_PLAYER_NO_VALID_SLOTS = 8;</code>
       */
      public static final int ERROR_PLAYER_NO_VALID_SLOTS_VALUE = 8;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_FANTASY_LEAGUE;
          case 3: return ERROR_FANTASY_LEAGUE_NOT_DRAFTING;
          case 4: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 5: return ERROR_NOT_OWNERS_TURN;
          case 6: return ERROR_PLAYER_INVALID;
          case 7: return ERROR_PLAYER_UNAVAILABLE;
          case 8: return ERROR_PLAYER_NO_VALID_SLOTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftPlayerResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeagueDraftPlayerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse)
  }

  public interface CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterSwapRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    int getTimestamp();

    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    boolean hasSlot1();
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    int getSlot1();

    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    boolean hasSlot2();
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    int getSlot2();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapRequest}
   */
  public static final class CMsgDOTAFantasyTeamRosterSwapRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterSwapRequest)
      CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterSwapRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterSwapRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterSwapRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterSwapRequest defaultInstance;
    public static CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterSwapRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              slot1_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              slot2_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterSwapRequest>() {
      public CMsgDOTAFantasyTeamRosterSwapRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterSwapRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SLOT_1_FIELD_NUMBER = 4;
    private int slot1_;
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    public boolean hasSlot1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    public int getSlot1() {
      return slot1_;
    }

    public static final int SLOT_2_FIELD_NUMBER = 5;
    private int slot2_;
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    public boolean hasSlot2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    public int getSlot2() {
      return slot2_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      timestamp_ = 0;
      slot1_ = 0;
      slot2_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, slot1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, slot2_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, slot1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, slot2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterSwapRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        slot1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        slot2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.slot1_ = slot1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.slot2_ = slot2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSlot1()) {
          setSlot1(other.getSlot1());
        }
        if (other.hasSlot2()) {
          setSlot2(other.getSlot2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int slot1_ ;
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public boolean hasSlot1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public int getSlot1() {
        return slot1_;
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public Builder setSlot1(int value) {
        bitField0_ |= 0x00000008;
        slot1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public Builder clearSlot1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slot1_ = 0;
        onChanged();
        return this;
      }

      private int slot2_ ;
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public boolean hasSlot2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public int getSlot2() {
        return slot2_;
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public Builder setSlot2(int value) {
        bitField0_ |= 0x00000010;
        slot2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public Builder clearSlot2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        slot2_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterSwapRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterSwapRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterSwapRequest)
  }

  public interface CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterSwapResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapResponse}
   */
  public static final class CMsgDOTAFantasyTeamRosterSwapResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterSwapResponse)
      CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterSwapResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterSwapResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterSwapResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterSwapResponse defaultInstance;
    public static CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterSwapResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterSwapResponse>() {
      public CMsgDOTAFantasyTeamRosterSwapResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterSwapResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterSwapResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(2, 2),
      /**
       * <code>ERROR_SLOTS_INVALID = 3;</code>
       */
      ERROR_SLOTS_INVALID(3, 3),
      /**
       * <code>ERROR_SLOT_LOCKED = 4;</code>
       */
      ERROR_SLOT_LOCKED(4, 4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_SLOTS_INVALID = 3;</code>
       */
      public static final int ERROR_SLOTS_INVALID_VALUE = 3;
      /**
       * <code>ERROR_SLOT_LOCKED = 4;</code>
       */
      public static final int ERROR_SLOT_LOCKED_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 3: return ERROR_SLOTS_INVALID;
          case 4: return ERROR_SLOT_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterSwapResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterSwapResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterSwapResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterSwapResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterSwapResponse)
  }

  public interface CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterAddDropRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    boolean hasAddAccountId();
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    int getAddAccountId();

    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    boolean hasDropAccountId();
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    int getDropAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropRequest}
   */
  public static final class CMsgDOTAFantasyTeamRosterAddDropRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterAddDropRequest)
      CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterAddDropRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterAddDropRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterAddDropRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterAddDropRequest defaultInstance;
    public static CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterAddDropRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              addAccountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              dropAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterAddDropRequest>() {
      public CMsgDOTAFantasyTeamRosterAddDropRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterAddDropRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int ADD_ACCOUNT_ID_FIELD_NUMBER = 5;
    private int addAccountId_;
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    public boolean hasAddAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    public int getAddAccountId() {
      return addAccountId_;
    }

    public static final int DROP_ACCOUNT_ID_FIELD_NUMBER = 6;
    private int dropAccountId_;
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    public boolean hasDropAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    public int getDropAccountId() {
      return dropAccountId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      addAccountId_ = 0;
      dropAccountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(5, addAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(6, dropAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, addAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, dropAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterAddDropRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        addAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dropAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addAccountId_ = addAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dropAccountId_ = dropAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasAddAccountId()) {
          setAddAccountId(other.getAddAccountId());
        }
        if (other.hasDropAccountId()) {
          setDropAccountId(other.getDropAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int addAccountId_ ;
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public boolean hasAddAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public int getAddAccountId() {
        return addAccountId_;
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public Builder setAddAccountId(int value) {
        bitField0_ |= 0x00000004;
        addAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public Builder clearAddAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addAccountId_ = 0;
        onChanged();
        return this;
      }

      private int dropAccountId_ ;
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public boolean hasDropAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public int getDropAccountId() {
        return dropAccountId_;
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public Builder setDropAccountId(int value) {
        bitField0_ |= 0x00000008;
        dropAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public Builder clearDropAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dropAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterAddDropRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterAddDropRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterAddDropRequest)
  }

  public interface CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterAddDropResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropResponse}
   */
  public static final class CMsgDOTAFantasyTeamRosterAddDropResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterAddDropResponse)
      CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterAddDropResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterAddDropResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterAddDropResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterAddDropResponse defaultInstance;
    public static CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterAddDropResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterAddDropResponse>() {
      public CMsgDOTAFantasyTeamRosterAddDropResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterAddDropResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterAddDropResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(2, 2),
      /**
       * <code>ERROR_PLAYER_NOT_AVAILABLE = 3;</code>
       */
      ERROR_PLAYER_NOT_AVAILABLE(3, 3),
      /**
       * <code>ERROR_PLAYER_NOT_ON_TEAM = 4;</code>
       */
      ERROR_PLAYER_NOT_ON_TEAM(4, 4),
      /**
       * <code>ERROR_TRADE_ALREADY_PENDING = 5;</code>
       */
      ERROR_TRADE_ALREADY_PENDING(5, 5),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_PLAYER_NOT_AVAILABLE = 3;</code>
       */
      public static final int ERROR_PLAYER_NOT_AVAILABLE_VALUE = 3;
      /**
       * <code>ERROR_PLAYER_NOT_ON_TEAM = 4;</code>
       */
      public static final int ERROR_PLAYER_NOT_ON_TEAM_VALUE = 4;
      /**
       * <code>ERROR_TRADE_ALREADY_PENDING = 5;</code>
       */
      public static final int ERROR_TRADE_ALREADY_PENDING_VALUE = 5;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 3: return ERROR_PLAYER_NOT_AVAILABLE;
          case 4: return ERROR_PLAYER_NOT_ON_TEAM;
          case 5: return ERROR_TRADE_ALREADY_PENDING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterAddDropResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterAddDropResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterAddDropResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterAddDropResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterAddDropResponse)
  }

  public interface CMsgDOTAFantasyTeamTradesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradesRequest}
   */
  public static final class CMsgDOTAFantasyTeamTradesRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesRequest)
      CMsgDOTAFantasyTeamTradesRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamTradesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamTradesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamTradesRequest defaultInstance;
    public static CMsgDOTAFantasyTeamTradesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamTradesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradesRequest>() {
      public CMsgDOTAFantasyTeamTradesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamTradesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamTradesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesRequest)
  }

  public interface CMsgDOTAFantasyTeamTradesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> 
        getTradesList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    int getTradesCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
        getTradesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse}
   */
  public static final class CMsgDOTAFantasyTeamTradesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesResponse)
      CMsgDOTAFantasyTeamTradesResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamTradesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamTradesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamTradesResponse defaultInstance;
    public static CMsgDOTAFantasyTeamTradesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamTradesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                trades_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade>();
                mutable_bitField0_ |= 0x00000002;
              }
              trades_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          trades_ = java.util.Collections.unmodifiableList(trades_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradesResponse>() {
      public CMsgDOTAFantasyTeamTradesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamTradesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamTradesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamTradesResponse.EResult)
    }

    public interface TradeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesResponse.Trade)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      int getTimestamp();

      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      boolean hasOwnerAccountId1();
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      int getOwnerAccountId1();

      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      boolean hasOwnerAccountId2();
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      int getOwnerAccountId2();

      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      boolean hasPlayerAccountId1();
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      int getPlayerAccountId1();

      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      boolean hasPlayerAccountId2();
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      int getPlayerAccountId2();

      /**
       * <code>optional uint32 status = 6;</code>
       */
      boolean hasStatus();
      /**
       * <code>optional uint32 status = 6;</code>
       */
      int getStatus();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse.Trade}
     */
    public static final class Trade extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesResponse.Trade)
        TradeOrBuilder {
      // Use Trade.newBuilder() to construct.
      private Trade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Trade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Trade defaultInstance;
      public static Trade getDefaultInstance() {
        return defaultInstance;
      }

      public Trade getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Trade(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId1_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                ownerAccountId2_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                playerAccountId1_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                playerAccountId2_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                status_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder.class);
      }

      public static com.google.protobuf.Parser<Trade> PARSER =
          new com.google.protobuf.AbstractParser<Trade>() {
        public Trade parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Trade(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Trade> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      public static final int OWNER_ACCOUNT_ID_1_FIELD_NUMBER = 2;
      private int ownerAccountId1_;
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      public boolean hasOwnerAccountId1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      public int getOwnerAccountId1() {
        return ownerAccountId1_;
      }

      public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 3;
      private int ownerAccountId2_;
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }

      public static final int PLAYER_ACCOUNT_ID_1_FIELD_NUMBER = 4;
      private int playerAccountId1_;
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      public boolean hasPlayerAccountId1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      public int getPlayerAccountId1() {
        return playerAccountId1_;
      }

      public static final int PLAYER_ACCOUNT_ID_2_FIELD_NUMBER = 5;
      private int playerAccountId2_;
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      public boolean hasPlayerAccountId2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      public int getPlayerAccountId2() {
        return playerAccountId2_;
      }

      public static final int STATUS_FIELD_NUMBER = 6;
      private int status_;
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public int getStatus() {
        return status_;
      }

      private void initFields() {
        timestamp_ = 0;
        ownerAccountId1_ = 0;
        ownerAccountId2_ = 0;
        playerAccountId1_ = 0;
        playerAccountId2_ = 0;
        status_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, playerAccountId1_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, playerAccountId2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, status_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, playerAccountId1_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, playerAccountId2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, status_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse.Trade}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesResponse.Trade)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          playerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          playerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          status_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId1_ = ownerAccountId1_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ownerAccountId2_ = ownerAccountId2_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.playerAccountId1_ = playerAccountId1_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.playerAccountId2_ = playerAccountId2_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.status_ = status_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasOwnerAccountId1()) {
            setOwnerAccountId1(other.getOwnerAccountId1());
          }
          if (other.hasOwnerAccountId2()) {
            setOwnerAccountId2(other.getOwnerAccountId2());
          }
          if (other.hasPlayerAccountId1()) {
            setPlayerAccountId1(other.getPlayerAccountId1());
          }
          if (other.hasPlayerAccountId2()) {
            setPlayerAccountId2(other.getPlayerAccountId2());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId1_ ;
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public boolean hasOwnerAccountId1() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public int getOwnerAccountId1() {
          return ownerAccountId1_;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public Builder setOwnerAccountId1(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public Builder clearOwnerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId2_ ;
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public boolean hasOwnerAccountId2() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public int getOwnerAccountId2() {
          return ownerAccountId2_;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public Builder setOwnerAccountId2(int value) {
          bitField0_ |= 0x00000004;
          ownerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public Builder clearOwnerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ownerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private int playerAccountId1_ ;
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public boolean hasPlayerAccountId1() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public int getPlayerAccountId1() {
          return playerAccountId1_;
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public Builder setPlayerAccountId1(int value) {
          bitField0_ |= 0x00000008;
          playerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public Builder clearPlayerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000008);
          playerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int playerAccountId2_ ;
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public boolean hasPlayerAccountId2() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public int getPlayerAccountId2() {
          return playerAccountId2_;
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public Builder setPlayerAccountId2(int value) {
          bitField0_ |= 0x00000010;
          playerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public Builder clearPlayerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          playerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private int status_ ;
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public int getStatus() {
          return status_;
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public Builder setStatus(int value) {
          bitField0_ |= 0x00000020;
          status_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000020);
          status_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesResponse.Trade)
      }

      static {
        defaultInstance = new Trade(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesResponse.Trade)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult() {
      return result_;
    }

    public static final int TRADES_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> trades_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> getTradesList() {
      return trades_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
        getTradesOrBuilderList() {
      return trades_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public int getTradesCount() {
      return trades_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index) {
      return trades_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
        int index) {
      return trades_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS;
      trades_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < trades_.size(); i++) {
        output.writeMessage(2, trades_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < trades_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, trades_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTradesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tradesBuilder_ == null) {
          trades_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tradesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (tradesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            trades_ = java.util.Collections.unmodifiableList(trades_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.trades_ = trades_;
        } else {
          result.trades_ = tradesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (tradesBuilder_ == null) {
          if (!other.trades_.isEmpty()) {
            if (trades_.isEmpty()) {
              trades_ = other.trades_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTradesIsMutable();
              trades_.addAll(other.trades_);
            }
            onChanged();
          }
        } else {
          if (!other.trades_.isEmpty()) {
            if (tradesBuilder_.isEmpty()) {
              tradesBuilder_.dispose();
              tradesBuilder_ = null;
              trades_ = other.trades_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tradesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTradesFieldBuilder() : null;
            } else {
              tradesBuilder_.addAllMessages(other.trades_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> trades_ =
        java.util.Collections.emptyList();
      private void ensureTradesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          trades_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade>(trades_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> tradesBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> getTradesList() {
        if (tradesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trades_);
        } else {
          return tradesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public int getTradesCount() {
        if (tradesBuilder_ == null) {
          return trades_.size();
        } else {
          return tradesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index) {
        if (tradesBuilder_ == null) {
          return trades_.get(index);
        } else {
          return tradesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder setTrades(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.set(index, value);
          onChanged();
        } else {
          tradesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder setTrades(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.set(index, builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.add(value);
          onChanged();
        } else {
          tradesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.add(index, value);
          onChanged();
        } else {
          tradesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.add(builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.add(index, builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addAllTrades(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> values) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trades_);
          onChanged();
        } else {
          tradesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder clearTrades() {
        if (tradesBuilder_ == null) {
          trades_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tradesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder removeTrades(int index) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.remove(index);
          onChanged();
        } else {
          tradesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder getTradesBuilder(
          int index) {
        return getTradesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
          int index) {
        if (tradesBuilder_ == null) {
          return trades_.get(index);  } else {
          return tradesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
           getTradesOrBuilderList() {
        if (tradesBuilder_ != null) {
          return tradesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trades_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder addTradesBuilder() {
        return getTradesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder addTradesBuilder(
          int index) {
        return getTradesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder> 
           getTradesBuilderList() {
        return getTradesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
          getTradesFieldBuilder() {
        if (tradesBuilder_ == null) {
          tradesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder>(
                  trades_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          trades_ = null;
        }
        return tradesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamTradesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesResponse)
  }

  public interface CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradeCancelRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    boolean hasTeamIndex1();
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    int getTeamIndex1();

    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    boolean hasOwnerAccountId2();
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    int getOwnerAccountId2();

    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    boolean hasTeamIndex2();
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    int getTeamIndex2();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelRequest}
   */
  public static final class CMsgDOTAFantasyTeamTradeCancelRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradeCancelRequest)
      CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamTradeCancelRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradeCancelRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamTradeCancelRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamTradeCancelRequest defaultInstance;
    public static CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradeCancelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              teamIndex1_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              ownerAccountId2_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              teamIndex2_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradeCancelRequest>() {
      public CMsgDOTAFantasyTeamTradeCancelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamTradeCancelRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_1_FIELD_NUMBER = 3;
    private int teamIndex1_;
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    public boolean hasTeamIndex1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    public int getTeamIndex1() {
      return teamIndex1_;
    }

    public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 4;
    private int ownerAccountId2_;
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    public boolean hasOwnerAccountId2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    public int getOwnerAccountId2() {
      return ownerAccountId2_;
    }

    public static final int TEAM_INDEX_2_FIELD_NUMBER = 5;
    private int teamIndex2_;
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    public boolean hasTeamIndex2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    public int getTeamIndex2() {
      return teamIndex2_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex1_ = 0;
      ownerAccountId2_ = 0;
      teamIndex2_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, teamIndex1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, ownerAccountId2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, teamIndex2_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, teamIndex1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, ownerAccountId2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamIndex2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradeCancelRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamIndex2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex1_ = teamIndex1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ownerAccountId2_ = ownerAccountId2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamIndex2_ = teamIndex2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex1()) {
          setTeamIndex1(other.getTeamIndex1());
        }
        if (other.hasOwnerAccountId2()) {
          setOwnerAccountId2(other.getOwnerAccountId2());
        }
        if (other.hasTeamIndex2()) {
          setTeamIndex2(other.getTeamIndex2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex1_ ;
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public boolean hasTeamIndex1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public int getTeamIndex1() {
        return teamIndex1_;
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public Builder setTeamIndex1(int value) {
        bitField0_ |= 0x00000002;
        teamIndex1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public Builder clearTeamIndex1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex1_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId2_ ;
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public Builder setOwnerAccountId2(int value) {
        bitField0_ |= 0x00000004;
        ownerAccountId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public Builder clearOwnerAccountId2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerAccountId2_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex2_ ;
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public boolean hasTeamIndex2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public int getTeamIndex2() {
        return teamIndex2_;
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public Builder setTeamIndex2(int value) {
        bitField0_ |= 0x00000008;
        teamIndex2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public Builder clearTeamIndex2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamIndex2_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradeCancelRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamTradeCancelRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradeCancelRequest)
  }

  public interface CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradeCancelResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelResponse}
   */
  public static final class CMsgDOTAFantasyTeamTradeCancelResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradeCancelResponse)
      CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamTradeCancelResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradeCancelResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamTradeCancelResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamTradeCancelResponse defaultInstance;
    public static CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradeCancelResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradeCancelResponse>() {
      public CMsgDOTAFantasyTeamTradeCancelResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamTradeCancelResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamTradeCancelResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      /**
       * <code>ERROR_NO_TRADE = 3;</code>
       */
      ERROR_NO_TRADE(3, 3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_NO_TRADE = 3;</code>
       */
      public static final int ERROR_NO_TRADE_VALUE = 3;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_NO_TRADE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamTradeCancelResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradeCancelResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradeCancelResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamTradeCancelResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradeCancelResponse)
  }

  public interface CMsgDOTAFantasyTeamRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterRequest}
   */
  public static final class CMsgDOTAFantasyTeamRosterRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterRequest)
      CMsgDOTAFantasyTeamRosterRequestOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterRequest defaultInstance;
    public static CMsgDOTAFantasyTeamRosterRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterRequest>() {
      public CMsgDOTAFantasyTeamRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      ownerAccountId_ = 0;
      timestamp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000004;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterRequest)
  }

  public interface CMsgDOTAFantasyTeamRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult();

    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    java.util.List<java.lang.Integer> getPlayerAccountIdsList();
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    int getPlayerAccountIdsCount();
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    int getPlayerAccountIds(int index);

    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    java.util.List<java.lang.Boolean> getPlayerLockedList();
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    int getPlayerLockedCount();
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    boolean getPlayerLocked(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterResponse}
   */
  public static final class CMsgDOTAFantasyTeamRosterResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterResponse)
      CMsgDOTAFantasyTeamRosterResponseOrBuilder {
    // Use CMsgDOTAFantasyTeamRosterResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyTeamRosterResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyTeamRosterResponse defaultInstance;
    public static CMsgDOTAFantasyTeamRosterResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyTeamRosterResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerAccountIds_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerAccountIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerLocked_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerLocked_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                playerLocked_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerLocked_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = java.util.Collections.unmodifiableList(playerAccountIds_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = java.util.Collections.unmodifiableList(playerLocked_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterResponse>() {
      public CMsgDOTAFantasyTeamRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyTeamRosterResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(3, 3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 3;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_OWNER_NOT_IN_LEAGUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult() {
      return result_;
    }

    public static final int PLAYER_ACCOUNT_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> playerAccountIds_;
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerAccountIdsList() {
      return playerAccountIds_;
    }
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public int getPlayerAccountIdsCount() {
      return playerAccountIds_.size();
    }
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public int getPlayerAccountIds(int index) {
      return playerAccountIds_.get(index);
    }

    public static final int PLAYER_LOCKED_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> playerLocked_;
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getPlayerLockedList() {
      return playerLocked_;
    }
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public int getPlayerLockedCount() {
      return playerLocked_.size();
    }
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public boolean getPlayerLocked(int index) {
      return playerLocked_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS;
      playerAccountIds_ = java.util.Collections.emptyList();
      playerLocked_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < playerAccountIds_.size(); i++) {
        output.writeUInt32(2, playerAccountIds_.get(i));
      }
      for (int i = 0; i < playerLocked_.size(); i++) {
        output.writeBool(3, playerLocked_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerAccountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerAccountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerAccountIdsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPlayerLockedList().size();
        size += dataSize;
        size += 1 * getPlayerLockedList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        playerLocked_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = java.util.Collections.unmodifiableList(playerAccountIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playerAccountIds_ = playerAccountIds_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = java.util.Collections.unmodifiableList(playerLocked_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.playerLocked_ = playerLocked_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (!other.playerAccountIds_.isEmpty()) {
          if (playerAccountIds_.isEmpty()) {
            playerAccountIds_ = other.playerAccountIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayerAccountIdsIsMutable();
            playerAccountIds_.addAll(other.playerAccountIds_);
          }
          onChanged();
        }
        if (!other.playerLocked_.isEmpty()) {
          if (playerLocked_.isEmpty()) {
            playerLocked_ = other.playerLocked_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePlayerLockedIsMutable();
            playerLocked_.addAll(other.playerLocked_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> playerAccountIds_ = java.util.Collections.emptyList();
      private void ensurePlayerAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>(playerAccountIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerAccountIdsList() {
        return java.util.Collections.unmodifiableList(playerAccountIds_);
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public int getPlayerAccountIdsCount() {
        return playerAccountIds_.size();
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public int getPlayerAccountIds(int index) {
        return playerAccountIds_.get(index);
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder setPlayerAccountIds(
          int index, int value) {
        ensurePlayerAccountIdsIsMutable();
        playerAccountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder addPlayerAccountIds(int value) {
        ensurePlayerAccountIdsIsMutable();
        playerAccountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder addAllPlayerAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerAccountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder clearPlayerAccountIds() {
        playerAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> playerLocked_ = java.util.Collections.emptyList();
      private void ensurePlayerLockedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = new java.util.ArrayList<java.lang.Boolean>(playerLocked_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getPlayerLockedList() {
        return java.util.Collections.unmodifiableList(playerLocked_);
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public int getPlayerLockedCount() {
        return playerLocked_.size();
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public boolean getPlayerLocked(int index) {
        return playerLocked_.get(index);
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder setPlayerLocked(
          int index, boolean value) {
        ensurePlayerLockedIsMutable();
        playerLocked_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder addPlayerLocked(boolean value) {
        ensurePlayerLockedIsMutable();
        playerLocked_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder addAllPlayerLocked(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePlayerLockedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerLocked_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder clearPlayerLocked() {
        playerLocked_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyTeamRosterResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterResponse)
  }

  public interface CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsRequest}
   */
  public static final class CMsgDOTAFantasyPlayerHisoricalStatsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
      CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder {
    // Use CMsgDOTAFantasyPlayerHisoricalStatsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerHisoricalStatsRequest defaultInstance;
    public static CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerHisoricalStatsRequest>() {
      public CMsgDOTAFantasyPlayerHisoricalStatsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerHisoricalStatsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerHisoricalStatsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
  }

  public interface CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> 
        getStatsList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    int getStatsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
        getStatsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse}
   */
  public static final class CMsgDOTAFantasyPlayerHisoricalStatsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
      CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder {
    // Use CMsgDOTAFantasyPlayerHisoricalStatsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerHisoricalStatsResponse defaultInstance;
    public static CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                stats_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats>();
                mutable_bitField0_ |= 0x00000002;
              }
              stats_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          stats_ = java.util.Collections.unmodifiableList(stats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerHisoricalStatsResponse>() {
      public CMsgDOTAFantasyPlayerHisoricalStatsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerHisoricalStatsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult)
    }

    public interface PlayerScoreAccumulatorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 matches = 1;</code>
       */
      boolean hasMatches();
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      int getMatches();

      /**
       * <code>optional float levels = 2;</code>
       */
      boolean hasLevels();
      /**
       * <code>optional float levels = 2;</code>
       */
      float getLevels();

      /**
       * <code>optional float kills = 3;</code>
       */
      boolean hasKills();
      /**
       * <code>optional float kills = 3;</code>
       */
      float getKills();

      /**
       * <code>optional float deaths = 4;</code>
       */
      boolean hasDeaths();
      /**
       * <code>optional float deaths = 4;</code>
       */
      float getDeaths();

      /**
       * <code>optional float assists = 5;</code>
       */
      boolean hasAssists();
      /**
       * <code>optional float assists = 5;</code>
       */
      float getAssists();

      /**
       * <code>optional float last_hits = 6;</code>
       */
      boolean hasLastHits();
      /**
       * <code>optional float last_hits = 6;</code>
       */
      float getLastHits();

      /**
       * <code>optional float denies = 7;</code>
       */
      boolean hasDenies();
      /**
       * <code>optional float denies = 7;</code>
       */
      float getDenies();

      /**
       * <code>optional float gpm = 8;</code>
       */
      boolean hasGpm();
      /**
       * <code>optional float gpm = 8;</code>
       */
      float getGpm();

      /**
       * <code>optional float xppm = 9;</code>
       */
      boolean hasXppm();
      /**
       * <code>optional float xppm = 9;</code>
       */
      float getXppm();

      /**
       * <code>optional float stuns = 10;</code>
       */
      boolean hasStuns();
      /**
       * <code>optional float stuns = 10;</code>
       */
      float getStuns();

      /**
       * <code>optional float healing = 11;</code>
       */
      boolean hasHealing();
      /**
       * <code>optional float healing = 11;</code>
       */
      float getHealing();

      /**
       * <code>optional float tower_kills = 12;</code>
       */
      boolean hasTowerKills();
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      float getTowerKills();

      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      boolean hasRoshanKills();
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      float getRoshanKills();

      /**
       * <code>optional float score = 14;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 14;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator}
     */
    public static final class PlayerScoreAccumulator extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
        PlayerScoreAccumulatorOrBuilder {
      // Use PlayerScoreAccumulator.newBuilder() to construct.
      private PlayerScoreAccumulator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayerScoreAccumulator(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayerScoreAccumulator defaultInstance;
      public static PlayerScoreAccumulator getDefaultInstance() {
        return defaultInstance;
      }

      public PlayerScoreAccumulator getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerScoreAccumulator(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matches_ = input.readUInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                levels_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                kills_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                deaths_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                assists_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                lastHits_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                denies_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                gpm_ = input.readFloat();
                break;
              }
              case 77: {
                bitField0_ |= 0x00000100;
                xppm_ = input.readFloat();
                break;
              }
              case 85: {
                bitField0_ |= 0x00000200;
                stuns_ = input.readFloat();
                break;
              }
              case 93: {
                bitField0_ |= 0x00000400;
                healing_ = input.readFloat();
                break;
              }
              case 101: {
                bitField0_ |= 0x00000800;
                towerKills_ = input.readFloat();
                break;
              }
              case 109: {
                bitField0_ |= 0x00001000;
                roshanKills_ = input.readFloat();
                break;
              }
              case 117: {
                bitField0_ |= 0x00002000;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayerScoreAccumulator> PARSER =
          new com.google.protobuf.AbstractParser<PlayerScoreAccumulator>() {
        public PlayerScoreAccumulator parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerScoreAccumulator(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerScoreAccumulator> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MATCHES_FIELD_NUMBER = 1;
      private int matches_;
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      public boolean hasMatches() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      public int getMatches() {
        return matches_;
      }

      public static final int LEVELS_FIELD_NUMBER = 2;
      private float levels_;
      /**
       * <code>optional float levels = 2;</code>
       */
      public boolean hasLevels() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float levels = 2;</code>
       */
      public float getLevels() {
        return levels_;
      }

      public static final int KILLS_FIELD_NUMBER = 3;
      private float kills_;
      /**
       * <code>optional float kills = 3;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float kills = 3;</code>
       */
      public float getKills() {
        return kills_;
      }

      public static final int DEATHS_FIELD_NUMBER = 4;
      private float deaths_;
      /**
       * <code>optional float deaths = 4;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float deaths = 4;</code>
       */
      public float getDeaths() {
        return deaths_;
      }

      public static final int ASSISTS_FIELD_NUMBER = 5;
      private float assists_;
      /**
       * <code>optional float assists = 5;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float assists = 5;</code>
       */
      public float getAssists() {
        return assists_;
      }

      public static final int LAST_HITS_FIELD_NUMBER = 6;
      private float lastHits_;
      /**
       * <code>optional float last_hits = 6;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float last_hits = 6;</code>
       */
      public float getLastHits() {
        return lastHits_;
      }

      public static final int DENIES_FIELD_NUMBER = 7;
      private float denies_;
      /**
       * <code>optional float denies = 7;</code>
       */
      public boolean hasDenies() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float denies = 7;</code>
       */
      public float getDenies() {
        return denies_;
      }

      public static final int GPM_FIELD_NUMBER = 8;
      private float gpm_;
      /**
       * <code>optional float gpm = 8;</code>
       */
      public boolean hasGpm() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float gpm = 8;</code>
       */
      public float getGpm() {
        return gpm_;
      }

      public static final int XPPM_FIELD_NUMBER = 9;
      private float xppm_;
      /**
       * <code>optional float xppm = 9;</code>
       */
      public boolean hasXppm() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float xppm = 9;</code>
       */
      public float getXppm() {
        return xppm_;
      }

      public static final int STUNS_FIELD_NUMBER = 10;
      private float stuns_;
      /**
       * <code>optional float stuns = 10;</code>
       */
      public boolean hasStuns() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float stuns = 10;</code>
       */
      public float getStuns() {
        return stuns_;
      }

      public static final int HEALING_FIELD_NUMBER = 11;
      private float healing_;
      /**
       * <code>optional float healing = 11;</code>
       */
      public boolean hasHealing() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float healing = 11;</code>
       */
      public float getHealing() {
        return healing_;
      }

      public static final int TOWER_KILLS_FIELD_NUMBER = 12;
      private float towerKills_;
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      public boolean hasTowerKills() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      public float getTowerKills() {
        return towerKills_;
      }

      public static final int ROSHAN_KILLS_FIELD_NUMBER = 13;
      private float roshanKills_;
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      public boolean hasRoshanKills() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      public float getRoshanKills() {
        return roshanKills_;
      }

      public static final int SCORE_FIELD_NUMBER = 14;
      private float score_;
      /**
       * <code>optional float score = 14;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float score = 14;</code>
       */
      public float getScore() {
        return score_;
      }

      private void initFields() {
        matches_ = 0;
        levels_ = 0F;
        kills_ = 0F;
        deaths_ = 0F;
        assists_ = 0F;
        lastHits_ = 0F;
        denies_ = 0F;
        gpm_ = 0F;
        xppm_ = 0F;
        stuns_ = 0F;
        healing_ = 0F;
        towerKills_ = 0F;
        roshanKills_ = 0F;
        score_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, matches_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, levels_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, kills_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, deaths_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, assists_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, lastHits_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, denies_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, gpm_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeFloat(9, xppm_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeFloat(10, stuns_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeFloat(11, healing_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeFloat(12, towerKills_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeFloat(13, roshanKills_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeFloat(14, score_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, matches_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, levels_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, kills_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, deaths_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, assists_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, lastHits_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, denies_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, gpm_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, xppm_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(10, stuns_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(11, healing_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(12, towerKills_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(13, roshanKills_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(14, score_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          matches_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          levels_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          kills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          deaths_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          assists_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          lastHits_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          denies_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          gpm_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          xppm_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          stuns_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000200);
          healing_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000400);
          towerKills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000800);
          roshanKills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00001000);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matches_ = matches_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.levels_ = levels_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.kills_ = kills_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.deaths_ = deaths_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.assists_ = assists_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.lastHits_ = lastHits_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.denies_ = denies_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.gpm_ = gpm_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.xppm_ = xppm_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.stuns_ = stuns_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.healing_ = healing_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.towerKills_ = towerKills_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.roshanKills_ = roshanKills_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) return this;
          if (other.hasMatches()) {
            setMatches(other.getMatches());
          }
          if (other.hasLevels()) {
            setLevels(other.getLevels());
          }
          if (other.hasKills()) {
            setKills(other.getKills());
          }
          if (other.hasDeaths()) {
            setDeaths(other.getDeaths());
          }
          if (other.hasAssists()) {
            setAssists(other.getAssists());
          }
          if (other.hasLastHits()) {
            setLastHits(other.getLastHits());
          }
          if (other.hasDenies()) {
            setDenies(other.getDenies());
          }
          if (other.hasGpm()) {
            setGpm(other.getGpm());
          }
          if (other.hasXppm()) {
            setXppm(other.getXppm());
          }
          if (other.hasStuns()) {
            setStuns(other.getStuns());
          }
          if (other.hasHealing()) {
            setHealing(other.getHealing());
          }
          if (other.hasTowerKills()) {
            setTowerKills(other.getTowerKills());
          }
          if (other.hasRoshanKills()) {
            setRoshanKills(other.getRoshanKills());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int matches_ ;
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public boolean hasMatches() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public int getMatches() {
          return matches_;
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public Builder setMatches(int value) {
          bitField0_ |= 0x00000001;
          matches_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public Builder clearMatches() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matches_ = 0;
          onChanged();
          return this;
        }

        private float levels_ ;
        /**
         * <code>optional float levels = 2;</code>
         */
        public boolean hasLevels() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public float getLevels() {
          return levels_;
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public Builder setLevels(float value) {
          bitField0_ |= 0x00000002;
          levels_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public Builder clearLevels() {
          bitField0_ = (bitField0_ & ~0x00000002);
          levels_ = 0F;
          onChanged();
          return this;
        }

        private float kills_ ;
        /**
         * <code>optional float kills = 3;</code>
         */
        public boolean hasKills() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public float getKills() {
          return kills_;
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public Builder setKills(float value) {
          bitField0_ |= 0x00000004;
          kills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public Builder clearKills() {
          bitField0_ = (bitField0_ & ~0x00000004);
          kills_ = 0F;
          onChanged();
          return this;
        }

        private float deaths_ ;
        /**
         * <code>optional float deaths = 4;</code>
         */
        public boolean hasDeaths() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public float getDeaths() {
          return deaths_;
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public Builder setDeaths(float value) {
          bitField0_ |= 0x00000008;
          deaths_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public Builder clearDeaths() {
          bitField0_ = (bitField0_ & ~0x00000008);
          deaths_ = 0F;
          onChanged();
          return this;
        }

        private float assists_ ;
        /**
         * <code>optional float assists = 5;</code>
         */
        public boolean hasAssists() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public float getAssists() {
          return assists_;
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public Builder setAssists(float value) {
          bitField0_ |= 0x00000010;
          assists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public Builder clearAssists() {
          bitField0_ = (bitField0_ & ~0x00000010);
          assists_ = 0F;
          onChanged();
          return this;
        }

        private float lastHits_ ;
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public boolean hasLastHits() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public float getLastHits() {
          return lastHits_;
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public Builder setLastHits(float value) {
          bitField0_ |= 0x00000020;
          lastHits_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public Builder clearLastHits() {
          bitField0_ = (bitField0_ & ~0x00000020);
          lastHits_ = 0F;
          onChanged();
          return this;
        }

        private float denies_ ;
        /**
         * <code>optional float denies = 7;</code>
         */
        public boolean hasDenies() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public float getDenies() {
          return denies_;
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public Builder setDenies(float value) {
          bitField0_ |= 0x00000040;
          denies_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public Builder clearDenies() {
          bitField0_ = (bitField0_ & ~0x00000040);
          denies_ = 0F;
          onChanged();
          return this;
        }

        private float gpm_ ;
        /**
         * <code>optional float gpm = 8;</code>
         */
        public boolean hasGpm() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public float getGpm() {
          return gpm_;
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public Builder setGpm(float value) {
          bitField0_ |= 0x00000080;
          gpm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public Builder clearGpm() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gpm_ = 0F;
          onChanged();
          return this;
        }

        private float xppm_ ;
        /**
         * <code>optional float xppm = 9;</code>
         */
        public boolean hasXppm() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public float getXppm() {
          return xppm_;
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public Builder setXppm(float value) {
          bitField0_ |= 0x00000100;
          xppm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public Builder clearXppm() {
          bitField0_ = (bitField0_ & ~0x00000100);
          xppm_ = 0F;
          onChanged();
          return this;
        }

        private float stuns_ ;
        /**
         * <code>optional float stuns = 10;</code>
         */
        public boolean hasStuns() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public float getStuns() {
          return stuns_;
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public Builder setStuns(float value) {
          bitField0_ |= 0x00000200;
          stuns_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public Builder clearStuns() {
          bitField0_ = (bitField0_ & ~0x00000200);
          stuns_ = 0F;
          onChanged();
          return this;
        }

        private float healing_ ;
        /**
         * <code>optional float healing = 11;</code>
         */
        public boolean hasHealing() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public float getHealing() {
          return healing_;
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public Builder setHealing(float value) {
          bitField0_ |= 0x00000400;
          healing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public Builder clearHealing() {
          bitField0_ = (bitField0_ & ~0x00000400);
          healing_ = 0F;
          onChanged();
          return this;
        }

        private float towerKills_ ;
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public boolean hasTowerKills() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public float getTowerKills() {
          return towerKills_;
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public Builder setTowerKills(float value) {
          bitField0_ |= 0x00000800;
          towerKills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public Builder clearTowerKills() {
          bitField0_ = (bitField0_ & ~0x00000800);
          towerKills_ = 0F;
          onChanged();
          return this;
        }

        private float roshanKills_ ;
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public boolean hasRoshanKills() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public float getRoshanKills() {
          return roshanKills_;
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public Builder setRoshanKills(float value) {
          bitField0_ |= 0x00001000;
          roshanKills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public Builder clearRoshanKills() {
          bitField0_ = (bitField0_ & ~0x00001000);
          roshanKills_ = 0F;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 14;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00002000;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00002000);
          score_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
      }

      static {
        defaultInstance = new PlayerScoreAccumulator(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
    }

    public interface PlayerStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      boolean hasWeeks();
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      int getWeeks();

      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      boolean hasStatsPremium();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder();

      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      boolean hasStatsProfessional();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats}
     */
    public static final class PlayerStats extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
        PlayerStatsOrBuilder {
      // Use PlayerStats.newBuilder() to construct.
      private PlayerStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayerStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayerStats defaultInstance;
      public static PlayerStats getDefaultInstance() {
        return defaultInstance;
      }

      public PlayerStats getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerStats(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                weeks_ = input.readUInt32();
                break;
              }
              case 34: {
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = statsPremium_.toBuilder();
                }
                statsPremium_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statsPremium_);
                  statsPremium_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 42: {
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = statsProfessional_.toBuilder();
                }
                statsProfessional_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statsProfessional_);
                  statsProfessional_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayerStats> PARSER =
          new com.google.protobuf.AbstractParser<PlayerStats>() {
        public PlayerStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerStats(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerStats> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int WEEKS_FIELD_NUMBER = 2;
      private int weeks_;
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      public boolean hasWeeks() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      public int getWeeks() {
        return weeks_;
      }

      public static final int STATS_PREMIUM_FIELD_NUMBER = 4;
      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsPremium_;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public boolean hasStatsPremium() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium() {
        return statsPremium_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder() {
        return statsPremium_;
      }

      public static final int STATS_PROFESSIONAL_FIELD_NUMBER = 5;
      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsProfessional_;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public boolean hasStatsProfessional() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional() {
        return statsProfessional_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder() {
        return statsProfessional_;
      }

      private void initFields() {
        accountId_ = 0;
        weeks_ = 0;
        statsPremium_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
        statsProfessional_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, weeks_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(4, statsPremium_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(5, statsProfessional_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, weeks_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, statsPremium_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, statsProfessional_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getStatsPremiumFieldBuilder();
            getStatsProfessionalFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          weeks_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
          } else {
            statsPremiumBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
          } else {
            statsProfessionalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.weeks_ = weeks_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (statsPremiumBuilder_ == null) {
            result.statsPremium_ = statsPremium_;
          } else {
            result.statsPremium_ = statsPremiumBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (statsProfessionalBuilder_ == null) {
            result.statsProfessional_ = statsProfessional_;
          } else {
            result.statsProfessional_ = statsProfessionalBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasWeeks()) {
            setWeeks(other.getWeeks());
          }
          if (other.hasStatsPremium()) {
            mergeStatsPremium(other.getStatsPremium());
          }
          if (other.hasStatsProfessional()) {
            mergeStatsProfessional(other.getStatsProfessional());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int weeks_ ;
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public boolean hasWeeks() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public int getWeeks() {
          return weeks_;
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public Builder setWeeks(int value) {
          bitField0_ |= 0x00000002;
          weeks_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public Builder clearWeeks() {
          bitField0_ = (bitField0_ & ~0x00000002);
          weeks_ = 0;
          onChanged();
          return this;
        }

        private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsPremium_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> statsPremiumBuilder_;
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public boolean hasStatsPremium() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium() {
          if (statsPremiumBuilder_ == null) {
            return statsPremium_;
          } else {
            return statsPremiumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder setStatsPremium(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsPremiumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statsPremium_ = value;
            onChanged();
          } else {
            statsPremiumBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder setStatsPremium(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder builderForValue) {
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = builderForValue.build();
            onChanged();
          } else {
            statsPremiumBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder mergeStatsPremium(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsPremiumBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                statsPremium_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) {
              statsPremium_ =
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder(statsPremium_).mergeFrom(value).buildPartial();
            } else {
              statsPremium_ = value;
            }
            onChanged();
          } else {
            statsPremiumBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder clearStatsPremium() {
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
            onChanged();
          } else {
            statsPremiumBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder getStatsPremiumBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatsPremiumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder() {
          if (statsPremiumBuilder_ != null) {
            return statsPremiumBuilder_.getMessageOrBuilder();
          } else {
            return statsPremium_;
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> 
            getStatsPremiumFieldBuilder() {
          if (statsPremiumBuilder_ == null) {
            statsPremiumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder>(
                    getStatsPremium(),
                    getParentForChildren(),
                    isClean());
            statsPremium_ = null;
          }
          return statsPremiumBuilder_;
        }

        private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsProfessional_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> statsProfessionalBuilder_;
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public boolean hasStatsProfessional() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional() {
          if (statsProfessionalBuilder_ == null) {
            return statsProfessional_;
          } else {
            return statsProfessionalBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder setStatsProfessional(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsProfessionalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statsProfessional_ = value;
            onChanged();
          } else {
            statsProfessionalBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder setStatsProfessional(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder builderForValue) {
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = builderForValue.build();
            onChanged();
          } else {
            statsProfessionalBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder mergeStatsProfessional(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsProfessionalBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                statsProfessional_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) {
              statsProfessional_ =
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder(statsProfessional_).mergeFrom(value).buildPartial();
            } else {
              statsProfessional_ = value;
            }
            onChanged();
          } else {
            statsProfessionalBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder clearStatsProfessional() {
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
            onChanged();
          } else {
            statsProfessionalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder getStatsProfessionalBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getStatsProfessionalFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder() {
          if (statsProfessionalBuilder_ != null) {
            return statsProfessionalBuilder_.getMessageOrBuilder();
          } else {
            return statsProfessional_;
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> 
            getStatsProfessionalFieldBuilder() {
          if (statsProfessionalBuilder_ == null) {
            statsProfessionalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder>(
                    getStatsProfessional(),
                    getParentForChildren(),
                    isClean());
            statsProfessional_ = null;
          }
          return statsProfessionalBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
      }

      static {
        defaultInstance = new PlayerStats(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult() {
      return result_;
    }

    public static final int STATS_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> stats_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> getStatsList() {
      return stats_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
        getStatsOrBuilderList() {
      return stats_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public int getStatsCount() {
      return stats_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index) {
      return stats_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
        int index) {
      return stats_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS;
      stats_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < stats_.size(); i++) {
        output.writeMessage(2, stats_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < stats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, stats_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          statsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (statsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            stats_ = java.util.Collections.unmodifiableList(stats_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (statsBuilder_ == null) {
          if (!other.stats_.isEmpty()) {
            if (stats_.isEmpty()) {
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStatsIsMutable();
              stats_.addAll(other.stats_);
            }
            onChanged();
          }
        } else {
          if (!other.stats_.isEmpty()) {
            if (statsBuilder_.isEmpty()) {
              statsBuilder_.dispose();
              statsBuilder_ = null;
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000002);
              statsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatsFieldBuilder() : null;
            } else {
              statsBuilder_.addAllMessages(other.stats_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> stats_ =
        java.util.Collections.emptyList();
      private void ensureStatsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stats_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats>(stats_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> statsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> getStatsList() {
        if (statsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stats_);
        } else {
          return statsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public int getStatsCount() {
        if (statsBuilder_ == null) {
          return stats_.size();
        } else {
          return statsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);
        } else {
          return statsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder setStats(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.set(index, value);
          onChanged();
        } else {
          statsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder setStats(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.set(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(value);
          onChanged();
        } else {
          statsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(index, value);
          onChanged();
        } else {
          statsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addAllStats(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> values) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stats_);
          onChanged();
        } else {
          statsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          statsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder removeStats(int index) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.remove(index);
          onChanged();
        } else {
          statsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder getStatsBuilder(
          int index) {
        return getStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
          int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);  } else {
          return statsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
           getStatsOrBuilderList() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stats_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder addStatsBuilder() {
        return getStatsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder addStatsBuilder(
          int index) {
        return getStatsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder> 
           getStatsBuilderList() {
        return getStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder>(
                  stats_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerHisoricalStatsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
  }

  public interface CMsgDOTAFantasyMessageAddOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessageAdd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string message = 2;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessageAdd}
   */
  public static final class CMsgDOTAFantasyMessageAdd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessageAdd)
      CMsgDOTAFantasyMessageAddOrBuilder {
    // Use CMsgDOTAFantasyMessageAdd.newBuilder() to construct.
    private CMsgDOTAFantasyMessageAdd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyMessageAdd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyMessageAdd defaultInstance;
    public static CMsgDOTAFantasyMessageAdd getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyMessageAdd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessageAdd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessageAdd> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessageAdd>() {
      public CMsgDOTAFantasyMessageAdd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyMessageAdd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessageAdd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 2;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessageAdd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessageAdd)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAddOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000002;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessageAdd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessageAdd)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyMessageAdd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessageAdd)
  }

  public interface CMsgDOTAFantasyMessagesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    boolean hasStartMessage();
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    int getStartMessage();

    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    boolean hasEndMessage();
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    int getEndMessage();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessagesRequest}
   */
  public static final class CMsgDOTAFantasyMessagesRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesRequest)
      CMsgDOTAFantasyMessagesRequestOrBuilder {
    // Use CMsgDOTAFantasyMessagesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyMessagesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyMessagesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyMessagesRequest defaultInstance;
    public static CMsgDOTAFantasyMessagesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyMessagesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessagesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startMessage_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endMessage_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessagesRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessagesRequest>() {
      public CMsgDOTAFantasyMessagesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyMessagesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessagesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int START_MESSAGE_FIELD_NUMBER = 2;
    private int startMessage_;
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    public boolean hasStartMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    public int getStartMessage() {
      return startMessage_;
    }

    public static final int END_MESSAGE_FIELD_NUMBER = 3;
    private int endMessage_;
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    public boolean hasEndMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    public int getEndMessage() {
      return endMessage_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      startMessage_ = 0;
      endMessage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, endMessage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, endMessage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        startMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        endMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startMessage_ = startMessage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endMessage_ = endMessage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasStartMessage()) {
          setStartMessage(other.getStartMessage());
        }
        if (other.hasEndMessage()) {
          setEndMessage(other.getEndMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int startMessage_ ;
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public boolean hasStartMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public int getStartMessage() {
        return startMessage_;
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public Builder setStartMessage(int value) {
        bitField0_ |= 0x00000002;
        startMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public Builder clearStartMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startMessage_ = 0;
        onChanged();
        return this;
      }

      private int endMessage_ ;
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public boolean hasEndMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public int getEndMessage() {
        return endMessage_;
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public Builder setEndMessage(int value) {
        bitField0_ |= 0x00000004;
        endMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public Builder clearEndMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endMessage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyMessagesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesRequest)
  }

  public interface CMsgDOTAFantasyMessagesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> 
        getMessagesList();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    int getMessagesCount();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
        getMessagesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
        int index);

    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    boolean hasNumTotalMessages();
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    int getNumTotalMessages();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessagesResponse}
   */
  public static final class CMsgDOTAFantasyMessagesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesResponse)
      CMsgDOTAFantasyMessagesResponseOrBuilder {
    // Use CMsgDOTAFantasyMessagesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyMessagesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyMessagesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyMessagesResponse defaultInstance;
    public static CMsgDOTAFantasyMessagesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyMessagesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessagesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                messages_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              messages_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              numTotalMessages_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessagesResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessagesResponse>() {
      public CMsgDOTAFantasyMessagesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyMessagesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessagesResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyMessagesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyMessagesResponse.EResult)
    }

    public interface MessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesResponse.Message)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      boolean hasMessageId();
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      int getMessageId();

      /**
       * <code>optional string message = 2;</code>
       */
      boolean hasMessage();
      /**
       * <code>optional string message = 2;</code>
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 2;</code>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      boolean hasAuthorAccountId();
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      int getAuthorAccountId();

      /**
       * <code>optional uint32 time = 4;</code>
       */
      boolean hasTime();
      /**
       * <code>optional uint32 time = 4;</code>
       */
      int getTime();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesResponse.Message}
     */
    public static final class Message extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesResponse.Message)
        MessageOrBuilder {
      // Use Message.newBuilder() to construct.
      private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Message defaultInstance;
      public static Message getDefaultInstance() {
        return defaultInstance;
      }

      public Message getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Message(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                messageId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                message_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                authorAccountId_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                time_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder.class);
      }

      public static com.google.protobuf.Parser<Message> PARSER =
          new com.google.protobuf.AbstractParser<Message>() {
        public Message parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Message(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Message> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MESSAGE_ID_FIELD_NUMBER = 1;
      private int messageId_;
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      public int getMessageId() {
        return messageId_;
      }

      public static final int MESSAGE_FIELD_NUMBER = 2;
      private java.lang.Object message_;
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTHOR_ACCOUNT_ID_FIELD_NUMBER = 3;
      private int authorAccountId_;
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      public boolean hasAuthorAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      public int getAuthorAccountId() {
        return authorAccountId_;
      }

      public static final int TIME_FIELD_NUMBER = 4;
      private int time_;
      /**
       * <code>optional uint32 time = 4;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time = 4;</code>
       */
      public int getTime() {
        return time_;
      }

      private void initFields() {
        messageId_ = 0;
        message_ = "";
        authorAccountId_ = 0;
        time_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMessageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, authorAccountId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, time_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMessageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, authorAccountId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, time_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyMessagesResponse.Message}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesResponse.Message)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          messageId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          message_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          authorAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          time_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.messageId_ = messageId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.message_ = message_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.authorAccountId_ = authorAccountId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.time_ = time_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance()) return this;
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          if (other.hasMessage()) {
            bitField0_ |= 0x00000002;
            message_ = other.message_;
            onChanged();
          }
          if (other.hasAuthorAccountId()) {
            setAuthorAccountId(other.getAuthorAccountId());
          }
          if (other.hasTime()) {
            setTime(other.getTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int messageId_ ;
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public int getMessageId() {
          return messageId_;
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public Builder setMessageId(int value) {
          bitField0_ |= 0x00000001;
          messageId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          messageId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 2;</code>
         */
        public boolean hasMessage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              message_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder clearMessage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          message_ = value;
          onChanged();
          return this;
        }

        private int authorAccountId_ ;
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public boolean hasAuthorAccountId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public int getAuthorAccountId() {
          return authorAccountId_;
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public Builder setAuthorAccountId(int value) {
          bitField0_ |= 0x00000004;
          authorAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public Builder clearAuthorAccountId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          authorAccountId_ = 0;
          onChanged();
          return this;
        }

        private int time_ ;
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public int getTime() {
          return time_;
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public Builder setTime(int value) {
          bitField0_ |= 0x00000008;
          time_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          time_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesResponse.Message)
      }

      static {
        defaultInstance = new Message(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesResponse.Message)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult() {
      return result_;
    }

    public static final int MESSAGES_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> messages_;
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> getMessagesList() {
      return messages_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
        getMessagesOrBuilderList() {
      return messages_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public int getMessagesCount() {
      return messages_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index) {
      return messages_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
        int index) {
      return messages_.get(index);
    }

    public static final int NUM_TOTAL_MESSAGES_FIELD_NUMBER = 3;
    private int numTotalMessages_;
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    public boolean hasNumTotalMessages() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    public int getNumTotalMessages() {
      return numTotalMessages_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS;
      messages_ = java.util.Collections.emptyList();
      numTotalMessages_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < messages_.size(); i++) {
        output.writeMessage(2, messages_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, numTotalMessages_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < messages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, messages_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numTotalMessages_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessagesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messagesBuilder_.clear();
        }
        numTotalMessages_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (messagesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            messages_ = java.util.Collections.unmodifiableList(messages_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.messages_ = messages_;
        } else {
          result.messages_ = messagesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.numTotalMessages_ = numTotalMessages_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (messagesBuilder_ == null) {
          if (!other.messages_.isEmpty()) {
            if (messages_.isEmpty()) {
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessagesIsMutable();
              messages_.addAll(other.messages_);
            }
            onChanged();
          }
        } else {
          if (!other.messages_.isEmpty()) {
            if (messagesBuilder_.isEmpty()) {
              messagesBuilder_.dispose();
              messagesBuilder_ = null;
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessagesFieldBuilder() : null;
            } else {
              messagesBuilder_.addAllMessages(other.messages_);
            }
          }
        }
        if (other.hasNumTotalMessages()) {
          setNumTotalMessages(other.getNumTotalMessages());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> messages_ =
        java.util.Collections.emptyList();
      private void ensureMessagesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          messages_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message>(messages_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> messagesBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> getMessagesList() {
        if (messagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messages_);
        } else {
          return messagesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public int getMessagesCount() {
        if (messagesBuilder_ == null) {
          return messages_.size();
        } else {
          return messagesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);
        } else {
          return messagesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder setMessages(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.set(index, value);
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder setMessages(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.set(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(index, value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addAllMessages(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message> values) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, messages_);
          onChanged();
        } else {
          messagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder clearMessages() {
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder removeMessages(int index) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.remove(index);
          onChanged();
        } else {
          messagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder getMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
          int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);  } else {
          return messagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
           getMessagesOrBuilderList() {
        if (messagesBuilder_ != null) {
          return messagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messages_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder addMessagesBuilder() {
        return getMessagesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder addMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder> 
           getMessagesBuilderList() {
        return getMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
          getMessagesFieldBuilder() {
        if (messagesBuilder_ == null) {
          messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder>(
                  messages_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          messages_ = null;
        }
        return messagesBuilder_;
      }

      private int numTotalMessages_ ;
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public boolean hasNumTotalMessages() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public int getNumTotalMessages() {
        return numTotalMessages_;
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public Builder setNumTotalMessages(int value) {
        bitField0_ |= 0x00000004;
        numTotalMessages_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public Builder clearNumTotalMessages() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numTotalMessages_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyMessagesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesResponse)
  }

  public interface CMsgDOTAFantasyRemoveOwnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyRemoveOwner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    int getTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyRemoveOwner}
   */
  public static final class CMsgDOTAFantasyRemoveOwner extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyRemoveOwner)
      CMsgDOTAFantasyRemoveOwnerOrBuilder {
    // Use CMsgDOTAFantasyRemoveOwner.newBuilder() to construct.
    private CMsgDOTAFantasyRemoveOwner(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyRemoveOwner(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyRemoveOwner defaultInstance;
    public static CMsgDOTAFantasyRemoveOwner getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyRemoveOwner getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyRemoveOwner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              teamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwner> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyRemoveOwner>() {
      public CMsgDOTAFantasyRemoveOwner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyRemoveOwner(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwner> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 3;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      teamIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, teamIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, teamIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyRemoveOwner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyRemoveOwner)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamIndex_ = teamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwner) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyRemoveOwner)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyRemoveOwner(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyRemoveOwner)
  }

  public interface CMsgDOTAFantasyRemoveOwnerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyRemoveOwnerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyRemoveOwnerResponse}
   */
  public static final class CMsgDOTAFantasyRemoveOwnerResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyRemoveOwnerResponse)
      CMsgDOTAFantasyRemoveOwnerResponseOrBuilder {
    // Use CMsgDOTAFantasyRemoveOwnerResponse.newBuilder() to construct.
    private CMsgDOTAFantasyRemoveOwnerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyRemoveOwnerResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyRemoveOwnerResponse defaultInstance;
    public static CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyRemoveOwnerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwnerResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyRemoveOwnerResponse>() {
      public CMsgDOTAFantasyRemoveOwnerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyRemoveOwnerResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwnerResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyRemoveOwnerResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2, 2),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 3;</code>
       */
      ERROR_LEAGUE_LOCKED(3, 3),
      /**
       * <code>ERROR_NOT_A_MEMBER = 4;</code>
       */
      ERROR_NOT_A_MEMBER(4, 4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 3;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 3;
      /**
       * <code>ERROR_NOT_A_MEMBER = 4;</code>
       */
      public static final int ERROR_NOT_A_MEMBER_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_LEAGUE_LOCKED;
          case 4: return ERROR_NOT_A_MEMBER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyRemoveOwnerResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyRemoveOwnerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyRemoveOwnerResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyRemoveOwnerResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyRemoveOwnerResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyRemoveOwnerResponse)
  }

  public interface CMsgDOTAFantasyScheduledMatchesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesRequest}
   */
  public static final class CMsgDOTAFantasyScheduledMatchesRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesRequest)
      CMsgDOTAFantasyScheduledMatchesRequestOrBuilder {
    // Use CMsgDOTAFantasyScheduledMatchesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyScheduledMatchesRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyScheduledMatchesRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyScheduledMatchesRequest defaultInstance;
    public static CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyScheduledMatchesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyScheduledMatchesRequest>() {
      public CMsgDOTAFantasyScheduledMatchesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyScheduledMatchesRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyScheduledMatchesRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesRequest)
  }

  public interface CMsgDOTAFantasyScheduledMatchesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> 
        getScheduledMatchDaysList();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    int getScheduledMatchDaysCount();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
        getScheduledMatchDaysOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse}
   */
  public static final class CMsgDOTAFantasyScheduledMatchesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesResponse)
      CMsgDOTAFantasyScheduledMatchesResponseOrBuilder {
    // Use CMsgDOTAFantasyScheduledMatchesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyScheduledMatchesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyScheduledMatchesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyScheduledMatchesResponse defaultInstance;
    public static CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyScheduledMatchesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                scheduledMatchDays_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays>();
                mutable_bitField0_ |= 0x00000002;
              }
              scheduledMatchDays_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          scheduledMatchDays_ = java.util.Collections.unmodifiableList(scheduledMatchDays_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyScheduledMatchesResponse>() {
      public CMsgDOTAFantasyScheduledMatchesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyScheduledMatchesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyScheduledMatchesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyScheduledMatchesResponse.EResult)
    }

    public interface ScheduledMatchDaysOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      int getTimestamp();

      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      java.util.List<java.lang.Integer> getTeamIdsList();
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      int getTeamIdsCount();
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      int getTeamIds(int index);

      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      java.util.List<java.lang.Integer> getLeagueIdsList();
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      int getLeagueIdsCount();
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      int getLeagueIds(int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays}
     */
    public static final class ScheduledMatchDays extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
        ScheduledMatchDaysOrBuilder {
      // Use ScheduledMatchDays.newBuilder() to construct.
      private ScheduledMatchDays(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ScheduledMatchDays(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ScheduledMatchDays defaultInstance;
      public static ScheduledMatchDays getDefaultInstance() {
        return defaultInstance;
      }

      public ScheduledMatchDays getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ScheduledMatchDays(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  teamIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                teamIds_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  teamIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  teamIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  leagueIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                leagueIds_.add(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  leagueIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  leagueIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = java.util.Collections.unmodifiableList(teamIds_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = java.util.Collections.unmodifiableList(leagueIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder.class);
      }

      public static com.google.protobuf.Parser<ScheduledMatchDays> PARSER =
          new com.google.protobuf.AbstractParser<ScheduledMatchDays>() {
        public ScheduledMatchDays parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ScheduledMatchDays(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ScheduledMatchDays> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      public static final int TEAM_IDS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> teamIds_;
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getTeamIdsList() {
        return teamIds_;
      }
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public int getTeamIdsCount() {
        return teamIds_.size();
      }
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public int getTeamIds(int index) {
        return teamIds_.get(index);
      }

      public static final int LEAGUE_IDS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> leagueIds_;
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getLeagueIdsList() {
        return leagueIds_;
      }
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public int getLeagueIdsCount() {
        return leagueIds_.size();
      }
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public int getLeagueIds(int index) {
        return leagueIds_.get(index);
      }

      private void initFields() {
        timestamp_ = 0;
        teamIds_ = java.util.Collections.emptyList();
        leagueIds_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, timestamp_);
        }
        for (int i = 0; i < teamIds_.size(); i++) {
          output.writeUInt32(2, teamIds_.get(i));
        }
        for (int i = 0; i < leagueIds_.size(); i++) {
          output.writeUInt32(3, leagueIds_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, timestamp_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < teamIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(teamIds_.get(i));
          }
          size += dataSize;
          size += 1 * getTeamIdsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < leagueIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(leagueIds_.get(i));
          }
          size += dataSize;
          size += 1 * getLeagueIdsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          leagueIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = java.util.Collections.unmodifiableList(teamIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teamIds_ = teamIds_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = java.util.Collections.unmodifiableList(leagueIds_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.leagueIds_ = leagueIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (!other.teamIds_.isEmpty()) {
            if (teamIds_.isEmpty()) {
              teamIds_ = other.teamIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeamIdsIsMutable();
              teamIds_.addAll(other.teamIds_);
            }
            onChanged();
          }
          if (!other.leagueIds_.isEmpty()) {
            if (leagueIds_.isEmpty()) {
              leagueIds_ = other.leagueIds_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLeagueIdsIsMutable();
              leagueIds_.addAll(other.leagueIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> teamIds_ = java.util.Collections.emptyList();
        private void ensureTeamIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = new java.util.ArrayList<java.lang.Integer>(teamIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getTeamIdsList() {
          return java.util.Collections.unmodifiableList(teamIds_);
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public int getTeamIdsCount() {
          return teamIds_.size();
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public int getTeamIds(int index) {
          return teamIds_.get(index);
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder setTeamIds(
            int index, int value) {
          ensureTeamIdsIsMutable();
          teamIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder addTeamIds(int value) {
          ensureTeamIdsIsMutable();
          teamIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder addAllTeamIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureTeamIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder clearTeamIds() {
          teamIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> leagueIds_ = java.util.Collections.emptyList();
        private void ensureLeagueIdsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = new java.util.ArrayList<java.lang.Integer>(leagueIds_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public java.util.List<java.lang.Integer>
            getLeagueIdsList() {
          return java.util.Collections.unmodifiableList(leagueIds_);
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public int getLeagueIdsCount() {
          return leagueIds_.size();
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public int getLeagueIds(int index) {
          return leagueIds_.get(index);
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder setLeagueIds(
            int index, int value) {
          ensureLeagueIdsIsMutable();
          leagueIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder addLeagueIds(int value) {
          ensureLeagueIdsIsMutable();
          leagueIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder addAllLeagueIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLeagueIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leagueIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder clearLeagueIds() {
          leagueIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
      }

      static {
        defaultInstance = new ScheduledMatchDays(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult() {
      return result_;
    }

    public static final int SCHEDULED_MATCH_DAYS_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> scheduledMatchDays_;
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> getScheduledMatchDaysList() {
      return scheduledMatchDays_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
        getScheduledMatchDaysOrBuilderList() {
      return scheduledMatchDays_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public int getScheduledMatchDaysCount() {
      return scheduledMatchDays_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index) {
      return scheduledMatchDays_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
        int index) {
      return scheduledMatchDays_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS;
      scheduledMatchDays_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < scheduledMatchDays_.size(); i++) {
        output.writeMessage(2, scheduledMatchDays_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < scheduledMatchDays_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, scheduledMatchDays_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScheduledMatchDaysFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDays_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scheduledMatchDaysBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (scheduledMatchDaysBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            scheduledMatchDays_ = java.util.Collections.unmodifiableList(scheduledMatchDays_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scheduledMatchDays_ = scheduledMatchDays_;
        } else {
          result.scheduledMatchDays_ = scheduledMatchDaysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (scheduledMatchDaysBuilder_ == null) {
          if (!other.scheduledMatchDays_.isEmpty()) {
            if (scheduledMatchDays_.isEmpty()) {
              scheduledMatchDays_ = other.scheduledMatchDays_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScheduledMatchDaysIsMutable();
              scheduledMatchDays_.addAll(other.scheduledMatchDays_);
            }
            onChanged();
          }
        } else {
          if (!other.scheduledMatchDays_.isEmpty()) {
            if (scheduledMatchDaysBuilder_.isEmpty()) {
              scheduledMatchDaysBuilder_.dispose();
              scheduledMatchDaysBuilder_ = null;
              scheduledMatchDays_ = other.scheduledMatchDays_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scheduledMatchDaysBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScheduledMatchDaysFieldBuilder() : null;
            } else {
              scheduledMatchDaysBuilder_.addAllMessages(other.scheduledMatchDays_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> scheduledMatchDays_ =
        java.util.Collections.emptyList();
      private void ensureScheduledMatchDaysIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          scheduledMatchDays_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays>(scheduledMatchDays_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> scheduledMatchDaysBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> getScheduledMatchDaysList() {
        if (scheduledMatchDaysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scheduledMatchDays_);
        } else {
          return scheduledMatchDaysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public int getScheduledMatchDaysCount() {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.size();
        } else {
          return scheduledMatchDaysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.get(index);
        } else {
          return scheduledMatchDaysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder setScheduledMatchDays(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.set(index, value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder setScheduledMatchDays(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.set(index, builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(index, value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(index, builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addAllScheduledMatchDays(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> values) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scheduledMatchDays_);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder clearScheduledMatchDays() {
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDays_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder removeScheduledMatchDays(int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.remove(index);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder getScheduledMatchDaysBuilder(
          int index) {
        return getScheduledMatchDaysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
          int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.get(index);  } else {
          return scheduledMatchDaysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
           getScheduledMatchDaysOrBuilderList() {
        if (scheduledMatchDaysBuilder_ != null) {
          return scheduledMatchDaysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scheduledMatchDays_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder addScheduledMatchDaysBuilder() {
        return getScheduledMatchDaysFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder addScheduledMatchDaysBuilder(
          int index) {
        return getScheduledMatchDaysFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder> 
           getScheduledMatchDaysBuilderList() {
        return getScheduledMatchDaysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
          getScheduledMatchDaysFieldBuilder() {
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDaysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder>(
                  scheduledMatchDays_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          scheduledMatchDays_ = null;
        }
        return scheduledMatchDaysBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyScheduledMatchesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesResponse)
  }

  public interface CMsgDOTAFantasyLeaveLeagueRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeaveLeagueRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    int getFantasyTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueRequest}
   */
  public static final class CMsgDOTAFantasyLeaveLeagueRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeaveLeagueRequest)
      CMsgDOTAFantasyLeaveLeagueRequestOrBuilder {
    // Use CMsgDOTAFantasyLeaveLeagueRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeaveLeagueRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeaveLeagueRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeaveLeagueRequest defaultInstance;
    public static CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeaveLeagueRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeaveLeagueRequest>() {
      public CMsgDOTAFantasyLeaveLeagueRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeaveLeagueRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 2;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      fantasyTeamIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyTeamIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyTeamIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeaveLeagueRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeaveLeagueRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeaveLeagueRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeaveLeagueRequest)
  }

  public interface CMsgDOTAFantasyLeaveLeagueResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeaveLeagueResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueResponse}
   */
  public static final class CMsgDOTAFantasyLeaveLeagueResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeaveLeagueResponse)
      CMsgDOTAFantasyLeaveLeagueResponseOrBuilder {
    // Use CMsgDOTAFantasyLeaveLeagueResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeaveLeagueResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyLeaveLeagueResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyLeaveLeagueResponse defaultInstance;
    public static CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeaveLeagueResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeaveLeagueResponse>() {
      public CMsgDOTAFantasyLeaveLeagueResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyLeaveLeagueResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeaveLeagueResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      ERROR_NOT_MEMBER(2, 2),
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 3;</code>
       */
      ERROR_LEAGUE_NOT_FOUND(3, 3),
      /**
       * <code>ERROR_DRAFT_ACTIVE = 4;</code>
       */
      ERROR_DRAFT_ACTIVE(4, 4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      public static final int ERROR_NOT_MEMBER_VALUE = 2;
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 3;</code>
       */
      public static final int ERROR_LEAGUE_NOT_FOUND_VALUE = 3;
      /**
       * <code>ERROR_DRAFT_ACTIVE = 4;</code>
       */
      public static final int ERROR_DRAFT_ACTIVE_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NOT_MEMBER;
          case 3: return ERROR_LEAGUE_NOT_FOUND;
          case 4: return ERROR_DRAFT_ACTIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeaveLeagueResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeaveLeagueResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeaveLeagueResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyLeaveLeagueResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeaveLeagueResponse)
  }

  public interface CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    boolean hasStartTime();
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    int getStartTime();

    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    boolean hasEndTime();
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    int getEndTime();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsRequest}
   */
  public static final class CMsgDOTAFantasyPlayerScoreDetailsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsRequest)
      CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder {
    // Use CMsgDOTAFantasyPlayerScoreDetailsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreDetailsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerScoreDetailsRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerScoreDetailsRequest defaultInstance;
    public static CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreDetailsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreDetailsRequest>() {
      public CMsgDOTAFantasyPlayerScoreDetailsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerScoreDetailsRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int START_TIME_FIELD_NUMBER = 3;
    private int startTime_;
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 4;
    private int endTime_;
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    public int getEndTime() {
      return endTime_;
    }

    private void initFields() {
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      startTime_ = 0;
      endTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, endTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, endTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000002;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000004;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int endTime_ ;
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000008;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsRequest)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerScoreDetailsRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsRequest)
  }

  public interface CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> 
        getDataList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse}
   */
  public static final class CMsgDOTAFantasyPlayerScoreDetailsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse)
      CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder {
    // Use CMsgDOTAFantasyPlayerScoreDetailsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreDetailsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAFantasyPlayerScoreDetailsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAFantasyPlayerScoreDetailsResponse defaultInstance;
    public static CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreDetailsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                data_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData>();
                mutable_bitField0_ |= 0x00000002;
              }
              data_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreDetailsResponse>() {
      public CMsgDOTAFantasyPlayerScoreDetailsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAFantasyPlayerScoreDetailsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0, 0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1, 1),
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      ERROR_NOT_MEMBER(2, 2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      public static final int ERROR_NOT_MEMBER_VALUE = 2;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NOT_MEMBER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult)
    }

    public interface PlayerMatchDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      long getMatchId();

      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      boolean hasSeriesId();
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      int getSeriesId();

      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      boolean hasSeriesNum();
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      int getSeriesNum();

      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      boolean hasSeriesType();
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      int getSeriesType();

      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      boolean hasLeagueTier();
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      int getLeagueTier();

      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      int getLeagueId();

      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      boolean hasOpposingTeamId();
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      int getOpposingTeamId();

      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      boolean hasOpposingTeamLogo();
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      long getOpposingTeamLogo();

      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      boolean hasOpposingTeamName();
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      java.lang.String getOpposingTeamName();
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      com.google.protobuf.ByteString
          getOpposingTeamNameBytes();

      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      boolean hasStats();
      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getStats();
      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getStatsOrBuilder();

      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      boolean hasOwnedBy();
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      int getOwnedBy();

      /**
       * <code>optional bool benched = 12;</code>
       */
      boolean hasBenched();
      /**
       * <code>optional bool benched = 12;</code>
       */
      boolean getBenched();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData}
     */
    public static final class PlayerMatchData extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
        PlayerMatchDataOrBuilder {
      // Use PlayerMatchData.newBuilder() to construct.
      private PlayerMatchData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayerMatchData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayerMatchData defaultInstance;
      public static PlayerMatchData getDefaultInstance() {
        return defaultInstance;
      }

      public PlayerMatchData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerMatchData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matchId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                seriesId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                seriesNum_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                seriesType_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                leagueTier_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                leagueId_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                opposingTeamId_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                opposingTeamLogo_ = input.readUInt64();
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                opposingTeamName_ = bs;
                break;
              }
              case 82: {
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder subBuilder = null;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                  subBuilder = stats_.toBuilder();
                }
                stats_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(stats_);
                  stats_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000200;
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                ownedBy_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                benched_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayerMatchData> PARSER =
          new com.google.protobuf.AbstractParser<PlayerMatchData>() {
        public PlayerMatchData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerMatchData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerMatchData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MATCH_ID_FIELD_NUMBER = 1;
      private long matchId_;
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public long getMatchId() {
        return matchId_;
      }

      public static final int SERIES_ID_FIELD_NUMBER = 2;
      private int seriesId_;
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }

      public static final int SERIES_NUM_FIELD_NUMBER = 3;
      private int seriesNum_;
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      public boolean hasSeriesNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      public int getSeriesNum() {
        return seriesNum_;
      }

      public static final int SERIES_TYPE_FIELD_NUMBER = 4;
      private int seriesType_;
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      public boolean hasSeriesType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      public int getSeriesType() {
        return seriesType_;
      }

      public static final int LEAGUE_TIER_FIELD_NUMBER = 5;
      private int leagueTier_;
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      public boolean hasLeagueTier() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      public int getLeagueTier() {
        return leagueTier_;
      }

      public static final int LEAGUE_ID_FIELD_NUMBER = 6;
      private int leagueId_;
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int OPPOSING_TEAM_ID_FIELD_NUMBER = 7;
      private int opposingTeamId_;
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      public boolean hasOpposingTeamId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      public int getOpposingTeamId() {
        return opposingTeamId_;
      }

      public static final int OPPOSING_TEAM_LOGO_FIELD_NUMBER = 8;
      private long opposingTeamLogo_;
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      public boolean hasOpposingTeamLogo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      public long getOpposingTeamLogo() {
        return opposingTeamLogo_;
      }

      public static final int OPPOSING_TEAM_NAME_FIELD_NUMBER = 9;
      private java.lang.Object opposingTeamName_;
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public boolean hasOpposingTeamName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public java.lang.String getOpposingTeamName() {
        java.lang.Object ref = opposingTeamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            opposingTeamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public com.google.protobuf.ByteString
          getOpposingTeamNameBytes() {
        java.lang.Object ref = opposingTeamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opposingTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STATS_FIELD_NUMBER = 10;
      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring stats_;
      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      public boolean hasStats() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getStats() {
        return stats_;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getStatsOrBuilder() {
        return stats_;
      }

      public static final int OWNED_BY_FIELD_NUMBER = 11;
      private int ownedBy_;
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      public boolean hasOwnedBy() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      public int getOwnedBy() {
        return ownedBy_;
      }

      public static final int BENCHED_FIELD_NUMBER = 12;
      private boolean benched_;
      /**
       * <code>optional bool benched = 12;</code>
       */
      public boolean hasBenched() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool benched = 12;</code>
       */
      public boolean getBenched() {
        return benched_;
      }

      private void initFields() {
        matchId_ = 0L;
        seriesId_ = 0;
        seriesNum_ = 0;
        seriesType_ = 0;
        leagueTier_ = 0;
        leagueId_ = 0;
        opposingTeamId_ = 0;
        opposingTeamLogo_ = 0L;
        opposingTeamName_ = "";
        stats_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
        ownedBy_ = 0;
        benched_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, seriesId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, seriesNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, seriesType_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, leagueTier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, leagueId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, opposingTeamId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt64(8, opposingTeamLogo_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getOpposingTeamNameBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeMessage(10, stats_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(11, ownedBy_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBool(12, benched_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, seriesId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, seriesNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, seriesType_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, leagueTier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, leagueId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, opposingTeamId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, opposingTeamLogo_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getOpposingTeamNameBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, stats_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, ownedBy_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, benched_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getStatsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          matchId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          seriesId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          seriesNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          seriesType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          leagueTier_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          leagueId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          opposingTeamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          opposingTeamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000080);
          opposingTeamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          if (statsBuilder_ == null) {
            stats_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
          } else {
            statsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          ownedBy_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          benched_ = false;
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.seriesId_ = seriesId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.seriesNum_ = seriesNum_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.seriesType_ = seriesType_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.leagueTier_ = leagueTier_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.leagueId_ = leagueId_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.opposingTeamId_ = opposingTeamId_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.opposingTeamLogo_ = opposingTeamLogo_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.opposingTeamName_ = opposingTeamName_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          if (statsBuilder_ == null) {
            result.stats_ = stats_;
          } else {
            result.stats_ = statsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.ownedBy_ = ownedBy_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.benched_ = benched_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance()) return this;
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasSeriesId()) {
            setSeriesId(other.getSeriesId());
          }
          if (other.hasSeriesNum()) {
            setSeriesNum(other.getSeriesNum());
          }
          if (other.hasSeriesType()) {
            setSeriesType(other.getSeriesType());
          }
          if (other.hasLeagueTier()) {
            setLeagueTier(other.getLeagueTier());
          }
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasOpposingTeamId()) {
            setOpposingTeamId(other.getOpposingTeamId());
          }
          if (other.hasOpposingTeamLogo()) {
            setOpposingTeamLogo(other.getOpposingTeamLogo());
          }
          if (other.hasOpposingTeamName()) {
            bitField0_ |= 0x00000100;
            opposingTeamName_ = other.opposingTeamName_;
            onChanged();
          }
          if (other.hasStats()) {
            mergeStats(other.getStats());
          }
          if (other.hasOwnedBy()) {
            setOwnedBy(other.getOwnedBy());
          }
          if (other.hasBenched()) {
            setBenched(other.getBenched());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder setMatchId(long value) {
          bitField0_ |= 0x00000001;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private int seriesId_ ;
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public boolean hasSeriesId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public int getSeriesId() {
          return seriesId_;
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public Builder setSeriesId(int value) {
          bitField0_ |= 0x00000002;
          seriesId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public Builder clearSeriesId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          seriesId_ = 0;
          onChanged();
          return this;
        }

        private int seriesNum_ ;
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public boolean hasSeriesNum() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public int getSeriesNum() {
          return seriesNum_;
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public Builder setSeriesNum(int value) {
          bitField0_ |= 0x00000004;
          seriesNum_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public Builder clearSeriesNum() {
          bitField0_ = (bitField0_ & ~0x00000004);
          seriesNum_ = 0;
          onChanged();
          return this;
        }

        private int seriesType_ ;
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public boolean hasSeriesType() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public int getSeriesType() {
          return seriesType_;
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public Builder setSeriesType(int value) {
          bitField0_ |= 0x00000008;
          seriesType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public Builder clearSeriesType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          seriesType_ = 0;
          onChanged();
          return this;
        }

        private int leagueTier_ ;
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public boolean hasLeagueTier() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public int getLeagueTier() {
          return leagueTier_;
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public Builder setLeagueTier(int value) {
          bitField0_ |= 0x00000010;
          leagueTier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public Builder clearLeagueTier() {
          bitField0_ = (bitField0_ & ~0x00000010);
          leagueTier_ = 0;
          onChanged();
          return this;
        }

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public Builder setLeagueId(int value) {
          bitField0_ |= 0x00000020;
          leagueId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private int opposingTeamId_ ;
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public boolean hasOpposingTeamId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public int getOpposingTeamId() {
          return opposingTeamId_;
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public Builder setOpposingTeamId(int value) {
          bitField0_ |= 0x00000040;
          opposingTeamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public Builder clearOpposingTeamId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          opposingTeamId_ = 0;
          onChanged();
          return this;
        }

        private long opposingTeamLogo_ ;
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public boolean hasOpposingTeamLogo() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public long getOpposingTeamLogo() {
          return opposingTeamLogo_;
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public Builder setOpposingTeamLogo(long value) {
          bitField0_ |= 0x00000080;
          opposingTeamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public Builder clearOpposingTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000080);
          opposingTeamLogo_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object opposingTeamName_ = "";
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public boolean hasOpposingTeamName() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public java.lang.String getOpposingTeamName() {
          java.lang.Object ref = opposingTeamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              opposingTeamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public com.google.protobuf.ByteString
            getOpposingTeamNameBytes() {
          java.lang.Object ref = opposingTeamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            opposingTeamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder setOpposingTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          opposingTeamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder clearOpposingTeamName() {
          bitField0_ = (bitField0_ & ~0x00000100);
          opposingTeamName_ = getDefaultInstance().getOpposingTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder setOpposingTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          opposingTeamName_ = value;
          onChanged();
          return this;
        }

        private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring stats_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder> statsBuilder_;
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public boolean hasStats() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring getStats() {
          if (statsBuilder_ == null) {
            return stats_;
          } else {
            return statsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public Builder setStats(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring value) {
          if (statsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stats_ = value;
            onChanged();
          } else {
            statsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public Builder setStats(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder builderForValue) {
          if (statsBuilder_ == null) {
            stats_ = builderForValue.build();
            onChanged();
          } else {
            statsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public Builder mergeStats(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring value) {
          if (statsBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200) &&
                stats_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance()) {
              stats_ =
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.newBuilder(stats_).mergeFrom(value).buildPartial();
            } else {
              stats_ = value;
            }
            onChanged();
          } else {
            statsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public Builder clearStats() {
          if (statsBuilder_ == null) {
            stats_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
            onChanged();
          } else {
            statsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder getStatsBuilder() {
          bitField0_ |= 0x00000200;
          onChanged();
          return getStatsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder getStatsOrBuilder() {
          if (statsBuilder_ != null) {
            return statsBuilder_.getMessageOrBuilder();
          } else {
            return stats_;
          }
        }
        /**
         * <code>optional .CMsgFantasyLeagueScoring stats = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder> 
            getStatsFieldBuilder() {
          if (statsBuilder_ == null) {
            statsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoring.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgFantasyLeagueScoringOrBuilder>(
                    getStats(),
                    getParentForChildren(),
                    isClean());
            stats_ = null;
          }
          return statsBuilder_;
        }

        private int ownedBy_ ;
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public boolean hasOwnedBy() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public int getOwnedBy() {
          return ownedBy_;
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public Builder setOwnedBy(int value) {
          bitField0_ |= 0x00000400;
          ownedBy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public Builder clearOwnedBy() {
          bitField0_ = (bitField0_ & ~0x00000400);
          ownedBy_ = 0;
          onChanged();
          return this;
        }

        private boolean benched_ ;
        /**
         * <code>optional bool benched = 12;</code>
         */
        public boolean hasBenched() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public boolean getBenched() {
          return benched_;
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public Builder setBenched(boolean value) {
          bitField0_ |= 0x00000800;
          benched_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public Builder clearBenched() {
          bitField0_ = (bitField0_ & ~0x00000800);
          benched_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
      }

      static {
        defaultInstance = new PlayerMatchData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult() {
      return result_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> data_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private void initFields() {
      result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS;
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(2, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData>(data_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder setData(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder setData(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAFantasyPlayerScoreDetailsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse)
  }

  public interface CMsgDOTATournamentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournament)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> 
        getTeamsList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team getTeams(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> 
        getGamesList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game getGames(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder> 
        getGamesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index);

    /**
     * <code>optional uint64 gid = 3;</code>
     */
    boolean hasGid();
    /**
     * <code>optional uint64 gid = 3;</code>
     */
    long getGid();

    /**
     * <code>optional uint32 tournament_id = 4;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 4;</code>
     */
    int getTournamentId();

    /**
     * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
     */
    boolean hasTournamentType();
    /**
     * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
     */
    telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType getTournamentType();

    /**
     * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
     */
    boolean hasTournamentTemplate();
    /**
     * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
     */
    telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate getTournamentTemplate();

    /**
     * <code>optional uint32 league_id = 7;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 7;</code>
     */
    int getLeagueId();

    /**
     * <code>optional uint32 start_time = 8;</code>
     */
    boolean hasStartTime();
    /**
     * <code>optional uint32 start_time = 8;</code>
     */
    int getStartTime();

    /**
     * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
     */
    boolean hasState();
    /**
     * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState getState();

    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> 
        getNodesList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node getNodes(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTATournament}
   */
  public static final class CMsgDOTATournament extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournament)
      CMsgDOTATournamentOrBuilder {
    // Use CMsgDOTATournament.newBuilder() to construct.
    private CMsgDOTATournament(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTATournament(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTATournament defaultInstance;
    public static CMsgDOTATournament getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTATournament getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournament(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teams_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team>();
                mutable_bitField0_ |= 0x00000001;
              }
              teams_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                games_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game>();
                mutable_bitField0_ |= 0x00000002;
              }
              games_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              gid_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType value = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                tournamentType_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate value = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                tournamentTemplate_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              leagueId_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              startTime_ = input.readUInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                state_ = value;
              }
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                nodes_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node>();
                mutable_bitField0_ |= 0x00000200;
              }
              nodes_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = java.util.Collections.unmodifiableList(teams_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          games_ = java.util.Collections.unmodifiableList(games_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTATournament> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTATournament>() {
      public CMsgDOTATournament parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTATournament(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournament> getParserForType() {
      return PARSER;
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 2;</code>
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 2;</code>
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      boolean hasTeamAbbrev();
      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      java.lang.String getTeamAbbrev();
      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      com.google.protobuf.ByteString
          getTeamAbbrevBytes();

      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPlayersList();
      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      int getPlayersCount();
      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      int getPlayers(int index);

      /**
       * <code>optional uint32 seed = 5;</code>
       */
      boolean hasSeed();
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      int getSeed();

      /**
       * <code>optional uint64 team_logo = 6;</code>
       */
      boolean hasTeamLogo();
      /**
       * <code>optional uint64 team_logo = 6;</code>
       */
      long getTeamLogo();

      /**
       * <code>optional string country_code = 7;</code>
       */
      boolean hasCountryCode();
      /**
       * <code>optional string country_code = 7;</code>
       */
      java.lang.String getCountryCode();
      /**
       * <code>optional string country_code = 7;</code>
       */
      com.google.protobuf.ByteString
          getCountryCodeBytes();

      /**
       * <code>optional uint32 node_or_state = 8;</code>
       */
      boolean hasNodeOrState();
      /**
       * <code>optional uint32 node_or_state = 8;</code>
       */
      int getNodeOrState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Team)
        TeamOrBuilder {
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Team(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Team defaultInstance;
      public static Team getDefaultInstance() {
        return defaultInstance;
      }

      public Team getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                teamId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                teamName_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                teamAbbrev_ = bs;
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  players_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                players_.add(input.readUInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  players_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  players_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 40: {
                bitField0_ |= 0x00000008;
                seed_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                teamLogo_ = input.readUInt64();
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                countryCode_ = bs;
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                nodeOrState_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder.class);
      }

      public static com.google.protobuf.Parser<Team> PARSER =
          new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Team(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TEAM_ID_FIELD_NUMBER = 1;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 2;
      private java.lang.Object teamName_;
      /**
       * <code>optional string team_name = 2;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string team_name = 2;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_ABBREV_FIELD_NUMBER = 3;
      private java.lang.Object teamAbbrev_;
      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      public boolean hasTeamAbbrev() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      public java.lang.String getTeamAbbrev() {
        java.lang.Object ref = teamAbbrev_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamAbbrev_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_abbrev = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamAbbrevBytes() {
        java.lang.Object ref = teamAbbrev_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamAbbrev_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PLAYERS_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Integer> players_;
      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated uint32 players = 4 [packed = true];</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      private int playersMemoizedSerializedSize = -1;

      public static final int SEED_FIELD_NUMBER = 5;
      private int seed_;
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public int getSeed() {
        return seed_;
      }

      public static final int TEAM_LOGO_FIELD_NUMBER = 6;
      private long teamLogo_;
      /**
       * <code>optional uint64 team_logo = 6;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 team_logo = 6;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }

      public static final int COUNTRY_CODE_FIELD_NUMBER = 7;
      private java.lang.Object countryCode_;
      /**
       * <code>optional string country_code = 7;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string country_code = 7;</code>
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            countryCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string country_code = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NODE_OR_STATE_FIELD_NUMBER = 8;
      private int nodeOrState_;
      /**
       * <code>optional uint32 node_or_state = 8;</code>
       */
      public boolean hasNodeOrState() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 node_or_state = 8;</code>
       */
      public int getNodeOrState() {
        return nodeOrState_;
      }

      private void initFields() {
        teamId_ = 0;
        teamName_ = "";
        teamAbbrev_ = "";
        players_ = java.util.Collections.emptyList();
        seed_ = 0;
        teamLogo_ = 0L;
        countryCode_ = "";
        nodeOrState_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTeamNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getTeamAbbrevBytes());
        }
        if (getPlayersList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(playersMemoizedSerializedSize);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeUInt32NoTag(players_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(5, seed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt64(6, teamLogo_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(7, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(8, nodeOrState_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTeamNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getTeamAbbrevBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < players_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(players_.get(i));
          }
          size += dataSize;
          if (!getPlayersList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playersMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, seed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, teamLogo_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, nodeOrState_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Team)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          teamAbbrev_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          seed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          teamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          countryCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          nodeOrState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.teamName_ = teamName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.teamAbbrev_ = teamAbbrev_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000008;
          }
          result.seed_ = seed_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000010;
          }
          result.teamLogo_ = teamLogo_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000020;
          }
          result.countryCode_ = countryCode_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000040;
          }
          result.nodeOrState_ = nodeOrState_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.getDefaultInstance()) return this;
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            bitField0_ |= 0x00000002;
            teamName_ = other.teamName_;
            onChanged();
          }
          if (other.hasTeamAbbrev()) {
            bitField0_ |= 0x00000004;
            teamAbbrev_ = other.teamAbbrev_;
            onChanged();
          }
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
          if (other.hasSeed()) {
            setSeed(other.getSeed());
          }
          if (other.hasTeamLogo()) {
            setTeamLogo(other.getTeamLogo());
          }
          if (other.hasCountryCode()) {
            bitField0_ |= 0x00000040;
            countryCode_ = other.countryCode_;
            onChanged();
          }
          if (other.hasNodeOrState()) {
            setNodeOrState(other.getNodeOrState());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000001;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 2;</code>
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string team_name = 2;</code>
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 2;</code>
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          teamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 2;</code>
         */
        public Builder clearTeamName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          teamName_ = getDefaultInstance().getTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 2;</code>
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          teamName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object teamAbbrev_ = "";
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public boolean hasTeamAbbrev() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public java.lang.String getTeamAbbrev() {
          java.lang.Object ref = teamAbbrev_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamAbbrev_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public com.google.protobuf.ByteString
            getTeamAbbrevBytes() {
          java.lang.Object ref = teamAbbrev_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamAbbrev_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public Builder setTeamAbbrev(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          teamAbbrev_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public Builder clearTeamAbbrev() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teamAbbrev_ = getDefaultInstance().getTeamAbbrev();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_abbrev = 3;</code>
         */
        public Builder setTeamAbbrevBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          teamAbbrev_ = value;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
        private void ensurePlayersIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = new java.util.ArrayList<java.lang.Integer>(players_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayersList() {
          return java.util.Collections.unmodifiableList(players_);
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public int getPlayersCount() {
          return players_.size();
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public int getPlayers(int index) {
          return players_.get(index);
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public Builder setPlayers(
            int index, int value) {
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public Builder addPlayers(int value) {
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 4 [packed = true];</code>
         */
        public Builder clearPlayers() {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private int seed_ ;
        /**
         * <code>optional uint32 seed = 5;</code>
         */
        public boolean hasSeed() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 seed = 5;</code>
         */
        public int getSeed() {
          return seed_;
        }
        /**
         * <code>optional uint32 seed = 5;</code>
         */
        public Builder setSeed(int value) {
          bitField0_ |= 0x00000010;
          seed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 seed = 5;</code>
         */
        public Builder clearSeed() {
          bitField0_ = (bitField0_ & ~0x00000010);
          seed_ = 0;
          onChanged();
          return this;
        }

        private long teamLogo_ ;
        /**
         * <code>optional uint64 team_logo = 6;</code>
         */
        public boolean hasTeamLogo() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint64 team_logo = 6;</code>
         */
        public long getTeamLogo() {
          return teamLogo_;
        }
        /**
         * <code>optional uint64 team_logo = 6;</code>
         */
        public Builder setTeamLogo(long value) {
          bitField0_ |= 0x00000020;
          teamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_logo = 6;</code>
         */
        public Builder clearTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000020);
          teamLogo_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object countryCode_ = "";
        /**
         * <code>optional string country_code = 7;</code>
         */
        public boolean hasCountryCode() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string country_code = 7;</code>
         */
        public java.lang.String getCountryCode() {
          java.lang.Object ref = countryCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              countryCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string country_code = 7;</code>
         */
        public com.google.protobuf.ByteString
            getCountryCodeBytes() {
          java.lang.Object ref = countryCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            countryCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string country_code = 7;</code>
         */
        public Builder setCountryCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          countryCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 7;</code>
         */
        public Builder clearCountryCode() {
          bitField0_ = (bitField0_ & ~0x00000040);
          countryCode_ = getDefaultInstance().getCountryCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 7;</code>
         */
        public Builder setCountryCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          countryCode_ = value;
          onChanged();
          return this;
        }

        private int nodeOrState_ ;
        /**
         * <code>optional uint32 node_or_state = 8;</code>
         */
        public boolean hasNodeOrState() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 node_or_state = 8;</code>
         */
        public int getNodeOrState() {
          return nodeOrState_;
        }
        /**
         * <code>optional uint32 node_or_state = 8;</code>
         */
        public Builder setNodeOrState(int value) {
          bitField0_ |= 0x00000080;
          nodeOrState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_or_state = 8;</code>
         */
        public Builder clearNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000080);
          nodeOrState_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Team)
      }

      static {
        defaultInstance = new Team(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Team)
    }

    public interface GameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Game)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 game_id = 1;</code>
       */
      boolean hasGameId();
      /**
       * <code>optional uint32 game_id = 1;</code>
       */
      int getGameId();

      /**
       * <code>optional uint32 good_team_id = 2;</code>
       */
      boolean hasGoodTeamId();
      /**
       * <code>optional uint32 good_team_id = 2;</code>
       */
      int getGoodTeamId();

      /**
       * <code>optional uint32 bad_team_id = 3;</code>
       */
      boolean hasBadTeamId();
      /**
       * <code>optional uint32 bad_team_id = 3;</code>
       */
      int getBadTeamId();

      /**
       * <code>optional uint32 good_team_seed = 12;</code>
       */
      boolean hasGoodTeamSeed();
      /**
       * <code>optional uint32 good_team_seed = 12;</code>
       */
      int getGoodTeamSeed();

      /**
       * <code>optional uint32 bad_team_seed = 13;</code>
       */
      boolean hasBadTeamSeed();
      /**
       * <code>optional uint32 bad_team_seed = 13;</code>
       */
      int getBadTeamSeed();

      /**
       * <code>optional fixed64 lobby_id = 4;</code>
       */
      boolean hasLobbyId();
      /**
       * <code>optional fixed64 lobby_id = 4;</code>
       */
      long getLobbyId();

      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      long getMatchId();

      /**
       * <code>optional string game_name = 6;</code>
       */
      boolean hasGameName();
      /**
       * <code>optional string game_name = 6;</code>
       */
      java.lang.String getGameName();
      /**
       * <code>optional string game_name = 6;</code>
       */
      com.google.protobuf.ByteString
          getGameNameBytes();

      /**
       * <code>optional bool live_stream = 7;</code>
       */
      boolean hasLiveStream();
      /**
       * <code>optional bool live_stream = 7;</code>
       */
      boolean getLiveStream();

      /**
       * <code>optional string message = 9;</code>
       */
      boolean hasMessage();
      /**
       * <code>optional string message = 9;</code>
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 9;</code>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>optional bool results_final = 10;</code>
       */
      boolean hasResultsFinal();
      /**
       * <code>optional bool results_final = 10;</code>
       */
      boolean getResultsFinal();

      /**
       * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
       */
      boolean hasState();
      /**
       * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState getState();

      /**
       * <code>optional uint32 node_id = 15;</code>
       */
      boolean hasNodeId();
      /**
       * <code>optional uint32 node_id = 15;</code>
       */
      int getNodeId();

      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      int getStartTime();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Game}
     */
    public static final class Game extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Game)
        GameOrBuilder {
      // Use Game.newBuilder() to construct.
      private Game(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Game(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Game defaultInstance;
      public static Game getDefaultInstance() {
        return defaultInstance;
      }

      public Game getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Game(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                gameId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                goodTeamId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                badTeamId_ = input.readUInt32();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000020;
                lobbyId_ = input.readFixed64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000040;
                matchId_ = input.readUInt64();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                gameName_ = bs;
                break;
              }
              case 56: {
                bitField0_ |= 0x00000100;
                liveStream_ = input.readBool();
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                message_ = bs;
                break;
              }
              case 80: {
                bitField0_ |= 0x00000400;
                resultsFinal_ = input.readBool();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000008;
                goodTeamSeed_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00000010;
                badTeamSeed_ = input.readUInt32();
                break;
              }
              case 112: {
                int rawValue = input.readEnum();
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(14, rawValue);
                } else {
                  bitField0_ |= 0x00000800;
                  state_ = value;
                }
                break;
              }
              case 120: {
                bitField0_ |= 0x00001000;
                nodeId_ = input.readUInt32();
                break;
              }
              case 128: {
                bitField0_ |= 0x00002000;
                startTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Game_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder.class);
      }

      public static com.google.protobuf.Parser<Game> PARSER =
          new com.google.protobuf.AbstractParser<Game>() {
        public Game parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Game(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Game> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int GAME_ID_FIELD_NUMBER = 1;
      private int gameId_;
      /**
       * <code>optional uint32 game_id = 1;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 game_id = 1;</code>
       */
      public int getGameId() {
        return gameId_;
      }

      public static final int GOOD_TEAM_ID_FIELD_NUMBER = 2;
      private int goodTeamId_;
      /**
       * <code>optional uint32 good_team_id = 2;</code>
       */
      public boolean hasGoodTeamId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 good_team_id = 2;</code>
       */
      public int getGoodTeamId() {
        return goodTeamId_;
      }

      public static final int BAD_TEAM_ID_FIELD_NUMBER = 3;
      private int badTeamId_;
      /**
       * <code>optional uint32 bad_team_id = 3;</code>
       */
      public boolean hasBadTeamId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 bad_team_id = 3;</code>
       */
      public int getBadTeamId() {
        return badTeamId_;
      }

      public static final int GOOD_TEAM_SEED_FIELD_NUMBER = 12;
      private int goodTeamSeed_;
      /**
       * <code>optional uint32 good_team_seed = 12;</code>
       */
      public boolean hasGoodTeamSeed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 good_team_seed = 12;</code>
       */
      public int getGoodTeamSeed() {
        return goodTeamSeed_;
      }

      public static final int BAD_TEAM_SEED_FIELD_NUMBER = 13;
      private int badTeamSeed_;
      /**
       * <code>optional uint32 bad_team_seed = 13;</code>
       */
      public boolean hasBadTeamSeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 bad_team_seed = 13;</code>
       */
      public int getBadTeamSeed() {
        return badTeamSeed_;
      }

      public static final int LOBBY_ID_FIELD_NUMBER = 4;
      private long lobbyId_;
      /**
       * <code>optional fixed64 lobby_id = 4;</code>
       */
      public boolean hasLobbyId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed64 lobby_id = 4;</code>
       */
      public long getLobbyId() {
        return lobbyId_;
      }

      public static final int MATCH_ID_FIELD_NUMBER = 5;
      private long matchId_;
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public long getMatchId() {
        return matchId_;
      }

      public static final int GAME_NAME_FIELD_NUMBER = 6;
      private java.lang.Object gameName_;
      /**
       * <code>optional string game_name = 6;</code>
       */
      public boolean hasGameName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string game_name = 6;</code>
       */
      public java.lang.String getGameName() {
        java.lang.Object ref = gameName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gameName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string game_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getGameNameBytes() {
        java.lang.Object ref = gameName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LIVE_STREAM_FIELD_NUMBER = 7;
      private boolean liveStream_;
      /**
       * <code>optional bool live_stream = 7;</code>
       */
      public boolean hasLiveStream() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool live_stream = 7;</code>
       */
      public boolean getLiveStream() {
        return liveStream_;
      }

      public static final int MESSAGE_FIELD_NUMBER = 9;
      private java.lang.Object message_;
      /**
       * <code>optional string message = 9;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string message = 9;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string message = 9;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int RESULTS_FINAL_FIELD_NUMBER = 10;
      private boolean resultsFinal_;
      /**
       * <code>optional bool results_final = 10;</code>
       */
      public boolean hasResultsFinal() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool results_final = 10;</code>
       */
      public boolean getResultsFinal() {
        return resultsFinal_;
      }

      public static final int STATE_FIELD_NUMBER = 14;
      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState state_;
      /**
       * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState getState() {
        return state_;
      }

      public static final int NODE_ID_FIELD_NUMBER = 15;
      private int nodeId_;
      /**
       * <code>optional uint32 node_id = 15;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 node_id = 15;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }

      public static final int START_TIME_FIELD_NUMBER = 16;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      private void initFields() {
        gameId_ = 0;
        goodTeamId_ = 0;
        badTeamId_ = 0;
        goodTeamSeed_ = 0;
        badTeamSeed_ = 0;
        lobbyId_ = 0L;
        matchId_ = 0L;
        gameName_ = "";
        liveStream_ = false;
        message_ = "";
        resultsFinal_ = false;
        state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState.k_ETournamentGameState_Unknown;
        nodeId_ = 0;
        startTime_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, gameId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, goodTeamId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, badTeamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFixed64(4, lobbyId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt64(5, matchId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(6, getGameNameBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(7, liveStream_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBytes(9, getMessageBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(10, resultsFinal_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(12, goodTeamSeed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(13, badTeamSeed_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeEnum(14, state_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(15, nodeId_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt32(16, startTime_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, gameId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, goodTeamId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, badTeamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(4, lobbyId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, matchId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getGameNameBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, liveStream_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getMessageBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, resultsFinal_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, goodTeamSeed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, badTeamSeed_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(14, state_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, nodeId_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(16, startTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Game}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Game)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          gameId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          goodTeamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          badTeamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          goodTeamSeed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          badTeamSeed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          lobbyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          matchId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000040);
          gameName_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          liveStream_ = false;
          bitField0_ = (bitField0_ & ~0x00000100);
          message_ = "";
          bitField0_ = (bitField0_ & ~0x00000200);
          resultsFinal_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState.k_ETournamentGameState_Unknown;
          bitField0_ = (bitField0_ & ~0x00000800);
          nodeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.gameId_ = gameId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.goodTeamId_ = goodTeamId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.badTeamId_ = badTeamId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.goodTeamSeed_ = goodTeamSeed_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.badTeamSeed_ = badTeamSeed_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.lobbyId_ = lobbyId_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.gameName_ = gameName_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.liveStream_ = liveStream_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.message_ = message_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.resultsFinal_ = resultsFinal_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.state_ = state_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.nodeId_ = nodeId_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.startTime_ = startTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.getDefaultInstance()) return this;
          if (other.hasGameId()) {
            setGameId(other.getGameId());
          }
          if (other.hasGoodTeamId()) {
            setGoodTeamId(other.getGoodTeamId());
          }
          if (other.hasBadTeamId()) {
            setBadTeamId(other.getBadTeamId());
          }
          if (other.hasGoodTeamSeed()) {
            setGoodTeamSeed(other.getGoodTeamSeed());
          }
          if (other.hasBadTeamSeed()) {
            setBadTeamSeed(other.getBadTeamSeed());
          }
          if (other.hasLobbyId()) {
            setLobbyId(other.getLobbyId());
          }
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasGameName()) {
            bitField0_ |= 0x00000080;
            gameName_ = other.gameName_;
            onChanged();
          }
          if (other.hasLiveStream()) {
            setLiveStream(other.getLiveStream());
          }
          if (other.hasMessage()) {
            bitField0_ |= 0x00000200;
            message_ = other.message_;
            onChanged();
          }
          if (other.hasResultsFinal()) {
            setResultsFinal(other.getResultsFinal());
          }
          if (other.hasState()) {
            setState(other.getState());
          }
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int gameId_ ;
        /**
         * <code>optional uint32 game_id = 1;</code>
         */
        public boolean hasGameId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 game_id = 1;</code>
         */
        public int getGameId() {
          return gameId_;
        }
        /**
         * <code>optional uint32 game_id = 1;</code>
         */
        public Builder setGameId(int value) {
          bitField0_ |= 0x00000001;
          gameId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 game_id = 1;</code>
         */
        public Builder clearGameId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          gameId_ = 0;
          onChanged();
          return this;
        }

        private int goodTeamId_ ;
        /**
         * <code>optional uint32 good_team_id = 2;</code>
         */
        public boolean hasGoodTeamId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 good_team_id = 2;</code>
         */
        public int getGoodTeamId() {
          return goodTeamId_;
        }
        /**
         * <code>optional uint32 good_team_id = 2;</code>
         */
        public Builder setGoodTeamId(int value) {
          bitField0_ |= 0x00000002;
          goodTeamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 good_team_id = 2;</code>
         */
        public Builder clearGoodTeamId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          goodTeamId_ = 0;
          onChanged();
          return this;
        }

        private int badTeamId_ ;
        /**
         * <code>optional uint32 bad_team_id = 3;</code>
         */
        public boolean hasBadTeamId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 bad_team_id = 3;</code>
         */
        public int getBadTeamId() {
          return badTeamId_;
        }
        /**
         * <code>optional uint32 bad_team_id = 3;</code>
         */
        public Builder setBadTeamId(int value) {
          bitField0_ |= 0x00000004;
          badTeamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 bad_team_id = 3;</code>
         */
        public Builder clearBadTeamId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          badTeamId_ = 0;
          onChanged();
          return this;
        }

        private int goodTeamSeed_ ;
        /**
         * <code>optional uint32 good_team_seed = 12;</code>
         */
        public boolean hasGoodTeamSeed() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 good_team_seed = 12;</code>
         */
        public int getGoodTeamSeed() {
          return goodTeamSeed_;
        }
        /**
         * <code>optional uint32 good_team_seed = 12;</code>
         */
        public Builder setGoodTeamSeed(int value) {
          bitField0_ |= 0x00000008;
          goodTeamSeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 good_team_seed = 12;</code>
         */
        public Builder clearGoodTeamSeed() {
          bitField0_ = (bitField0_ & ~0x00000008);
          goodTeamSeed_ = 0;
          onChanged();
          return this;
        }

        private int badTeamSeed_ ;
        /**
         * <code>optional uint32 bad_team_seed = 13;</code>
         */
        public boolean hasBadTeamSeed() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 bad_team_seed = 13;</code>
         */
        public int getBadTeamSeed() {
          return badTeamSeed_;
        }
        /**
         * <code>optional uint32 bad_team_seed = 13;</code>
         */
        public Builder setBadTeamSeed(int value) {
          bitField0_ |= 0x00000010;
          badTeamSeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 bad_team_seed = 13;</code>
         */
        public Builder clearBadTeamSeed() {
          bitField0_ = (bitField0_ & ~0x00000010);
          badTeamSeed_ = 0;
          onChanged();
          return this;
        }

        private long lobbyId_ ;
        /**
         * <code>optional fixed64 lobby_id = 4;</code>
         */
        public boolean hasLobbyId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional fixed64 lobby_id = 4;</code>
         */
        public long getLobbyId() {
          return lobbyId_;
        }
        /**
         * <code>optional fixed64 lobby_id = 4;</code>
         */
        public Builder setLobbyId(long value) {
          bitField0_ |= 0x00000020;
          lobbyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 lobby_id = 4;</code>
         */
        public Builder clearLobbyId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          lobbyId_ = 0L;
          onChanged();
          return this;
        }

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 5;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint64 match_id = 5;</code>
         */
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 5;</code>
         */
        public Builder setMatchId(long value) {
          bitField0_ |= 0x00000040;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 5;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object gameName_ = "";
        /**
         * <code>optional string game_name = 6;</code>
         */
        public boolean hasGameName() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string game_name = 6;</code>
         */
        public java.lang.String getGameName() {
          java.lang.Object ref = gameName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              gameName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string game_name = 6;</code>
         */
        public com.google.protobuf.ByteString
            getGameNameBytes() {
          java.lang.Object ref = gameName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            gameName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string game_name = 6;</code>
         */
        public Builder setGameName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          gameName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string game_name = 6;</code>
         */
        public Builder clearGameName() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gameName_ = getDefaultInstance().getGameName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string game_name = 6;</code>
         */
        public Builder setGameNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          gameName_ = value;
          onChanged();
          return this;
        }

        private boolean liveStream_ ;
        /**
         * <code>optional bool live_stream = 7;</code>
         */
        public boolean hasLiveStream() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bool live_stream = 7;</code>
         */
        public boolean getLiveStream() {
          return liveStream_;
        }
        /**
         * <code>optional bool live_stream = 7;</code>
         */
        public Builder setLiveStream(boolean value) {
          bitField0_ |= 0x00000100;
          liveStream_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool live_stream = 7;</code>
         */
        public Builder clearLiveStream() {
          bitField0_ = (bitField0_ & ~0x00000100);
          liveStream_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 9;</code>
         */
        public boolean hasMessage() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional string message = 9;</code>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              message_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 9;</code>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 9;</code>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 9;</code>
         */
        public Builder clearMessage() {
          bitField0_ = (bitField0_ & ~0x00000200);
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 9;</code>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          message_ = value;
          onChanged();
          return this;
        }

        private boolean resultsFinal_ ;
        /**
         * <code>optional bool results_final = 10;</code>
         */
        public boolean hasResultsFinal() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bool results_final = 10;</code>
         */
        public boolean getResultsFinal() {
          return resultsFinal_;
        }
        /**
         * <code>optional bool results_final = 10;</code>
         */
        public Builder setResultsFinal(boolean value) {
          bitField0_ |= 0x00000400;
          resultsFinal_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool results_final = 10;</code>
         */
        public Builder clearResultsFinal() {
          bitField0_ = (bitField0_ & ~0x00000400);
          resultsFinal_ = false;
          onChanged();
          return this;
        }

        private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState.k_ETournamentGameState_Unknown;
        /**
         * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
         */
        public boolean hasState() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState getState() {
          return state_;
        }
        /**
         * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder setState(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000800;
          state_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentGameState state = 14 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder clearState() {
          bitField0_ = (bitField0_ & ~0x00000800);
          state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentGameState.k_ETournamentGameState_Unknown;
          onChanged();
          return this;
        }

        private int nodeId_ ;
        /**
         * <code>optional uint32 node_id = 15;</code>
         */
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 node_id = 15;</code>
         */
        public int getNodeId() {
          return nodeId_;
        }
        /**
         * <code>optional uint32 node_id = 15;</code>
         */
        public Builder setNodeId(int value) {
          bitField0_ |= 0x00001000;
          nodeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_id = 15;</code>
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00001000);
          nodeId_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00002000;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00002000);
          startTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Game)
      }

      static {
        defaultInstance = new Game(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Game)
    }

    public interface NodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Node)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      boolean hasNodeId();
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      int getNodeId();

      /**
       * <code>optional uint32 team_seed_a = 2;</code>
       */
      boolean hasTeamSeedA();
      /**
       * <code>optional uint32 team_seed_a = 2;</code>
       */
      int getTeamSeedA();

      /**
       * <code>optional uint32 team_seed_b = 3;</code>
       */
      boolean hasTeamSeedB();
      /**
       * <code>optional uint32 team_seed_b = 3;</code>
       */
      int getTeamSeedB();

      /**
       * <code>optional uint32 winner_node = 4;</code>
       */
      boolean hasWinnerNode();
      /**
       * <code>optional uint32 winner_node = 4;</code>
       */
      int getWinnerNode();

      /**
       * <code>optional uint32 loser_node = 5;</code>
       */
      boolean hasLoserNode();
      /**
       * <code>optional uint32 loser_node = 5;</code>
       */
      int getLoserNode();

      /**
       * <code>optional uint32 series_type = 7;</code>
       */
      boolean hasSeriesType();
      /**
       * <code>optional uint32 series_type = 7;</code>
       */
      int getSeriesType();

      /**
       * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
       */
      boolean hasNodeState();
      /**
       * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
       */
      telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState getNodeState();

      /**
       * <code>optional uint32 series_id = 9;</code>
       */
      boolean hasSeriesId();
      /**
       * <code>optional uint32 series_id = 9;</code>
       */
      int getSeriesId();

      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      int getStartTime();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Node}
     */
    public static final class Node extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Node)
        NodeOrBuilder {
      // Use Node.newBuilder() to construct.
      private Node(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Node(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Node defaultInstance;
      public static Node getDefaultInstance() {
        return defaultInstance;
      }

      public Node getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Node(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                nodeId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                teamSeedA_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                teamSeedB_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                winnerNode_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                loserNode_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                seriesType_ = input.readUInt32();
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  nodeState_ = value;
                }
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                seriesId_ = input.readUInt32();
                break;
              }
              case 128: {
                bitField0_ |= 0x00000100;
                startTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder.class);
      }

      public static com.google.protobuf.Parser<Node> PARSER =
          new com.google.protobuf.AbstractParser<Node>() {
        public Node parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Node(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Node> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NODE_ID_FIELD_NUMBER = 1;
      private int nodeId_;
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }

      public static final int TEAM_SEED_A_FIELD_NUMBER = 2;
      private int teamSeedA_;
      /**
       * <code>optional uint32 team_seed_a = 2;</code>
       */
      public boolean hasTeamSeedA() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_seed_a = 2;</code>
       */
      public int getTeamSeedA() {
        return teamSeedA_;
      }

      public static final int TEAM_SEED_B_FIELD_NUMBER = 3;
      private int teamSeedB_;
      /**
       * <code>optional uint32 team_seed_b = 3;</code>
       */
      public boolean hasTeamSeedB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team_seed_b = 3;</code>
       */
      public int getTeamSeedB() {
        return teamSeedB_;
      }

      public static final int WINNER_NODE_FIELD_NUMBER = 4;
      private int winnerNode_;
      /**
       * <code>optional uint32 winner_node = 4;</code>
       */
      public boolean hasWinnerNode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 winner_node = 4;</code>
       */
      public int getWinnerNode() {
        return winnerNode_;
      }

      public static final int LOSER_NODE_FIELD_NUMBER = 5;
      private int loserNode_;
      /**
       * <code>optional uint32 loser_node = 5;</code>
       */
      public boolean hasLoserNode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 loser_node = 5;</code>
       */
      public int getLoserNode() {
        return loserNode_;
      }

      public static final int SERIES_TYPE_FIELD_NUMBER = 7;
      private int seriesType_;
      /**
       * <code>optional uint32 series_type = 7;</code>
       */
      public boolean hasSeriesType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 series_type = 7;</code>
       */
      public int getSeriesType() {
        return seriesType_;
      }

      public static final int NODE_STATE_FIELD_NUMBER = 8;
      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState nodeState_;
      /**
       * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
       */
      public boolean hasNodeState() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState getNodeState() {
        return nodeState_;
      }

      public static final int SERIES_ID_FIELD_NUMBER = 9;
      private int seriesId_;
      /**
       * <code>optional uint32 series_id = 9;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 series_id = 9;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }

      public static final int START_TIME_FIELD_NUMBER = 16;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 start_time = 16;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      private void initFields() {
        nodeId_ = 0;
        teamSeedA_ = 0;
        teamSeedB_ = 0;
        winnerNode_ = 0;
        loserNode_ = 0;
        seriesType_ = 0;
        nodeState_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState.k_ETournamentNodeState_Unknown;
        seriesId_ = 0;
        startTime_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, teamSeedA_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, teamSeedB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, winnerNode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, loserNode_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(7, seriesType_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(8, nodeState_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(9, seriesId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(16, startTime_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, teamSeedA_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teamSeedB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, winnerNode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, loserNode_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, seriesType_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, nodeState_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, seriesId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(16, startTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Node}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Node)
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder.class);
        }

        // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          nodeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamSeedA_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          teamSeedB_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          winnerNode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          loserNode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          seriesType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          nodeState_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState.k_ETournamentNodeState_Unknown;
          bitField0_ = (bitField0_ & ~0x00000040);
          seriesId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node getDefaultInstanceForType() {
          return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.getDefaultInstance();
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node build() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node buildPartial() {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.nodeId_ = nodeId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.teamSeedA_ = teamSeedA_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.teamSeedB_ = teamSeedB_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.winnerNode_ = winnerNode_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.loserNode_ = loserNode_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.seriesType_ = seriesType_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.nodeState_ = nodeState_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.seriesId_ = seriesId_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.startTime_ = startTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node) {
            return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node other) {
          if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.getDefaultInstance()) return this;
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasTeamSeedA()) {
            setTeamSeedA(other.getTeamSeedA());
          }
          if (other.hasTeamSeedB()) {
            setTeamSeedB(other.getTeamSeedB());
          }
          if (other.hasWinnerNode()) {
            setWinnerNode(other.getWinnerNode());
          }
          if (other.hasLoserNode()) {
            setLoserNode(other.getLoserNode());
          }
          if (other.hasSeriesType()) {
            setSeriesType(other.getSeriesType());
          }
          if (other.hasNodeState()) {
            setNodeState(other.getNodeState());
          }
          if (other.hasSeriesId()) {
            setSeriesId(other.getSeriesId());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int nodeId_ ;
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public int getNodeId() {
          return nodeId_;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public Builder setNodeId(int value) {
          bitField0_ |= 0x00000001;
          nodeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeId_ = 0;
          onChanged();
          return this;
        }

        private int teamSeedA_ ;
        /**
         * <code>optional uint32 team_seed_a = 2;</code>
         */
        public boolean hasTeamSeedA() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 team_seed_a = 2;</code>
         */
        public int getTeamSeedA() {
          return teamSeedA_;
        }
        /**
         * <code>optional uint32 team_seed_a = 2;</code>
         */
        public Builder setTeamSeedA(int value) {
          bitField0_ |= 0x00000002;
          teamSeedA_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_seed_a = 2;</code>
         */
        public Builder clearTeamSeedA() {
          bitField0_ = (bitField0_ & ~0x00000002);
          teamSeedA_ = 0;
          onChanged();
          return this;
        }

        private int teamSeedB_ ;
        /**
         * <code>optional uint32 team_seed_b = 3;</code>
         */
        public boolean hasTeamSeedB() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 team_seed_b = 3;</code>
         */
        public int getTeamSeedB() {
          return teamSeedB_;
        }
        /**
         * <code>optional uint32 team_seed_b = 3;</code>
         */
        public Builder setTeamSeedB(int value) {
          bitField0_ |= 0x00000004;
          teamSeedB_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_seed_b = 3;</code>
         */
        public Builder clearTeamSeedB() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teamSeedB_ = 0;
          onChanged();
          return this;
        }

        private int winnerNode_ ;
        /**
         * <code>optional uint32 winner_node = 4;</code>
         */
        public boolean hasWinnerNode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 winner_node = 4;</code>
         */
        public int getWinnerNode() {
          return winnerNode_;
        }
        /**
         * <code>optional uint32 winner_node = 4;</code>
         */
        public Builder setWinnerNode(int value) {
          bitField0_ |= 0x00000008;
          winnerNode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 winner_node = 4;</code>
         */
        public Builder clearWinnerNode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          winnerNode_ = 0;
          onChanged();
          return this;
        }

        private int loserNode_ ;
        /**
         * <code>optional uint32 loser_node = 5;</code>
         */
        public boolean hasLoserNode() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 loser_node = 5;</code>
         */
        public int getLoserNode() {
          return loserNode_;
        }
        /**
         * <code>optional uint32 loser_node = 5;</code>
         */
        public Builder setLoserNode(int value) {
          bitField0_ |= 0x00000010;
          loserNode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 loser_node = 5;</code>
         */
        public Builder clearLoserNode() {
          bitField0_ = (bitField0_ & ~0x00000010);
          loserNode_ = 0;
          onChanged();
          return this;
        }

        private int seriesType_ ;
        /**
         * <code>optional uint32 series_type = 7;</code>
         */
        public boolean hasSeriesType() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 series_type = 7;</code>
         */
        public int getSeriesType() {
          return seriesType_;
        }
        /**
         * <code>optional uint32 series_type = 7;</code>
         */
        public Builder setSeriesType(int value) {
          bitField0_ |= 0x00000020;
          seriesType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_type = 7;</code>
         */
        public Builder clearSeriesType() {
          bitField0_ = (bitField0_ & ~0x00000020);
          seriesType_ = 0;
          onChanged();
          return this;
        }

        private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState nodeState_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState.k_ETournamentNodeState_Unknown;
        /**
         * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public boolean hasNodeState() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState getNodeState() {
          return nodeState_;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public Builder setNodeState(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          nodeState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 8 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public Builder clearNodeState() {
          bitField0_ = (bitField0_ & ~0x00000040);
          nodeState_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentNodeState.k_ETournamentNodeState_Unknown;
          onChanged();
          return this;
        }

        private int seriesId_ ;
        /**
         * <code>optional uint32 series_id = 9;</code>
         */
        public boolean hasSeriesId() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 series_id = 9;</code>
         */
        public int getSeriesId() {
          return seriesId_;
        }
        /**
         * <code>optional uint32 series_id = 9;</code>
         */
        public Builder setSeriesId(int value) {
          bitField0_ |= 0x00000080;
          seriesId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_id = 9;</code>
         */
        public Builder clearSeriesId() {
          bitField0_ = (bitField0_ & ~0x00000080);
          seriesId_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000100;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 16;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000100);
          startTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Node)
      }

      static {
        defaultInstance = new Node(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Node)
    }

    private int bitField0_;
    public static final int TEAMS_FIELD_NUMBER = 1;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> teams_;
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int GAMES_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> games_;
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder> 
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    public static final int GID_FIELD_NUMBER = 3;
    private long gid_;
    /**
     * <code>optional uint64 gid = 3;</code>
     */
    public boolean hasGid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 gid = 3;</code>
     */
    public long getGid() {
      return gid_;
    }

    public static final int TOURNAMENT_ID_FIELD_NUMBER = 4;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 4;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 tournament_id = 4;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int TOURNAMENT_TYPE_FIELD_NUMBER = 5;
    private telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType tournamentType_;
    /**
     * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
     */
    public boolean hasTournamentType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
     */
    public telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType getTournamentType() {
      return tournamentType_;
    }

    public static final int TOURNAMENT_TEMPLATE_FIELD_NUMBER = 6;
    private telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate tournamentTemplate_;
    /**
     * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
     */
    public boolean hasTournamentTemplate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
     */
    public telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate getTournamentTemplate() {
      return tournamentTemplate_;
    }

    public static final int LEAGUE_ID_FIELD_NUMBER = 7;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 7;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 league_id = 7;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int START_TIME_FIELD_NUMBER = 8;
    private int startTime_;
    /**
     * <code>optional uint32 start_time = 8;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 start_time = 8;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int STATE_FIELD_NUMBER = 9;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState state_;
    /**
     * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState getState() {
      return state_;
    }

    public static final int NODES_FIELD_NUMBER = 10;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> nodes_;
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private void initFields() {
      teams_ = java.util.Collections.emptyList();
      games_ = java.util.Collections.emptyList();
      gid_ = 0L;
      tournamentId_ = 0;
      tournamentType_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType.k_ETournamentType_Unknown;
      tournamentTemplate_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate.k_ETournamentTemplate_None;
      leagueId_ = 0;
      startTime_ = 0;
      state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState.k_ETournamentState_Unknown;
      nodes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(1, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(2, games_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(3, gid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(4, tournamentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(5, tournamentType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(6, tournamentTemplate_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, leagueId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(8, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(9, state_.getNumber());
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(10, nodes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, games_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, gid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, tournamentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, tournamentType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, tournamentTemplate_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, leagueId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, state_.getNumber());
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, nodes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournament}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournament)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamsFieldBuilder();
          getGamesFieldBuilder();
          getNodesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamsBuilder_.clear();
        }
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          gamesBuilder_.clear();
        }
        gid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tournamentType_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType.k_ETournamentType_Unknown;
        bitField0_ = (bitField0_ & ~0x00000010);
        tournamentTemplate_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate.k_ETournamentTemplate_None;
        bitField0_ = (bitField0_ & ~0x00000020);
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState.k_ETournamentState_Unknown;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournament_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gid_ = gid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tournamentType_ = tournamentType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tournamentTemplate_ = tournamentTemplate_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.state_ = state_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance()) return this;
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000002);
              gamesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        if (other.hasGid()) {
          setGid(other.getGid());
        }
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasTournamentType()) {
          setTournamentType(other.getTournamentType());
        }
        if (other.hasTournamentTemplate()) {
          setTournamentTemplate(other.getTournamentTemplate());
        }
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000200);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team>(teams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder addTeams(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder addTeams(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Team.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          games_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game>(games_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder setGames(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder setGames(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder addGames(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder addGames(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder addGames(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder addGames(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder> 
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder> 
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder> 
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Game.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.GameOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      private long gid_ ;
      /**
       * <code>optional uint64 gid = 3;</code>
       */
      public boolean hasGid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 gid = 3;</code>
       */
      public long getGid() {
        return gid_;
      }
      /**
       * <code>optional uint64 gid = 3;</code>
       */
      public Builder setGid(long value) {
        bitField0_ |= 0x00000004;
        gid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gid = 3;</code>
       */
      public Builder clearGid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gid_ = 0L;
        onChanged();
        return this;
      }

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 4;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 tournament_id = 4;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 4;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000008;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 4;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType tournamentType_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType.k_ETournamentType_Unknown;
      /**
       * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
       */
      public boolean hasTournamentType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
       */
      public telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType getTournamentType() {
        return tournamentType_;
      }
      /**
       * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
       */
      public Builder setTournamentType(telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        tournamentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentType tournament_type = 5 [default = k_ETournamentType_Unknown];</code>
       */
      public Builder clearTournamentType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tournamentType_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentType.k_ETournamentType_Unknown;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate tournamentTemplate_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate.k_ETournamentTemplate_None;
      /**
       * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
       */
      public boolean hasTournamentTemplate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
       */
      public telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate getTournamentTemplate() {
        return tournamentTemplate_;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
       */
      public Builder setTournamentTemplate(telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        tournamentTemplate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 6 [default = k_ETournamentTemplate_None];</code>
       */
      public Builder clearTournamentTemplate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tournamentTemplate_ = telekinesis.message.proto.generated.dota.DOTAGC_Common.ETournamentTemplate.k_ETournamentTemplate_None;
        onChanged();
        return this;
      }

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 7;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 league_id = 7;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 7;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000040;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 7;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>optional uint32 start_time = 8;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 start_time = 8;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional uint32 start_time = 8;</code>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000080;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_time = 8;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        startTime_ = 0;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState.k_ETournamentState_Unknown;
      /**
       * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState getState() {
        return state_;
      }
      /**
       * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder setState(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentState state = 9 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000100);
        state_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.ETournamentState.k_ETournamentState_Unknown;
        onChanged();
        return this;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          nodes_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node>(nodes_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder setNodes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder setNodes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder addNodes(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder addNodes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder addNodes(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder addNodes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 10;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Node.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATournament)
    }

    static {
      defaultInstance = new CMsgDOTATournament(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournament)
  }

  public interface CMsgDOTATournamentRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    boolean hasClientTournamentGid();
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    long getClientTournamentGid();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentRequest}
   */
  public static final class CMsgDOTATournamentRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentRequest)
      CMsgDOTATournamentRequestOrBuilder {
    // Use CMsgDOTATournamentRequest.newBuilder() to construct.
    private CMsgDOTATournamentRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTATournamentRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTATournamentRequest defaultInstance;
    public static CMsgDOTATournamentRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTATournamentRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              clientTournamentGid_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTATournamentRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTATournamentRequest>() {
      public CMsgDOTATournamentRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTATournamentRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int CLIENT_TOURNAMENT_GID_FIELD_NUMBER = 2;
    private long clientTournamentGid_;
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    public boolean hasClientTournamentGid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    public long getClientTournamentGid() {
      return clientTournamentGid_;
    }

    private void initFields() {
      tournamentId_ = 0;
      clientTournamentGid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, clientTournamentGid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, clientTournamentGid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTournamentGid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTournamentGid_ = clientTournamentGid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasClientTournamentGid()) {
          setClientTournamentGid(other.getClientTournamentGid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000001;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private long clientTournamentGid_ ;
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public boolean hasClientTournamentGid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public long getClientTournamentGid() {
        return clientTournamentGid_;
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public Builder setClientTournamentGid(long value) {
        bitField0_ |= 0x00000002;
        clientTournamentGid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public Builder clearClientTournamentGid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTournamentGid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentRequest)
    }

    static {
      defaultInstance = new CMsgDOTATournamentRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentRequest)
  }

  public interface CMsgDOTATournamentResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    boolean hasResult();
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    int getResult();

    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    boolean hasTournament();
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getTournament();
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getTournamentOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentResponse}
   */
  public static final class CMsgDOTATournamentResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentResponse)
      CMsgDOTATournamentResponseOrBuilder {
    // Use CMsgDOTATournamentResponse.newBuilder() to construct.
    private CMsgDOTATournamentResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTATournamentResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTATournamentResponse defaultInstance;
    public static CMsgDOTATournamentResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTATournamentResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tournament_.toBuilder();
              }
              tournament_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tournament_);
                tournament_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTATournamentResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTATournamentResponse>() {
      public CMsgDOTATournamentResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTATournamentResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    public int getResult() {
      return result_;
    }

    public static final int TOURNAMENT_FIELD_NUMBER = 2;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament tournament_;
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public boolean hasTournament() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getTournament() {
      return tournament_;
    }
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getTournamentOrBuilder() {
      return tournament_;
    }

    private void initFields() {
      result_ = 2;
      tournament_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, tournament_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tournament_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTournamentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 2;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tournamentBuilder_ == null) {
          tournament_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
        } else {
          tournamentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTATournamentResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tournamentBuilder_ == null) {
          result.tournament_ = tournament_;
        } else {
          result.tournament_ = tournamentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasTournament()) {
          mergeTournament(other.getTournament());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 2;
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 2;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament tournament_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder> tournamentBuilder_;
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public boolean hasTournament() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getTournament() {
        if (tournamentBuilder_ == null) {
          return tournament_;
        } else {
          return tournamentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder setTournament(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament value) {
        if (tournamentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tournament_ = value;
          onChanged();
        } else {
          tournamentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder setTournament(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder builderForValue) {
        if (tournamentBuilder_ == null) {
          tournament_ = builderForValue.build();
          onChanged();
        } else {
          tournamentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder mergeTournament(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament value) {
        if (tournamentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tournament_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance()) {
            tournament_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.newBuilder(tournament_).mergeFrom(value).buildPartial();
          } else {
            tournament_ = value;
          }
          onChanged();
        } else {
          tournamentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder clearTournament() {
        if (tournamentBuilder_ == null) {
          tournament_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
          onChanged();
        } else {
          tournamentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder getTournamentBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTournamentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getTournamentOrBuilder() {
        if (tournamentBuilder_ != null) {
          return tournamentBuilder_.getMessageOrBuilder();
        } else {
          return tournament_;
        }
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder> 
          getTournamentFieldBuilder() {
        if (tournamentBuilder_ == null) {
          tournamentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder>(
                  getTournament(),
                  getParentForChildren(),
                  isClean());
          tournament_ = null;
        }
        return tournamentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentResponse)
    }

    static {
      defaultInstance = new CMsgDOTATournamentResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentResponse)
  }

  public interface CMsgDOTAClearTournamentGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAClearTournamentGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    int getGameId();
  }
  /**
   * Protobuf type {@code CMsgDOTAClearTournamentGame}
   */
  public static final class CMsgDOTAClearTournamentGame extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAClearTournamentGame)
      CMsgDOTAClearTournamentGameOrBuilder {
    // Use CMsgDOTAClearTournamentGame.newBuilder() to construct.
    private CMsgDOTAClearTournamentGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAClearTournamentGame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAClearTournamentGame defaultInstance;
    public static CMsgDOTAClearTournamentGame getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAClearTournamentGame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAClearTournamentGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAClearTournamentGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAClearTournamentGame> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAClearTournamentGame>() {
      public CMsgDOTAClearTournamentGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAClearTournamentGame(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAClearTournamentGame> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int GAME_ID_FIELD_NUMBER = 2;
    private int gameId_;
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    private void initFields() {
      tournamentId_ = 0;
      gameId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gameId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAClearTournamentGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAClearTournamentGame)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAClearTournamentGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAClearTournamentGame_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameId_ = gameId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAClearTournamentGame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000001;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private int gameId_ ;
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000002;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAClearTournamentGame)
    }

    static {
      defaultInstance = new CMsgDOTAClearTournamentGame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAClearTournamentGame)
  }

  public interface CMsgDOTAPassportVoteTeamGuessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteTeamGuess)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    int getLeagueId();

    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    boolean hasWinnerId();
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    int getWinnerId();

    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    boolean hasRunnerupId();
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    int getRunnerupId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
   */
  public static final class CMsgDOTAPassportVoteTeamGuess extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteTeamGuess)
      CMsgDOTAPassportVoteTeamGuessOrBuilder {
    // Use CMsgDOTAPassportVoteTeamGuess.newBuilder() to construct.
    private CMsgDOTAPassportVoteTeamGuess(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPassportVoteTeamGuess(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPassportVoteTeamGuess defaultInstance;
    public static CMsgDOTAPassportVoteTeamGuess getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVoteTeamGuess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              winnerId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              runnerupId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteTeamGuess>() {
      public CMsgDOTAPassportVoteTeamGuess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPassportVoteTeamGuess(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int WINNER_ID_FIELD_NUMBER = 2;
    private int winnerId_;
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    public boolean hasWinnerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    public int getWinnerId() {
      return winnerId_;
    }

    public static final int RUNNERUP_ID_FIELD_NUMBER = 3;
    private int runnerupId_;
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    public boolean hasRunnerupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    public int getRunnerupId() {
      return runnerupId_;
    }

    private void initFields() {
      leagueId_ = 0;
      winnerId_ = 0;
      runnerupId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, runnerupId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, runnerupId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteTeamGuess)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        winnerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        runnerupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.winnerId_ = winnerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.runnerupId_ = runnerupId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasWinnerId()) {
          setWinnerId(other.getWinnerId());
        }
        if (other.hasRunnerupId()) {
          setRunnerupId(other.getRunnerupId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000001;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int winnerId_ ;
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public boolean hasWinnerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public int getWinnerId() {
        return winnerId_;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public Builder setWinnerId(int value) {
        bitField0_ |= 0x00000002;
        winnerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public Builder clearWinnerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        winnerId_ = 0;
        onChanged();
        return this;
      }

      private int runnerupId_ ;
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public boolean hasRunnerupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public int getRunnerupId() {
        return runnerupId_;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public Builder setRunnerupId(int value) {
        bitField0_ |= 0x00000004;
        runnerupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public Builder clearRunnerupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        runnerupId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteTeamGuess)
    }

    static {
      defaultInstance = new CMsgDOTAPassportVoteTeamGuess(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteTeamGuess)
  }

  public interface CMsgDOTAPassportVoteGenericSelectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteGenericSelection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    boolean hasSelectionIndex();
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices getSelectionIndex();

    /**
     * <code>optional uint32 selection = 2;</code>
     */
    boolean hasSelection();
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    int getSelection();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
   */
  public static final class CMsgDOTAPassportVoteGenericSelection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteGenericSelection)
      CMsgDOTAPassportVoteGenericSelectionOrBuilder {
    // Use CMsgDOTAPassportVoteGenericSelection.newBuilder() to construct.
    private CMsgDOTAPassportVoteGenericSelection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPassportVoteGenericSelection(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPassportVoteGenericSelection defaultInstance;
    public static CMsgDOTAPassportVoteGenericSelection getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVoteGenericSelection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices value = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                selectionIndex_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              selection_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteGenericSelection>() {
      public CMsgDOTAPassportVoteGenericSelection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPassportVoteGenericSelection(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SELECTION_INDEX_FIELD_NUMBER = 1;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices selectionIndex_;
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    public boolean hasSelectionIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
      return selectionIndex_;
    }

    public static final int SELECTION_FIELD_NUMBER = 2;
    private int selection_;
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    public boolean hasSelection() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    public int getSelection() {
      return selection_;
    }

    private void initFields() {
      selectionIndex_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0;
      selection_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, selectionIndex_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, selection_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, selectionIndex_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, selection_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteGenericSelection)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        selectionIndex_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0;
        bitField0_ = (bitField0_ & ~0x00000001);
        selection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.selectionIndex_ = selectionIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.selection_ = selection_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance()) return this;
        if (other.hasSelectionIndex()) {
          setSelectionIndex(other.getSelectionIndex());
        }
        if (other.hasSelection()) {
          setSelection(other.getSelection());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices selectionIndex_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0;
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public boolean hasSelectionIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
        return selectionIndex_;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public Builder setSelectionIndex(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        selectionIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public Builder clearSelectionIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        selectionIndex_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0;
        onChanged();
        return this;
      }

      private int selection_ ;
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public boolean hasSelection() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public int getSelection() {
        return selection_;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public Builder setSelection(int value) {
        bitField0_ |= 0x00000002;
        selection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public Builder clearSelection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selection_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteGenericSelection)
    }

    static {
      defaultInstance = new CMsgDOTAPassportVoteGenericSelection(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteGenericSelection)
  }

  public interface CMsgDOTAPassportStampedPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportStampedPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    boolean hasSteamId();
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    long getSteamId();

    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    boolean hasStampLevel();
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    int getStampLevel();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
   */
  public static final class CMsgDOTAPassportStampedPlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportStampedPlayer)
      CMsgDOTAPassportStampedPlayerOrBuilder {
    // Use CMsgDOTAPassportStampedPlayer.newBuilder() to construct.
    private CMsgDOTAPassportStampedPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPassportStampedPlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPassportStampedPlayer defaultInstance;
    public static CMsgDOTAPassportStampedPlayer getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportStampedPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              steamId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stampLevel_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPassportStampedPlayer>() {
      public CMsgDOTAPassportStampedPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPassportStampedPlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private long steamId_;
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    public long getSteamId() {
      return steamId_;
    }

    public static final int STAMP_LEVEL_FIELD_NUMBER = 2;
    private int stampLevel_;
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    public boolean hasStampLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    public int getStampLevel() {
      return stampLevel_;
    }

    private void initFields() {
      steamId_ = 0L;
      stampLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, stampLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stampLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportStampedPlayer)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        stampLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamId_ = steamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stampLevel_ = stampLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasStampLevel()) {
          setStampLevel(other.getStampLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamId_ ;
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public Builder setSteamId(long value) {
        bitField0_ |= 0x00000001;
        steamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private int stampLevel_ ;
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public boolean hasStampLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public int getStampLevel() {
        return stampLevel_;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public Builder setStampLevel(int value) {
        bitField0_ |= 0x00000002;
        stampLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public Builder clearStampLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stampLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportStampedPlayer)
    }

    static {
      defaultInstance = new CMsgDOTAPassportStampedPlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportStampedPlayer)
  }

  public interface CMsgDOTAPassportPlayerCardChallengeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportPlayerCardChallenge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    boolean hasChallengeId();
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    int getChallengeId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
   */
  public static final class CMsgDOTAPassportPlayerCardChallenge extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportPlayerCardChallenge)
      CMsgDOTAPassportPlayerCardChallengeOrBuilder {
    // Use CMsgDOTAPassportPlayerCardChallenge.newBuilder() to construct.
    private CMsgDOTAPassportPlayerCardChallenge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPassportPlayerCardChallenge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPassportPlayerCardChallenge defaultInstance;
    public static CMsgDOTAPassportPlayerCardChallenge getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportPlayerCardChallenge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              challengeId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPassportPlayerCardChallenge>() {
      public CMsgDOTAPassportPlayerCardChallenge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPassportPlayerCardChallenge(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHALLENGE_ID_FIELD_NUMBER = 1;
    private int challengeId_;
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    public boolean hasChallengeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    public int getChallengeId() {
      return challengeId_;
    }

    private void initFields() {
      challengeId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, challengeId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, challengeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportPlayerCardChallenge)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        challengeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.challengeId_ = challengeId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance()) return this;
        if (other.hasChallengeId()) {
          setChallengeId(other.getChallengeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int challengeId_ ;
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public boolean hasChallengeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public int getChallengeId() {
        return challengeId_;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public Builder setChallengeId(int value) {
        bitField0_ |= 0x00000001;
        challengeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public Builder clearChallengeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        challengeId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportPlayerCardChallenge)
    }

    static {
      defaultInstance = new CMsgDOTAPassportPlayerCardChallenge(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportPlayerCardChallenge)
  }

  public interface CMsgDOTAPassportVoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> 
        getTeamVotesList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    int getTeamVotesCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> 
        getGenericSelectionsList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    int getGenericSelectionsCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> 
        getStampedPlayersList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index);
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    int getStampedPlayersCount();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> 
        getPlayerCardChallengesList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index);
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    int getPlayerCardChallengesCount();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVote}
   */
  public static final class CMsgDOTAPassportVote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVote)
      CMsgDOTAPassportVoteOrBuilder {
    // Use CMsgDOTAPassportVote.newBuilder() to construct.
    private CMsgDOTAPassportVote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPassportVote(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPassportVote defaultInstance;
    public static CMsgDOTAPassportVote getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPassportVote getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teamVotes_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess>();
                mutable_bitField0_ |= 0x00000001;
              }
              teamVotes_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                genericSelections_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection>();
                mutable_bitField0_ |= 0x00000002;
              }
              genericSelections_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                stampedPlayers_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer>();
                mutable_bitField0_ |= 0x00000004;
              }
              stampedPlayers_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                playerCardChallenges_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge>();
                mutable_bitField0_ |= 0x00000008;
              }
              playerCardChallenges_.add(input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teamVotes_ = java.util.Collections.unmodifiableList(teamVotes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          genericSelections_ = java.util.Collections.unmodifiableList(genericSelections_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          stampedPlayers_ = java.util.Collections.unmodifiableList(stampedPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          playerCardChallenges_ = java.util.Collections.unmodifiableList(playerCardChallenges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPassportVote> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPassportVote>() {
      public CMsgDOTAPassportVote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPassportVote(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVote> getParserForType() {
      return PARSER;
    }

    public static final int TEAM_VOTES_FIELD_NUMBER = 1;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public int getTeamVotesCount() {
      return teamVotes_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
      return teamVotes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index) {
      return teamVotes_.get(index);
    }

    public static final int GENERIC_SELECTIONS_FIELD_NUMBER = 2;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public int getGenericSelectionsCount() {
      return genericSelections_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
      return genericSelections_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index) {
      return genericSelections_.get(index);
    }

    public static final int STAMPED_PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_;
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public int getStampedPlayersCount() {
      return stampedPlayers_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
      return stampedPlayers_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index) {
      return stampedPlayers_.get(index);
    }

    public static final int PLAYER_CARD_CHALLENGES_FIELD_NUMBER = 4;
    private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_;
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public int getPlayerCardChallengesCount() {
      return playerCardChallenges_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
      return playerCardChallenges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index) {
      return playerCardChallenges_.get(index);
    }

    private void initFields() {
      teamVotes_ = java.util.Collections.emptyList();
      genericSelections_ = java.util.Collections.emptyList();
      stampedPlayers_ = java.util.Collections.emptyList();
      playerCardChallenges_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teamVotes_.size(); i++) {
        output.writeMessage(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        output.writeMessage(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        output.writeMessage(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        output.writeMessage(4, playerCardChallenges_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teamVotes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerCardChallenges_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVote)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamVotesFieldBuilder();
          getGenericSelectionsFieldBuilder();
          getStampedPlayersFieldBuilder();
          getPlayerCardChallengesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamVotesBuilder_.clear();
        }
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          genericSelectionsBuilder_.clear();
        }
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          stampedPlayersBuilder_.clear();
        }
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerCardChallengesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote(this);
        int from_bitField0_ = bitField0_;
        if (teamVotesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teamVotes_ = java.util.Collections.unmodifiableList(teamVotes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teamVotes_ = teamVotes_;
        } else {
          result.teamVotes_ = teamVotesBuilder_.build();
        }
        if (genericSelectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            genericSelections_ = java.util.Collections.unmodifiableList(genericSelections_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.genericSelections_ = genericSelections_;
        } else {
          result.genericSelections_ = genericSelectionsBuilder_.build();
        }
        if (stampedPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            stampedPlayers_ = java.util.Collections.unmodifiableList(stampedPlayers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.stampedPlayers_ = stampedPlayers_;
        } else {
          result.stampedPlayers_ = stampedPlayersBuilder_.build();
        }
        if (playerCardChallengesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerCardChallenges_ = java.util.Collections.unmodifiableList(playerCardChallenges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerCardChallenges_ = playerCardChallenges_;
        } else {
          result.playerCardChallenges_ = playerCardChallengesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance()) return this;
        if (teamVotesBuilder_ == null) {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotes_.isEmpty()) {
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamVotesIsMutable();
              teamVotes_.addAll(other.teamVotes_);
            }
            onChanged();
          }
        } else {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotesBuilder_.isEmpty()) {
              teamVotesBuilder_.dispose();
              teamVotesBuilder_ = null;
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamVotesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamVotesFieldBuilder() : null;
            } else {
              teamVotesBuilder_.addAllMessages(other.teamVotes_);
            }
          }
        }
        if (genericSelectionsBuilder_ == null) {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelections_.isEmpty()) {
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGenericSelectionsIsMutable();
              genericSelections_.addAll(other.genericSelections_);
            }
            onChanged();
          }
        } else {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelectionsBuilder_.isEmpty()) {
              genericSelectionsBuilder_.dispose();
              genericSelectionsBuilder_ = null;
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
              genericSelectionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenericSelectionsFieldBuilder() : null;
            } else {
              genericSelectionsBuilder_.addAllMessages(other.genericSelections_);
            }
          }
        }
        if (stampedPlayersBuilder_ == null) {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayers_.isEmpty()) {
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStampedPlayersIsMutable();
              stampedPlayers_.addAll(other.stampedPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayersBuilder_.isEmpty()) {
              stampedPlayersBuilder_.dispose();
              stampedPlayersBuilder_ = null;
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              stampedPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStampedPlayersFieldBuilder() : null;
            } else {
              stampedPlayersBuilder_.addAllMessages(other.stampedPlayers_);
            }
          }
        }
        if (playerCardChallengesBuilder_ == null) {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallenges_.isEmpty()) {
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerCardChallengesIsMutable();
              playerCardChallenges_.addAll(other.playerCardChallenges_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallengesBuilder_.isEmpty()) {
              playerCardChallengesBuilder_.dispose();
              playerCardChallengesBuilder_ = null;
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerCardChallengesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCardChallengesFieldBuilder() : null;
            } else {
              playerCardChallengesBuilder_.addAllMessages(other.playerCardChallenges_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_ =
        java.util.Collections.emptyList();
      private void ensureTeamVotesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teamVotes_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess>(teamVotes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> teamVotesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
        if (teamVotesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamVotes_);
        } else {
          return teamVotesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public int getTeamVotesCount() {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.size();
        } else {
          return teamVotesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);
        } else {
          return teamVotesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addAllTeamVotes(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess> values) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamVotes_);
          onChanged();
        } else {
          teamVotesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder clearTeamVotes() {
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamVotesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder removeTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.remove(index);
          onChanged();
        } else {
          teamVotesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder getTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
          int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);  } else {
          return teamVotesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
           getTeamVotesOrBuilderList() {
        if (teamVotesBuilder_ != null) {
          return teamVotesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamVotes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder() {
        return getTeamVotesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder> 
           getTeamVotesBuilderList() {
        return getTeamVotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
          getTeamVotesFieldBuilder() {
        if (teamVotesBuilder_ == null) {
          teamVotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuess.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder>(
                  teamVotes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teamVotes_ = null;
        }
        return teamVotesBuilder_;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_ =
        java.util.Collections.emptyList();
      private void ensureGenericSelectionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          genericSelections_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection>(genericSelections_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> genericSelectionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
        if (genericSelectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genericSelections_);
        } else {
          return genericSelectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public int getGenericSelectionsCount() {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.size();
        } else {
          return genericSelectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);
        } else {
          return genericSelectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addAllGenericSelections(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection> values) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, genericSelections_);
          onChanged();
        } else {
          genericSelectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder clearGenericSelections() {
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          genericSelectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder removeGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.remove(index);
          onChanged();
        } else {
          genericSelectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder getGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
          int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);  } else {
          return genericSelectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
           getGenericSelectionsOrBuilderList() {
        if (genericSelectionsBuilder_ != null) {
          return genericSelectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genericSelections_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder() {
        return getGenericSelectionsFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder> 
           getGenericSelectionsBuilderList() {
        return getGenericSelectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
          getGenericSelectionsFieldBuilder() {
        if (genericSelectionsBuilder_ == null) {
          genericSelectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelection.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder>(
                  genericSelections_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          genericSelections_ = null;
        }
        return genericSelectionsBuilder_;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_ =
        java.util.Collections.emptyList();
      private void ensureStampedPlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          stampedPlayers_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer>(stampedPlayers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder> stampedPlayersBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
        if (stampedPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        } else {
          return stampedPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public int getStampedPlayersCount() {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.size();
        } else {
          return stampedPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);
        } else {
          return stampedPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addAllStampedPlayers(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer> values) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stampedPlayers_);
          onChanged();
        } else {
          stampedPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder clearStampedPlayers() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          stampedPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder removeStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.remove(index);
          onChanged();
        } else {
          stampedPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder getStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
          int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);  } else {
          return stampedPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
           getStampedPlayersOrBuilderList() {
        if (stampedPlayersBuilder_ != null) {
          return stampedPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder() {
        return getStampedPlayersFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder> 
           getStampedPlayersBuilderList() {
        return getStampedPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
          getStampedPlayersFieldBuilder() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayer.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportStampedPlayerOrBuilder>(
                  stampedPlayers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          stampedPlayers_ = null;
        }
        return stampedPlayersBuilder_;
      }

      private java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardChallengesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          playerCardChallenges_ = new java.util.ArrayList<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge>(playerCardChallenges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> playerCardChallengesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
        if (playerCardChallengesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        } else {
          return playerCardChallengesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public int getPlayerCardChallengesCount() {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.size();
        } else {
          return playerCardChallengesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);
        } else {
          return playerCardChallengesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addAllPlayerCardChallenges(
          java.lang.Iterable<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge> values) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerCardChallenges_);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder clearPlayerCardChallenges() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerCardChallengesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder removePlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.remove(index);
          onChanged();
        } else {
          playerCardChallengesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder getPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
          int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);  } else {
          return playerCardChallengesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<? extends telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
           getPlayerCardChallengesOrBuilderList() {
        if (playerCardChallengesBuilder_ != null) {
          return playerCardChallengesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder() {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            index, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder> 
           getPlayerCardChallengesBuilderList() {
        return getPlayerCardChallengesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
          getPlayerCardChallengesFieldBuilder() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallengesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder>(
                  playerCardChallenges_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          playerCardChallenges_ = null;
        }
        return playerCardChallengesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVote)
    }

    static {
      defaultInstance = new CMsgDOTAPassportVote(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVote)
  }

  public interface CMsgPassportDataRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgPassportDataRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();
  }
  /**
   * Protobuf type {@code CMsgPassportDataRequest}
   */
  public static final class CMsgPassportDataRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgPassportDataRequest)
      CMsgPassportDataRequestOrBuilder {
    // Use CMsgPassportDataRequest.newBuilder() to construct.
    private CMsgPassportDataRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgPassportDataRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgPassportDataRequest defaultInstance;
    public static CMsgPassportDataRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgPassportDataRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgPassportDataRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgPassportDataRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgPassportDataRequest>() {
      public CMsgPassportDataRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgPassportDataRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPassportDataRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    private void initFields() {
      accountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPassportDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgPassportDataRequest)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataRequest_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPassportDataRequest)
    }

    static {
      defaultInstance = new CMsgPassportDataRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgPassportDataRequest)
  }

  public interface CMsgPassportDataResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgPassportDataResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 result = 2 [default = 2];</code>
     */
    boolean hasResult();
    /**
     * <code>optional uint32 result = 2 [default = 2];</code>
     */
    int getResult();

    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    boolean hasInternational();
    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getInternational();
    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getInternationalOrBuilder();

    /**
     * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
     */
    boolean hasEastQualifiersPredictEndTime();
    /**
     * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
     */
    int getEastQualifiersPredictEndTime();

    /**
     * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
     */
    boolean hasWestQualifiersPredictEndTime();
    /**
     * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
     */
    int getWestQualifiersPredictEndTime();

    /**
     * <code>optional uint32 allstar_match_end_time = 9;</code>
     */
    boolean hasAllstarMatchEndTime();
    /**
     * <code>optional uint32 allstar_match_end_time = 9;</code>
     */
    int getAllstarMatchEndTime();

    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    boolean hasLeagueGuesses();
    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote getLeagueGuesses();
    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder getLeagueGuessesOrBuilder();

    /**
     * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
     */
    boolean hasEastQualifiersWinnerTeamId();
    /**
     * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
     */
    int getEastQualifiersWinnerTeamId();

    /**
     * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
     */
    boolean hasEastQualifiersRunnerUpTeamId();
    /**
     * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
     */
    int getEastQualifiersRunnerUpTeamId();

    /**
     * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
     */
    boolean hasWestQualifiersWinnerTeamId();
    /**
     * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
     */
    int getWestQualifiersWinnerTeamId();

    /**
     * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
     */
    boolean hasWestQualifiersRunnerUpTeamId();
    /**
     * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
     */
    int getWestQualifiersRunnerUpTeamId();

    /**
     * <code>optional uint32 passports_bought = 14;</code>
     */
    boolean hasPassportsBought();
    /**
     * <code>optional uint32 passports_bought = 14;</code>
     */
    int getPassportsBought();

    /**
     * <code>optional uint32 original_purchaser_id = 15;</code>
     */
    boolean hasOriginalPurchaserId();
    /**
     * <code>optional uint32 original_purchaser_id = 15;</code>
     */
    int getOriginalPurchaserId();

    /**
     * <code>optional uint32 fantasy_team_count = 16;</code>
     */
    boolean hasFantasyTeamCount();
    /**
     * <code>optional uint32 fantasy_team_count = 16;</code>
     */
    int getFantasyTeamCount();

    /**
     * <code>optional uint32 fantasy_teamexpiration = 17;</code>
     */
    boolean hasFantasyTeamexpiration();
    /**
     * <code>optional uint32 fantasy_teamexpiration = 17;</code>
     */
    int getFantasyTeamexpiration();

    /**
     * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
     */
    boolean hasFantasyTeamsWillLockAt();
    /**
     * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
     */
    int getFantasyTeamsWillLockAt();
  }
  /**
   * Protobuf type {@code CMsgPassportDataResponse}
   */
  public static final class CMsgPassportDataResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgPassportDataResponse)
      CMsgPassportDataResponseOrBuilder {
    // Use CMsgPassportDataResponse.newBuilder() to construct.
    private CMsgPassportDataResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgPassportDataResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgPassportDataResponse defaultInstance;
    public static CMsgPassportDataResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgPassportDataResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgPassportDataResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              result_ = input.readUInt32();
              break;
            }
            case 42: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = international_.toBuilder();
              }
              international_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(international_);
                international_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 50: {
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = leagueGuesses_.toBuilder();
              }
              leagueGuesses_ = input.readMessage(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leagueGuesses_);
                leagueGuesses_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              eastQualifiersPredictEndTime_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              westQualifiersPredictEndTime_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              allstarMatchEndTime_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              eastQualifiersWinnerTeamId_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              eastQualifiersRunnerUpTeamId_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              westQualifiersWinnerTeamId_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              westQualifiersRunnerUpTeamId_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              passportsBought_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              originalPurchaserId_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              fantasyTeamCount_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              fantasyTeamexpiration_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00008000;
              fantasyTeamsWillLockAt_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgPassportDataResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgPassportDataResponse>() {
      public CMsgPassportDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgPassportDataResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPassportDataResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <code>optional uint32 result = 2 [default = 2];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 result = 2 [default = 2];</code>
     */
    public int getResult() {
      return result_;
    }

    public static final int INTERNATIONAL_FIELD_NUMBER = 5;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament international_;
    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    public boolean hasInternational() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getInternational() {
      return international_;
    }
    /**
     * <code>optional .CMsgDOTATournament international = 5;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getInternationalOrBuilder() {
      return international_;
    }

    public static final int EAST_QUALIFIERS_PREDICT_END_TIME_FIELD_NUMBER = 7;
    private int eastQualifiersPredictEndTime_;
    /**
     * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
     */
    public boolean hasEastQualifiersPredictEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
     */
    public int getEastQualifiersPredictEndTime() {
      return eastQualifiersPredictEndTime_;
    }

    public static final int WEST_QUALIFIERS_PREDICT_END_TIME_FIELD_NUMBER = 8;
    private int westQualifiersPredictEndTime_;
    /**
     * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
     */
    public boolean hasWestQualifiersPredictEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
     */
    public int getWestQualifiersPredictEndTime() {
      return westQualifiersPredictEndTime_;
    }

    public static final int ALLSTAR_MATCH_END_TIME_FIELD_NUMBER = 9;
    private int allstarMatchEndTime_;
    /**
     * <code>optional uint32 allstar_match_end_time = 9;</code>
     */
    public boolean hasAllstarMatchEndTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 allstar_match_end_time = 9;</code>
     */
    public int getAllstarMatchEndTime() {
      return allstarMatchEndTime_;
    }

    public static final int LEAGUE_GUESSES_FIELD_NUMBER = 6;
    private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote leagueGuesses_;
    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    public boolean hasLeagueGuesses() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote getLeagueGuesses() {
      return leagueGuesses_;
    }
    /**
     * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
     */
    public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder getLeagueGuessesOrBuilder() {
      return leagueGuesses_;
    }

    public static final int EAST_QUALIFIERS_WINNER_TEAM_ID_FIELD_NUMBER = 10;
    private int eastQualifiersWinnerTeamId_;
    /**
     * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
     */
    public boolean hasEastQualifiersWinnerTeamId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
     */
    public int getEastQualifiersWinnerTeamId() {
      return eastQualifiersWinnerTeamId_;
    }

    public static final int EAST_QUALIFIERS_RUNNER_UP_TEAM_ID_FIELD_NUMBER = 11;
    private int eastQualifiersRunnerUpTeamId_;
    /**
     * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
     */
    public boolean hasEastQualifiersRunnerUpTeamId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
     */
    public int getEastQualifiersRunnerUpTeamId() {
      return eastQualifiersRunnerUpTeamId_;
    }

    public static final int WEST_QUALIFIERS_WINNER_TEAM_ID_FIELD_NUMBER = 12;
    private int westQualifiersWinnerTeamId_;
    /**
     * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
     */
    public boolean hasWestQualifiersWinnerTeamId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
     */
    public int getWestQualifiersWinnerTeamId() {
      return westQualifiersWinnerTeamId_;
    }

    public static final int WEST_QUALIFIERS_RUNNER_UP_TEAM_ID_FIELD_NUMBER = 13;
    private int westQualifiersRunnerUpTeamId_;
    /**
     * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
     */
    public boolean hasWestQualifiersRunnerUpTeamId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
     */
    public int getWestQualifiersRunnerUpTeamId() {
      return westQualifiersRunnerUpTeamId_;
    }

    public static final int PASSPORTS_BOUGHT_FIELD_NUMBER = 14;
    private int passportsBought_;
    /**
     * <code>optional uint32 passports_bought = 14;</code>
     */
    public boolean hasPassportsBought() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 passports_bought = 14;</code>
     */
    public int getPassportsBought() {
      return passportsBought_;
    }

    public static final int ORIGINAL_PURCHASER_ID_FIELD_NUMBER = 15;
    private int originalPurchaserId_;
    /**
     * <code>optional uint32 original_purchaser_id = 15;</code>
     */
    public boolean hasOriginalPurchaserId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 original_purchaser_id = 15;</code>
     */
    public int getOriginalPurchaserId() {
      return originalPurchaserId_;
    }

    public static final int FANTASY_TEAM_COUNT_FIELD_NUMBER = 16;
    private int fantasyTeamCount_;
    /**
     * <code>optional uint32 fantasy_team_count = 16;</code>
     */
    public boolean hasFantasyTeamCount() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 fantasy_team_count = 16;</code>
     */
    public int getFantasyTeamCount() {
      return fantasyTeamCount_;
    }

    public static final int FANTASY_TEAMEXPIRATION_FIELD_NUMBER = 17;
    private int fantasyTeamexpiration_;
    /**
     * <code>optional uint32 fantasy_teamexpiration = 17;</code>
     */
    public boolean hasFantasyTeamexpiration() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 fantasy_teamexpiration = 17;</code>
     */
    public int getFantasyTeamexpiration() {
      return fantasyTeamexpiration_;
    }

    public static final int FANTASY_TEAMS_WILL_LOCK_AT_FIELD_NUMBER = 18;
    private int fantasyTeamsWillLockAt_;
    /**
     * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
     */
    public boolean hasFantasyTeamsWillLockAt() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
     */
    public int getFantasyTeamsWillLockAt() {
      return fantasyTeamsWillLockAt_;
    }

    private void initFields() {
      accountId_ = 0;
      result_ = 2;
      international_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
      eastQualifiersPredictEndTime_ = 0;
      westQualifiersPredictEndTime_ = 0;
      allstarMatchEndTime_ = 0;
      leagueGuesses_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance();
      eastQualifiersWinnerTeamId_ = 0;
      eastQualifiersRunnerUpTeamId_ = 0;
      westQualifiersWinnerTeamId_ = 0;
      westQualifiersRunnerUpTeamId_ = 0;
      passportsBought_ = 0;
      originalPurchaserId_ = 0;
      fantasyTeamCount_ = 0;
      fantasyTeamexpiration_ = 0;
      fantasyTeamsWillLockAt_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, result_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, international_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(6, leagueGuesses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, eastQualifiersPredictEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(8, westQualifiersPredictEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(9, allstarMatchEndTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(10, eastQualifiersWinnerTeamId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(11, eastQualifiersRunnerUpTeamId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(12, westQualifiersWinnerTeamId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(13, westQualifiersRunnerUpTeamId_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(14, passportsBought_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(15, originalPurchaserId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(16, fantasyTeamCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(17, fantasyTeamexpiration_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(18, fantasyTeamsWillLockAt_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, result_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, international_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, leagueGuesses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, eastQualifiersPredictEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, westQualifiersPredictEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, allstarMatchEndTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, eastQualifiersWinnerTeamId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, eastQualifiersRunnerUpTeamId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, westQualifiersWinnerTeamId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, westQualifiersRunnerUpTeamId_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, passportsBought_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, originalPurchaserId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, fantasyTeamCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, fantasyTeamexpiration_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, fantasyTeamsWillLockAt_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPassportDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgPassportDataResponse)
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.class, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.Builder.class);
      }

      // Construct using telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInternationalFieldBuilder();
          getLeagueGuessesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 2;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (internationalBuilder_ == null) {
          international_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
        } else {
          internationalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        eastQualifiersPredictEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        westQualifiersPredictEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        allstarMatchEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (leagueGuessesBuilder_ == null) {
          leagueGuesses_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance();
        } else {
          leagueGuessesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        eastQualifiersWinnerTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        eastQualifiersRunnerUpTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        westQualifiersWinnerTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        westQualifiersRunnerUpTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        passportsBought_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        originalPurchaserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fantasyTeamCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        fantasyTeamexpiration_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        fantasyTeamsWillLockAt_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.internal_static_CMsgPassportDataResponse_descriptor;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse getDefaultInstanceForType() {
        return telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.getDefaultInstance();
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse build() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse buildPartial() {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse result = new telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (internationalBuilder_ == null) {
          result.international_ = international_;
        } else {
          result.international_ = internationalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eastQualifiersPredictEndTime_ = eastQualifiersPredictEndTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.westQualifiersPredictEndTime_ = westQualifiersPredictEndTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.allstarMatchEndTime_ = allstarMatchEndTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (leagueGuessesBuilder_ == null) {
          result.leagueGuesses_ = leagueGuesses_;
        } else {
          result.leagueGuesses_ = leagueGuessesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.eastQualifiersWinnerTeamId_ = eastQualifiersWinnerTeamId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.eastQualifiersRunnerUpTeamId_ = eastQualifiersRunnerUpTeamId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.westQualifiersWinnerTeamId_ = westQualifiersWinnerTeamId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.westQualifiersRunnerUpTeamId_ = westQualifiersRunnerUpTeamId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.passportsBought_ = passportsBought_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.originalPurchaserId_ = originalPurchaserId_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.fantasyTeamCount_ = fantasyTeamCount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fantasyTeamexpiration_ = fantasyTeamexpiration_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fantasyTeamsWillLockAt_ = fantasyTeamsWillLockAt_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse) {
          return mergeFrom((telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse other) {
        if (other == telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInternational()) {
          mergeInternational(other.getInternational());
        }
        if (other.hasEastQualifiersPredictEndTime()) {
          setEastQualifiersPredictEndTime(other.getEastQualifiersPredictEndTime());
        }
        if (other.hasWestQualifiersPredictEndTime()) {
          setWestQualifiersPredictEndTime(other.getWestQualifiersPredictEndTime());
        }
        if (other.hasAllstarMatchEndTime()) {
          setAllstarMatchEndTime(other.getAllstarMatchEndTime());
        }
        if (other.hasLeagueGuesses()) {
          mergeLeagueGuesses(other.getLeagueGuesses());
        }
        if (other.hasEastQualifiersWinnerTeamId()) {
          setEastQualifiersWinnerTeamId(other.getEastQualifiersWinnerTeamId());
        }
        if (other.hasEastQualifiersRunnerUpTeamId()) {
          setEastQualifiersRunnerUpTeamId(other.getEastQualifiersRunnerUpTeamId());
        }
        if (other.hasWestQualifiersWinnerTeamId()) {
          setWestQualifiersWinnerTeamId(other.getWestQualifiersWinnerTeamId());
        }
        if (other.hasWestQualifiersRunnerUpTeamId()) {
          setWestQualifiersRunnerUpTeamId(other.getWestQualifiersRunnerUpTeamId());
        }
        if (other.hasPassportsBought()) {
          setPassportsBought(other.getPassportsBought());
        }
        if (other.hasOriginalPurchaserId()) {
          setOriginalPurchaserId(other.getOriginalPurchaserId());
        }
        if (other.hasFantasyTeamCount()) {
          setFantasyTeamCount(other.getFantasyTeamCount());
        }
        if (other.hasFantasyTeamexpiration()) {
          setFantasyTeamexpiration(other.getFantasyTeamexpiration());
        }
        if (other.hasFantasyTeamsWillLockAt()) {
          setFantasyTeamsWillLockAt(other.getFantasyTeamsWillLockAt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgPassportDataResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int result_ = 2;
      /**
       * <code>optional uint32 result = 2 [default = 2];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 result = 2 [default = 2];</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional uint32 result = 2 [default = 2];</code>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 result = 2 [default = 2];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 2;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament international_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder> internationalBuilder_;
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public boolean hasInternational() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament getInternational() {
        if (internationalBuilder_ == null) {
          return international_;
        } else {
          return internationalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public Builder setInternational(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament value) {
        if (internationalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          international_ = value;
          onChanged();
        } else {
          internationalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public Builder setInternational(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder builderForValue) {
        if (internationalBuilder_ == null) {
          international_ = builderForValue.build();
          onChanged();
        } else {
          internationalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public Builder mergeInternational(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament value) {
        if (internationalBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              international_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance()) {
            international_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.newBuilder(international_).mergeFrom(value).buildPartial();
          } else {
            international_ = value;
          }
          onChanged();
        } else {
          internationalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public Builder clearInternational() {
        if (internationalBuilder_ == null) {
          international_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.getDefaultInstance();
          onChanged();
        } else {
          internationalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder getInternationalBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInternationalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder getInternationalOrBuilder() {
        if (internationalBuilder_ != null) {
          return internationalBuilder_.getMessageOrBuilder();
        } else {
          return international_;
        }
      }
      /**
       * <code>optional .CMsgDOTATournament international = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder> 
          getInternationalFieldBuilder() {
        if (internationalBuilder_ == null) {
          internationalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournament.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTATournamentOrBuilder>(
                  getInternational(),
                  getParentForChildren(),
                  isClean());
          international_ = null;
        }
        return internationalBuilder_;
      }

      private int eastQualifiersPredictEndTime_ ;
      /**
       * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
       */
      public boolean hasEastQualifiersPredictEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
       */
      public int getEastQualifiersPredictEndTime() {
        return eastQualifiersPredictEndTime_;
      }
      /**
       * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
       */
      public Builder setEastQualifiersPredictEndTime(int value) {
        bitField0_ |= 0x00000008;
        eastQualifiersPredictEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 east_qualifiers_predict_end_time = 7;</code>
       */
      public Builder clearEastQualifiersPredictEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eastQualifiersPredictEndTime_ = 0;
        onChanged();
        return this;
      }

      private int westQualifiersPredictEndTime_ ;
      /**
       * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
       */
      public boolean hasWestQualifiersPredictEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
       */
      public int getWestQualifiersPredictEndTime() {
        return westQualifiersPredictEndTime_;
      }
      /**
       * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
       */
      public Builder setWestQualifiersPredictEndTime(int value) {
        bitField0_ |= 0x00000010;
        westQualifiersPredictEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 west_qualifiers_predict_end_time = 8;</code>
       */
      public Builder clearWestQualifiersPredictEndTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        westQualifiersPredictEndTime_ = 0;
        onChanged();
        return this;
      }

      private int allstarMatchEndTime_ ;
      /**
       * <code>optional uint32 allstar_match_end_time = 9;</code>
       */
      public boolean hasAllstarMatchEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 allstar_match_end_time = 9;</code>
       */
      public int getAllstarMatchEndTime() {
        return allstarMatchEndTime_;
      }
      /**
       * <code>optional uint32 allstar_match_end_time = 9;</code>
       */
      public Builder setAllstarMatchEndTime(int value) {
        bitField0_ |= 0x00000020;
        allstarMatchEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 allstar_match_end_time = 9;</code>
       */
      public Builder clearAllstarMatchEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        allstarMatchEndTime_ = 0;
        onChanged();
        return this;
      }

      private telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote leagueGuesses_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder> leagueGuessesBuilder_;
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public boolean hasLeagueGuesses() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote getLeagueGuesses() {
        if (leagueGuessesBuilder_ == null) {
          return leagueGuesses_;
        } else {
          return leagueGuessesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public Builder setLeagueGuesses(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote value) {
        if (leagueGuessesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leagueGuesses_ = value;
          onChanged();
        } else {
          leagueGuessesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public Builder setLeagueGuesses(
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder builderForValue) {
        if (leagueGuessesBuilder_ == null) {
          leagueGuesses_ = builderForValue.build();
          onChanged();
        } else {
          leagueGuessesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public Builder mergeLeagueGuesses(telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote value) {
        if (leagueGuessesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              leagueGuesses_ != telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance()) {
            leagueGuesses_ =
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.newBuilder(leagueGuesses_).mergeFrom(value).buildPartial();
          } else {
            leagueGuesses_ = value;
          }
          onChanged();
        } else {
          leagueGuessesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public Builder clearLeagueGuesses() {
        if (leagueGuessesBuilder_ == null) {
          leagueGuesses_ = telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.getDefaultInstance();
          onChanged();
        } else {
          leagueGuessesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder getLeagueGuessesBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getLeagueGuessesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      public telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder getLeagueGuessesOrBuilder() {
        if (leagueGuessesBuilder_ != null) {
          return leagueGuessesBuilder_.getMessageOrBuilder();
        } else {
          return leagueGuesses_;
        }
      }
      /**
       * <code>optional .CMsgDOTAPassportVote league_guesses = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder> 
          getLeagueGuessesFieldBuilder() {
        if (leagueGuessesBuilder_ == null) {
          leagueGuessesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVote.Builder, telekinesis.message.proto.generated.dota.DotaGC_Fantasy.CMsgDOTAPassportVoteOrBuilder>(
                  getLeagueGuesses(),
                  getParentForChildren(),
                  isClean());
          leagueGuesses_ = null;
        }
        return leagueGuessesBuilder_;
      }

      private int eastQualifiersWinnerTeamId_ ;
      /**
       * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
       */
      public boolean hasEastQualifiersWinnerTeamId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
       */
      public int getEastQualifiersWinnerTeamId() {
        return eastQualifiersWinnerTeamId_;
      }
      /**
       * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
       */
      public Builder setEastQualifiersWinnerTeamId(int value) {
        bitField0_ |= 0x00000080;
        eastQualifiersWinnerTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 east_qualifiers_winner_team_id = 10;</code>
       */
      public Builder clearEastQualifiersWinnerTeamId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eastQualifiersWinnerTeamId_ = 0;
        onChanged();
        return this;
      }

      private int eastQualifiersRunnerUpTeamId_ ;
      /**
       * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
       */
      public boolean hasEastQualifiersRunnerUpTeamId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
       */
      public int getEastQualifiersRunnerUpTeamId() {
        return eastQualifiersRunnerUpTeamId_;
      }
      /**
       * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
       */
      public Builder setEastQualifiersRunnerUpTeamId(int value) {
        bitField0_ |= 0x00000100;
        eastQualifiersRunnerUpTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 east_qualifiers_runner_up_team_id = 11;</code>
       */
      public Builder clearEastQualifiersRunnerUpTeamId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        eastQualifiersRunnerUpTeamId_ = 0;
        onChanged();
        return this;
      }

      private int westQualifiersWinnerTeamId_ ;
      /**
       * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
       */
      public boolean hasWestQualifiersWinnerTeamId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
       */
      public int getWestQualifiersWinnerTeamId() {
        return westQualifiersWinnerTeamId_;
      }
      /**
       * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
       */
      public Builder setWestQualifiersWinnerTeamId(int value) {
        bitField0_ |= 0x00000200;
        westQualifiersWinnerTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 west_qualifiers_winner_team_id = 12;</code>
       */
      public Builder clearWestQualifiersWinnerTeamId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        westQualifiersWinnerTeamId_ = 0;
        onChanged();
        return this;
      }

      private int westQualifiersRunnerUpTeamId_ ;
      /**
       * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
       */
      public boolean hasWestQualifiersRunnerUpTeamId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
       */
      public int getWestQualifiersRunnerUpTeamId() {
        return westQualifiersRunnerUpTeamId_;
      }
      /**
       * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
       */
      public Builder setWestQualifiersRunnerUpTeamId(int value) {
        bitField0_ |= 0x00000400;
        westQualifiersRunnerUpTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 west_qualifiers_runner_up_team_id = 13;</code>
       */
      public Builder clearWestQualifiersRunnerUpTeamId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        westQualifiersRunnerUpTeamId_ = 0;
        onChanged();
        return this;
      }

      private int passportsBought_ ;
      /**
       * <code>optional uint32 passports_bought = 14;</code>
       */
      public boolean hasPassportsBought() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 passports_bought = 14;</code>
       */
      public int getPassportsBought() {
        return passportsBought_;
      }
      /**
       * <code>optional uint32 passports_bought = 14;</code>
       */
      public Builder setPassportsBought(int value) {
        bitField0_ |= 0x00000800;
        passportsBought_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 passports_bought = 14;</code>
       */
      public Builder clearPassportsBought() {
        bitField0_ = (bitField0_ & ~0x00000800);
        passportsBought_ = 0;
        onChanged();
        return this;
      }

      private int originalPurchaserId_ ;
      /**
       * <code>optional uint32 original_purchaser_id = 15;</code>
       */
      public boolean hasOriginalPurchaserId() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 original_purchaser_id = 15;</code>
       */
      public int getOriginalPurchaserId() {
        return originalPurchaserId_;
      }
      /**
       * <code>optional uint32 original_purchaser_id = 15;</code>
       */
      public Builder setOriginalPurchaserId(int value) {
        bitField0_ |= 0x00001000;
        originalPurchaserId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 original_purchaser_id = 15;</code>
       */
      public Builder clearOriginalPurchaserId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        originalPurchaserId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamCount_ ;
      /**
       * <code>optional uint32 fantasy_team_count = 16;</code>
       */
      public boolean hasFantasyTeamCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 fantasy_team_count = 16;</code>
       */
      public int getFantasyTeamCount() {
        return fantasyTeamCount_;
      }
      /**
       * <code>optional uint32 fantasy_team_count = 16;</code>
       */
      public Builder setFantasyTeamCount(int value) {
        bitField0_ |= 0x00002000;
        fantasyTeamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_count = 16;</code>
       */
      public Builder clearFantasyTeamCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fantasyTeamCount_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamexpiration_ ;
      /**
       * <code>optional uint32 fantasy_teamexpiration = 17;</code>
       */
      public boolean hasFantasyTeamexpiration() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 fantasy_teamexpiration = 17;</code>
       */
      public int getFantasyTeamexpiration() {
        return fantasyTeamexpiration_;
      }
      /**
       * <code>optional uint32 fantasy_teamexpiration = 17;</code>
       */
      public Builder setFantasyTeamexpiration(int value) {
        bitField0_ |= 0x00004000;
        fantasyTeamexpiration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_teamexpiration = 17;</code>
       */
      public Builder clearFantasyTeamexpiration() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fantasyTeamexpiration_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamsWillLockAt_ ;
      /**
       * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
       */
      public boolean hasFantasyTeamsWillLockAt() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
       */
      public int getFantasyTeamsWillLockAt() {
        return fantasyTeamsWillLockAt_;
      }
      /**
       * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
       */
      public Builder setFantasyTeamsWillLockAt(int value) {
        bitField0_ |= 0x00008000;
        fantasyTeamsWillLockAt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_teams_will_lock_at = 18;</code>
       */
      public Builder clearFantasyTeamsWillLockAt() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fantasyTeamsWillLockAt_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPassportDataResponse)
    }

    static {
      defaultInstance = new CMsgPassportDataResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgPassportDataResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgFantasyLeagueScoring_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Team_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Game_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Game_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournamentRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournamentResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAClearTournamentGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVote_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPassportDataRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPassportDataRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPassportDataResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPassportDataResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$dota_gcmessages_client_fantasy.proto\032\034" +
      "dota_gcmessages_common.proto\"\232\003\n\020CMsgGCP" +
      "layerInfo\0222\n\014player_infos\030\001 \003(\0132\034.CMsgGC" +
      "PlayerInfo.PlayerInfo\0229\n\014leaderboards\030\002 " +
      "\003(\0132#.CMsgGCPlayerInfo.RegionLeaderboard" +
      "\032\332\001\n\nPlayerInfo\022\022\n\naccount_id\030\001 \001(\r\022\014\n\004n" +
      "ame\030\002 \001(\t\022\024\n\014country_code\030\003 \001(\t\022\024\n\014fanta" +
      "sy_role\030\004 \001(\r\022\017\n\007team_id\030\005 \001(\r\022\021\n\tteam_n" +
      "ame\030\006 \001(\t\022\020\n\010team_tag\030\007 \001(\t\022\017\n\007sponsor\030\010" +
      " \001(\t\022\021\n\tis_locked\030\t \001(\010\022\016\n\006is_pro\030\n \001(\010\022",
      "\024\n\014locked_until\030\013 \001(\r\032:\n\021RegionLeaderboa" +
      "rd\022\020\n\010division\030\001 \001(\r\022\023\n\013account_ids\030\002 \003(" +
      "\r\"\256\001\n\"CMsgDOTACreateFantasyLeagueRequest" +
      "\022\023\n\013league_name\030\001 \001(\t\022\023\n\013league_logo\030\002 \001" +
      "(\004\022J\n\016selection_mode\030\003 \001(\0162\027.Fantasy_Sel" +
      "ection_Mode:\031FANTASY_SELECTION_INVALID\022\022" +
      "\n\nteam_count\030\004 \001(\r\"\363\001\n#CMsgDOTACreateFan" +
      "tasyLeagueResponse\022E\n\006result\030\001 \001(\0162,.CMs" +
      "gDOTACreateFantasyLeagueResponse.EResult" +
      ":\007SUCCESS\"\204\001\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ER",
      "ROR_UNSPECIFIED\020\001\022\032\n\026ERROR_TOO_MANY_LEAG" +
      "UES\020\002\022\034\n\030ERROR_INVALID_TEAM_COUNT\020\003\022\033\n\027E" +
      "RROR_CREATION_DISABLED\020\004\"\237\002\n\030CMsgFantasy" +
      "LeagueScoring\022\r\n\005level\030\001 \001(\002\022\r\n\005kills\030\002 " +
      "\001(\002\022\016\n\006deaths\030\003 \001(\002\022\017\n\007assists\030\004 \001(\002\022\021\n\t" +
      "last_hits\030\005 \001(\002\022\016\n\006denies\030\006 \001(\002\022\013\n\003gpm\030\007" +
      " \001(\002\022\014\n\004xppm\030\010 \001(\002\022\r\n\005stuns\030\t \001(\002\022\017\n\007hea" +
      "ling\030\n \001(\002\022\023\n\013tower_kills\030\013 \001(\002\022\024\n\014rosha" +
      "n_kills\030\014 \001(\002\022\032\n\022multiplier_premium\030\r \001(" +
      "\002\022\037\n\027multiplier_professional\030\016 \001(\002\"\316\005\n\031C",
      "MsgDOTAFantasyLeagueInfo\022\031\n\021fantasy_leag" +
      "ue_id\030\001 \001(\r\022\037\n\027commissioner_account_id\030\002" +
      " \001(\r\022\033\n\023fantasy_league_name\030\003 \001(\t\022J\n\016sel" +
      "ection_mode\030\004 \001(\0162\027.Fantasy_Selection_Mo" +
      "de:\031FANTASY_SELECTION_INVALID\022\022\n\nteam_co" +
      "unt\030\005 \001(\r\022\014\n\004logo\030\006 \001(\004\022*\n\007scoring\030\007 \001(\013" +
      "2\031.CMsgFantasyLeagueScoring\022\022\n\ndraft_tim" +
      "e\030\014 \001(\r\022\027\n\017draft_pick_time\030\r \001(\r\022\024\n\014seas" +
      "on_start\030\017 \001(\r\022\025\n\rseason_length\030\020 \001(\r\022\022\n" +
      "\nveto_votes\030\021 \001(\r\022\024\n\014acquisitions\030\022 \001(\r\022",
      "\016\n\006slot_1\030\023 \001(\r\022\016\n\006slot_2\030\024 \001(\r\022\016\n\006slot_" +
      "3\030\025 \001(\r\022\016\n\006slot_4\030\026 \001(\r\022\016\n\006slot_5\030\027 \001(\r\022" +
      "\023\n\013bench_slots\030\030 \001(\r\0228\n\nowner_info\030\031 \003(\013" +
      "2$.CMsgDOTAFantasyLeagueInfo.OwnerInfo\022\017" +
      "\n\007players\030\032 \003(\r\022\021\n\ttime_zone\030\033 \001(\r\022\016\n\006se" +
      "ason\030\034 \001(\r\022\020\n\010password\030\035 \001(\t\032U\n\tOwnerInf" +
      "o\022\030\n\020owner_account_id\030\001 \001(\r\022\023\n\013left_leag" +
      "ue\030\002 \001(\010\022\031\n\021player_account_id\030\003 \003(\r\"p\n$C" +
      "MsgDOTAFantasyLeagueEditInfoRequest\022\031\n\021f" +
      "antasy_league_id\030\001 \001(\r\022-\n\tedit_info\030\002 \001(",
      "\0132\032.CMsgDOTAFantasyLeagueInfo\"\270\001\n%CMsgDO" +
      "TAFantasyLeagueEditInfoResponse\022G\n\006resul" +
      "t\030\001 \001(\0162..CMsgDOTAFantasyLeagueEditInfoR" +
      "esponse.EResult:\007SUCCESS\"F\n\007EResult\022\013\n\007S" +
      "UCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR" +
      "_NO_PERMISSION\020\002\"O\n CMsgDOTAFantasyLeagu" +
      "eFindRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022" +
      "\020\n\010password\030\002 \001(\t\"\307\002\n!CMsgDOTAFantasyLea" +
      "gueFindResponse\022C\n\006result\030\001 \001(\0162*.CMsgDO" +
      "TAFantasyLeagueFindResponse.EResult:\007SUC",
      "CESS\022\033\n\023fantasy_league_name\030\002 \001(\t\022\031\n\021com" +
      "missioner_name\030\003 \001(\t\"\244\001\n\007EResult\022\013\n\007SUCC" +
      "ESS\020\000\022\032\n\026ERROR_LEAGUE_NOT_FOUND\020\001\022\026\n\022ERR" +
      "OR_BAD_PASSWORD\020\002\022\025\n\021ERROR_UNSPECIFIED\020\003" +
      "\022\016\n\nERROR_FULL\020\004\022\030\n\024ERROR_ALREADY_MEMBER" +
      "\020\005\022\027\n\023ERROR_LEAGUE_LOCKED\020\006\"=\n CMsgDOTAF" +
      "antasyLeagueInfoRequest\022\031\n\021fantasy_leagu" +
      "e_id\030\001 \001(\r\"\260\001\n!CMsgDOTAFantasyLeagueInfo" +
      "Response\022C\n\006result\030\001 \001(\0162*.CMsgDOTAFanta" +
      "syLeagueInfoResponse.EResult:\007SUCCESS\"F\n",
      "\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFI" +
      "ED\020\001\022\027\n\023ERROR_BAD_LEAGUE_ID\020\002\"A\n$CMsgDOT" +
      "AFantasyLeagueMatchupsRequest\022\031\n\021fantasy" +
      "_league_id\030\001 \001(\r\"\232\004\n%CMsgDOTAFantasyLeag" +
      "ueMatchupsResponse\022G\n\006result\030\001 \001(\0162..CMs" +
      "gDOTAFantasyLeagueMatchupsResponse.EResu" +
      "lt:\007SUCCESS\022\031\n\021fantasy_league_id\030\002 \001(\r\022N" +
      "\n\017weekly_matchups\030\003 \003(\01325.CMsgDOTAFantas" +
      "yLeagueMatchupsResponse.WeeklyMatchups\032c" +
      "\n\007Matchup\022\032\n\022owner_account_id_1\030\001 \001(\r\022\032\n",
      "\022owner_account_id_2\030\002 \001(\r\022\017\n\007score_1\030\003 \001" +
      "(\002\022\017\n\007score_2\030\004 \001(\002\032w\n\016WeeklyMatchups\022?\n" +
      "\007matchup\030\001 \003(\0132..CMsgDOTAFantasyLeagueMa" +
      "tchupsResponse.Matchup\022\022\n\nstart_time\030\002 \001" +
      "(\r\022\020\n\010end_time\030\003 \001(\r\"_\n\007EResult\022\013\n\007SUCCE" +
      "SS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_BAD" +
      "_LEAGUE_ID\020\002\022\027\n\023ERROR_NO_PERMISSION\020\003\"u\n" +
      "\036CMsgDOTAEditFantasyTeamRequest\022\031\n\021fanta" +
      "sy_league_id\030\001 \001(\r\022\022\n\nteam_index\030\002 \001(\r\022\021" +
      "\n\tteam_name\030\003 \001(\t\022\021\n\tteam_logo\030\004 \001(\004\"\350\001\n",
      "\037CMsgDOTAEditFantasyTeamResponse\022A\n\006resu" +
      "lt\030\001 \001(\0162(.CMsgDOTAEditFantasyTeamRespon" +
      "se.EResult:\007SUCCESS\"\201\001\n\007EResult\022\013\n\007SUCCE" +
      "SS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\033\n\027ERROR_INV" +
      "ALID_TEAM_INFO\020\002\022\034\n\030ERROR_NAME_ALREADY_T" +
      "AKEN\020\003\022\027\n\023ERROR_NO_PERMISSION\020\004\"L\n/CMsgD" +
      "OTAFantasyTeamInfoRequestByFantasyLeague" +
      "ID\022\031\n\021fantasy_league_id\030\001 \001(\r\"J\n.CMsgDOT" +
      "AFantasyTeamInfoRequestByOwnerAccountID\022" +
      "\030\n\020owner_account_id\030\001 \001(\r\"L\n\037CMsgDOTAFan",
      "tasyTeamInfoResponse\022)\n\007results\030\001 \003(\0132\030." +
      "CMsgDOTAFantasyTeamInfo\"\306\001\n\027CMsgDOTAFant" +
      "asyTeamInfo\022\031\n\021fantasy_league_id\030\001 \001(\r\022\030" +
      "\n\020owner_account_id\030\002 \001(\r\022\032\n\022fantasy_team" +
      "_index\030\003 \001(\r\022\021\n\tteam_name\030\004 \001(\t\022\021\n\tteam_" +
      "logo\030\005 \001(\004\022\014\n\004wins\030\006 \001(\r\022\016\n\006losses\030\007 \001(\r" +
      "\022\026\n\016current_roster\030\010 \003(\r\"\326\001\n\037CMsgDOTAFan" +
      "tasyTeamScoreRequest\022\031\n\021fantasy_league_i" +
      "d\030\001 \001(\r\022\030\n\020owner_account_id\030\002 \001(\r\022\032\n\022fan" +
      "tasy_team_index\030\003 \001(\r\022\027\n\017filter_match_id",
      "\030\004 \001(\004\022\031\n\021filter_start_time\030\005 \001(\r\022\027\n\017fil" +
      "ter_end_time\030\006 \001(\r\022\025\n\rinclude_bench\030\007 \001(" +
      "\010\"\360\002\n CMsgDOTAFantasyTeamScoreResponse\022B" +
      "\n\006result\030\001 \001(\0162).CMsgDOTAFantasyTeamScor" +
      "eResponse.EResult:\007SUCCESS\022\032\n\022fantasy_te" +
      "am_score\030\002 \001(\002\022O\n\024fantasy_player_score\030\003" +
      " \003(\01321.CMsgDOTAFantasyTeamScoreResponse." +
      "CMsgPlayerScore\0324\n\017CMsgPlayerScore\022\022\n\nac" +
      "count_id\030\001 \001(\r\022\r\n\005score\030\002 \001(\002\"e\n\007EResult" +
      "\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023",
      "ERROR_NO_PERMISSION\020\002\022\035\n\031ERROR_OWNER_NOT" +
      "_IN_LEAGUE\020\003\"\317\001\n#CMsgDOTAFantasyTeamStan" +
      "dingsRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022" +
      "\r\n\005count\030\002 \001(\r\022\031\n\021filter_start_time\030\003 \001(" +
      "\r\022\027\n\017filter_end_time\030\004 \001(\r\022\027\n\017filter_mat" +
      "ch_id\030\005 \001(\004\022\031\n\021filter_last_match\030\006 \001(\010\022\026" +
      "\n\016filter_in_hall\030\007 \001(\010\"\201\004\n$CMsgDOTAFanta" +
      "syTeamStandingsResponse\022F\n\006result\030\001 \001(\0162" +
      "-.CMsgDOTAFantasyTeamStandingsResponse.E" +
      "Result:\007SUCCESS\022H\n\013team_scores\030\003 \003(\01323.C",
      "MsgDOTAFantasyTeamStandingsResponse.CMsg" +
      "TeamScore\032\376\001\n\rCMsgTeamScore\022\031\n\021fantasy_l" +
      "eague_id\030\001 \001(\r\022\030\n\020owner_account_id\030\002 \001(\r" +
      "\022\032\n\022fantasy_team_index\030\003 \001(\r\022\031\n\021fantasy_" +
      "team_logo\030\004 \001(\004\022\022\n\nowner_name\030\005 \001(\t\022\031\n\021f" +
      "antasy_team_name\030\006 \001(\t\022\r\n\005score\030\007 \001(\002\022\025\n" +
      "\rscore_against\030\010 \001(\002\022\014\n\004wins\030\t \001(\r\022\016\n\006lo" +
      "sses\030\n \001(\r\022\016\n\006streak\030\013 \001(\005\"F\n\007EResult\022\013\n" +
      "\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERR" +
      "OR_NO_PERMISSION\020\002\"\301\001\n!CMsgDOTAFantasyPl",
      "ayerScoreRequest\022\031\n\021fantasy_league_id\030\001 " +
      "\001(\r\022\031\n\021player_account_id\030\002 \001(\r\022\031\n\021filter" +
      "_start_time\030\003 \001(\r\022\027\n\017filter_end_time\030\004 \001" +
      "(\r\022\027\n\017filter_match_id\030\005 \001(\004\022\031\n\021filter_la" +
      "st_match\030\006 \001(\010\"\214\002\n\"CMsgDOTAFantasyPlayer" +
      "ScoreResponse\022D\n\006result\030\001 \001(\0162+.CMsgDOTA" +
      "FantasyPlayerScoreResponse.EResult:\007SUCC" +
      "ESS\022\031\n\021fantasy_league_id\030\002 \001(\r\022\031\n\021player" +
      "_account_id\030\003 \001(\r\022\023\n\013player_name\030\004 \001(\t\022\r" +
      "\n\005score\030\005 \001(\002\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n",
      "\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISS" +
      "ION\020\002\"\307\001\n%CMsgDOTAFantasyPlayerStandings" +
      "Request\022\031\n\021fantasy_league_id\030\001 \001(\r\022\r\n\005co" +
      "unt\030\002 \001(\r\022\014\n\004role\030\003 \001(\r\022\031\n\021filter_start_" +
      "time\030\004 \001(\r\022\027\n\017filter_end_time\030\005 \001(\r\022\027\n\017f" +
      "ilter_match_id\030\006 \001(\004\022\031\n\021filter_last_matc" +
      "h\030\007 \001(\010\"\205\003\n&CMsgDOTAFantasyPlayerStandin" +
      "gsResponse\022H\n\006result\030\001 \001(\0162/.CMsgDOTAFan" +
      "tasyPlayerStandingsResponse.EResult:\007SUC" +
      "CESS\022\031\n\021fantasy_league_id\030\002 \001(\r\022\014\n\004role\030",
      "\003 \001(\r\022N\n\rplayer_scores\030\004 \003(\01327.CMsgDOTAF" +
      "antasyPlayerStandingsResponse.CMsgPlayer" +
      "Score\032P\n\017CMsgPlayerScore\022\031\n\021player_accou" +
      "nt_id\030\001 \001(\r\022\023\n\013player_name\030\002 \001(\t\022\r\n\005scor" +
      "e\030\003 \001(\002\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR" +
      "_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"" +
      "\"\n CMsgDOTAFantasyPlayerInfoRequest\"C\n!C" +
      "MsgDOTAFantasyPlayerInfoResponse\022\036\n\003msg\030" +
      "\001 \001(\0132\021.CMsgGCPlayerInfo\"\237\001\n\"CMsgDOTAFan" +
      "tasyLeagueCreateRequest\022\021\n\tseason_id\030\001 \001",
      "(\r\022\033\n\023fantasy_league_name\030\002 \001(\t\022\020\n\010passw" +
      "ord\030\003 \001(\t\022\021\n\tteam_name\030\004 \001(\t\022\014\n\004logo\030\005 \001" +
      "(\004\022\026\n\016ticket_item_id\030\006 \001(\004\"\320\002\n#CMsgDOTAF" +
      "antasyLeagueCreateResponse\022E\n\006result\030\001 \001" +
      "(\0162,.CMsgDOTAFantasyLeagueCreateResponse" +
      ".EResult:\007SUCCESS\022\031\n\021fantasy_league_id\030\002" +
      " \001(\r\"\306\001\n\007EResult\022\013\n\007SUCCESS\020\000\022\027\n\023ERROR_N" +
      "O_PERMISSION\020\001\022\027\n\023ERROR_BAD_SEASON_ID\020\002\022" +
      "\031\n\025ERROR_BAD_LEAGUE_NAME\020\003\022\027\n\023ERROR_BAD_" +
      "TEAM_NAME\020\004\022\025\n\021ERROR_UNSPECIFIED\020\005\022\034\n\030ER",
      "ROR_FAILED_LOGO_UPLOAD\020\006\022\023\n\017ERROR_NO_TIC" +
      "KET\020\007\"\210\001\n CMsgDOTAFantasyTeamCreateReque" +
      "st\022\031\n\021fantasy_league_id\030\001 \001(\r\022\020\n\010passwor" +
      "d\030\002 \001(\t\022\021\n\tteam_name\030\003 \001(\t\022\014\n\004logo\030\004 \001(\004" +
      "\022\026\n\016ticket_item_id\030\005 \001(\004\"\220\003\n!CMsgDOTAFan" +
      "tasyTeamCreateResponse\022C\n\006result\030\001 \001(\0162*" +
      ".CMsgDOTAFantasyTeamCreateResponse.EResu" +
      "lt:\007SUCCESS\022\032\n\022fantasy_team_index\030\002 \001(\r\"" +
      "\211\002\n\007EResult\022\013\n\007SUCCESS\020\000\022\027\n\023ERROR_NO_PER" +
      "MISSION\020\001\022\034\n\030ERROR_FAILED_LOGO_UPLOAD\020\002\022",
      "\037\n\033ERROR_BAD_FANTASY_LEAGUE_ID\020\003\022\022\n\016ERRO" +
      "R_BAD_NAME\020\004\022\016\n\nERROR_FULL\020\005\022\030\n\024ERROR_AL" +
      "READY_MEMBER\020\006\022\026\n\022ERROR_BAD_PASSWORD\020\007\022\025" +
      "\n\021ERROR_UNSPECIFIED\020\010\022\023\n\017ERROR_NO_TICKET" +
      "\020\t\022\027\n\023ERROR_LEAGUE_LOCKED\020\n\"\331\001\n\'CMsgDOTA" +
      "FantasyLeagueEditInvitesRequest\022\031\n\021fanta" +
      "sy_league_id\030\001 \001(\r\022\020\n\010password\030\002 \001(\t\022L\n\r" +
      "invite_change\030\003 \003(\01325.CMsgDOTAFantasyLea" +
      "gueEditInvitesRequest.InviteChange\0323\n\014In" +
      "viteChange\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007invite",
      "d\030\002 \001(\010\"\245\001\n(CMsgDOTAFantasyLeagueEditInv" +
      "itesResponse\022J\n\006result\030\001 \001(\01621.CMsgDOTAF" +
      "antasyLeagueEditInvitesResponse.EResult:" +
      "\007SUCCESS\"-\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERRO" +
      "R_UNSPECIFIED\020\001\"D\n\'CMsgDOTAFantasyLeague" +
      "DraftStatusRequest\022\031\n\021fantasy_league_id\030" +
      "\001 \001(\r\"\306\001\n CMsgDOTAFantasyLeagueDraftStat" +
      "us\022\031\n\021fantasy_league_id\030\001 \001(\r\022\023\n\013draft_o" +
      "rder\030\002 \003(\r\022\024\n\014current_pick\030\003 \001(\r\022\026\n\016time" +
      "_remaining\030\004 \001(\r\022\026\n\016pending_resume\030\005 \001(\010",
      "\022\021\n\tcompleted\030\006 \001(\010\022\031\n\021available_players" +
      "\030\007 \003(\r\"s\n\'CMsgDOTAFantasyLeagueDraftPlay" +
      "erRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\022\n\n" +
      "team_index\030\002 \001(\r\022\031\n\021player_account_id\030\003 " +
      "\001(\r\"\202\003\n(CMsgDOTAFantasyLeagueDraftPlayer" +
      "Response\022J\n\006result\030\001 \001(\01621.CMsgDOTAFanta" +
      "syLeagueDraftPlayerResponse.EResult:\007SUC" +
      "CESS\"\211\002\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_U" +
      "NSPECIFIED\020\001\022 \n\034ERROR_INVALID_FANTASY_LE" +
      "AGUE\020\002\022%\n!ERROR_FANTASY_LEAGUE_NOT_DRAFT",
      "ING\020\003\022\035\n\031ERROR_OWNER_NOT_IN_LEAGUE\020\004\022\031\n\025" +
      "ERROR_NOT_OWNERS_TURN\020\005\022\030\n\024ERROR_PLAYER_" +
      "INVALID\020\006\022\034\n\030ERROR_PLAYER_UNAVAILABLE\020\007\022" +
      "\037\n\033ERROR_PLAYER_NO_VALID_SLOTS\020\010\"\210\001\n$CMs" +
      "gDOTAFantasyTeamRosterSwapRequest\022\031\n\021fan" +
      "tasy_league_id\030\001 \001(\r\022\022\n\nteam_index\030\002 \001(\r" +
      "\022\021\n\ttimestamp\030\003 \001(\r\022\016\n\006slot_1\030\004 \001(\r\022\016\n\006s" +
      "lot_2\030\005 \001(\r\"\356\001\n%CMsgDOTAFantasyTeamRoste" +
      "rSwapResponse\022G\n\006result\030\001 \001(\0162..CMsgDOTA" +
      "FantasyTeamRosterSwapResponse.EResult:\007S",
      "UCCESS\"|\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_" +
      "UNSPECIFIED\020\001\022\035\n\031ERROR_OWNER_NOT_IN_LEAG" +
      "UE\020\002\022\027\n\023ERROR_SLOTS_INVALID\020\003\022\025\n\021ERROR_S" +
      "LOT_LOCKED\020\004\"\211\001\n\'CMsgDOTAFantasyTeamRost" +
      "erAddDropRequest\022\031\n\021fantasy_league_id\030\001 " +
      "\001(\r\022\022\n\nteam_index\030\002 \001(\r\022\026\n\016add_account_i" +
      "d\030\005 \001(\r\022\027\n\017drop_account_id\030\006 \001(\r\"\244\002\n(CMs" +
      "gDOTAFantasyTeamRosterAddDropResponse\022J\n" +
      "\006result\030\001 \001(\01621.CMsgDOTAFantasyTeamRoste" +
      "rAddDropResponse.EResult:\007SUCCESS\"\253\001\n\007ER",
      "esult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020" +
      "\001\022\035\n\031ERROR_OWNER_NOT_IN_LEAGUE\020\002\022\036\n\032ERRO" +
      "R_PLAYER_NOT_AVAILABLE\020\003\022\034\n\030ERROR_PLAYER" +
      "_NOT_ON_TEAM\020\004\022\037\n\033ERROR_TRADE_ALREADY_PE" +
      "NDING\020\005\"=\n CMsgDOTAFantasyTeamTradesRequ" +
      "est\022\031\n\021fantasy_league_id\030\001 \001(\r\"\211\003\n!CMsgD" +
      "OTAFantasyTeamTradesResponse\022C\n\006result\030\001" +
      " \001(\0162*.CMsgDOTAFantasyTeamTradesResponse" +
      ".EResult:\007SUCCESS\0228\n\006trades\030\002 \003(\0132(.CMsg" +
      "DOTAFantasyTeamTradesResponse.Trade\032\234\001\n\005",
      "Trade\022\021\n\ttimestamp\030\001 \001(\r\022\032\n\022owner_accoun" +
      "t_id_1\030\002 \001(\r\022\032\n\022owner_account_id_2\030\003 \001(\r" +
      "\022\033\n\023player_account_id_1\030\004 \001(\r\022\033\n\023player_" +
      "account_id_2\030\005 \001(\r\022\016\n\006status\030\006 \001(\r\"F\n\007ER" +
      "esult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020" +
      "\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"\212\001\n%CMsgDOTAF" +
      "antasyTeamTradeCancelRequest\022\031\n\021fantasy_" +
      "league_id\030\001 \001(\r\022\024\n\014team_index_1\030\003 \001(\r\022\032\n" +
      "\022owner_account_id_2\030\004 \001(\r\022\024\n\014team_index_" +
      "2\030\005 \001(\r\"\316\001\n&CMsgDOTAFantasyTeamTradeCanc",
      "elResponse\022H\n\006result\030\001 \001(\0162/.CMsgDOTAFan" +
      "tasyTeamTradeCancelResponse.EResult:\007SUC" +
      "CESS\"Z\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UN" +
      "SPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\022\022\n\016" +
      "ERROR_NO_TRADE\020\003\"~\n CMsgDOTAFantasyTeamR" +
      "osterRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022" +
      "\022\n\nteam_index\030\002 \001(\r\022\030\n\020owner_account_id\030" +
      "\003 \001(\r\022\021\n\ttimestamp\030\004 \001(\r\"\202\002\n!CMsgDOTAFan" +
      "tasyTeamRosterResponse\022C\n\006result\030\001 \001(\0162*" +
      ".CMsgDOTAFantasyTeamRosterResponse.EResu",
      "lt:\007SUCCESS\022\032\n\022player_account_ids\030\002 \003(\r\022" +
      "\025\n\rplayer_locked\030\003 \003(\010\"e\n\007EResult\022\013\n\007SUC" +
      "CESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_N" +
      "O_PERMISSION\020\002\022\035\n\031ERROR_OWNER_NOT_IN_LEA" +
      "GUE\020\003\"G\n*CMsgDOTAFantasyPlayerHisoricalS" +
      "tatsRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\"\201" +
      "\006\n+CMsgDOTAFantasyPlayerHisoricalStatsRe" +
      "sponse\022M\n\006result\030\001 \001(\01624.CMsgDOTAFantasy" +
      "PlayerHisoricalStatsResponse.EResult:\007SU" +
      "CCESS\022G\n\005stats\030\002 \003(\01328.CMsgDOTAFantasyPl",
      "ayerHisoricalStatsResponse.PlayerStats\032\201" +
      "\002\n\026PlayerScoreAccumulator\022\017\n\007matches\030\001 \001" +
      "(\r\022\016\n\006levels\030\002 \001(\002\022\r\n\005kills\030\003 \001(\002\022\016\n\006dea" +
      "ths\030\004 \001(\002\022\017\n\007assists\030\005 \001(\002\022\021\n\tlast_hits\030" +
      "\006 \001(\002\022\016\n\006denies\030\007 \001(\002\022\013\n\003gpm\030\010 \001(\002\022\014\n\004xp" +
      "pm\030\t \001(\002\022\r\n\005stuns\030\n \001(\002\022\017\n\007healing\030\013 \001(\002" +
      "\022\023\n\013tower_kills\030\014 \001(\002\022\024\n\014roshan_kills\030\r " +
      "\001(\002\022\r\n\005score\030\016 \001(\002\032\355\001\n\013PlayerStats\022\022\n\nac" +
      "count_id\030\001 \001(\r\022\r\n\005weeks\030\002 \001(\r\022Z\n\rstats_p" +
      "remium\030\004 \001(\0132C.CMsgDOTAFantasyPlayerHiso",
      "ricalStatsResponse.PlayerScoreAccumulato" +
      "r\022_\n\022stats_professional\030\005 \001(\0132C.CMsgDOTA" +
      "FantasyPlayerHisoricalStatsResponse.Play" +
      "erScoreAccumulator\"F\n\007EResult\022\013\n\007SUCCESS" +
      "\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PE" +
      "RMISSION\020\002\"G\n\031CMsgDOTAFantasyMessageAdd\022" +
      "\031\n\021fantasy_league_id\030\001 \001(\r\022\017\n\007message\030\002 " +
      "\001(\t\"g\n\036CMsgDOTAFantasyMessagesRequest\022\031\n" +
      "\021fantasy_league_id\030\001 \001(\r\022\025\n\rstart_messag" +
      "e\030\002 \001(\r\022\023\n\013end_message\030\003 \001(\r\"\335\002\n\037CMsgDOT",
      "AFantasyMessagesResponse\022A\n\006result\030\001 \001(\016" +
      "2(.CMsgDOTAFantasyMessagesResponse.EResu" +
      "lt:\007SUCCESS\022:\n\010messages\030\002 \003(\0132(.CMsgDOTA" +
      "FantasyMessagesResponse.Message\022\032\n\022num_t" +
      "otal_messages\030\003 \001(\r\032W\n\007Message\022\022\n\nmessag" +
      "e_id\030\001 \001(\r\022\017\n\007message\030\002 \001(\t\022\031\n\021author_ac" +
      "count_id\030\003 \001(\r\022\014\n\004time\030\004 \001(\r\"F\n\007EResult\022" +
      "\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023E" +
      "RROR_NO_PERMISSION\020\002\"e\n\032CMsgDOTAFantasyR" +
      "emoveOwner\022\031\n\021fantasy_league_id\030\001 \001(\r\022\030\n",
      "\020owner_account_id\030\002 \001(\r\022\022\n\nteam_index\030\003 " +
      "\001(\r\"\343\001\n\"CMsgDOTAFantasyRemoveOwnerRespon" +
      "se\022D\n\006result\030\001 \001(\0162+.CMsgDOTAFantasyRemo" +
      "veOwnerResponse.EResult:\007SUCCESS\"w\n\007ERes" +
      "ult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022" +
      "\027\n\023ERROR_NO_PERMISSION\020\002\022\027\n\023ERROR_LEAGUE" +
      "_LOCKED\020\003\022\026\n\022ERROR_NOT_A_MEMBER\020\004\"C\n&CMs" +
      "gDOTAFantasyScheduledMatchesRequest\022\031\n\021f" +
      "antasy_league_id\030\001 \001(\r\"\315\002\n\'CMsgDOTAFanta" +
      "syScheduledMatchesResponse\022I\n\006result\030\001 \001",
      "(\01620.CMsgDOTAFantasyScheduledMatchesResp" +
      "onse.EResult:\007SUCCESS\022Y\n\024scheduled_match" +
      "_days\030\002 \003(\0132;.CMsgDOTAFantasyScheduledMa" +
      "tchesResponse.ScheduledMatchDays\032M\n\022Sche" +
      "duledMatchDays\022\021\n\ttimestamp\030\001 \001(\r\022\020\n\010tea" +
      "m_ids\030\002 \003(\r\022\022\n\nleague_ids\030\003 \003(\r\"-\n\007EResu" +
      "lt\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\"Z" +
      "\n!CMsgDOTAFantasyLeaveLeagueRequest\022\031\n\021f" +
      "antasy_league_id\030\001 \001(\r\022\032\n\022fantasy_team_i" +
      "ndex\030\002 \001(\r\"\343\001\n\"CMsgDOTAFantasyLeaveLeagu",
      "eResponse\022D\n\006result\030\001 \001(\0162+.CMsgDOTAFant" +
      "asyLeaveLeagueResponse.EResult:\007SUCCESS\"" +
      "w\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECI" +
      "FIED\020\001\022\024\n\020ERROR_NOT_MEMBER\020\002\022\032\n\026ERROR_LE" +
      "AGUE_NOT_FOUND\020\003\022\026\n\022ERROR_DRAFT_ACTIVE\020\004" +
      "\"\206\001\n(CMsgDOTAFantasyPlayerScoreDetailsRe" +
      "quest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\031\n\021play" +
      "er_account_id\030\002 \001(\r\022\022\n\nstart_time\030\003 \001(\r\022" +
      "\020\n\010end_time\030\004 \001(\r\"\260\004\n)CMsgDOTAFantasyPla" +
      "yerScoreDetailsResponse\022K\n\006result\030\001 \001(\0162",
      "2.CMsgDOTAFantasyPlayerScoreDetailsRespo" +
      "nse.EResult:\007SUCCESS\022H\n\004data\030\002 \003(\0132:.CMs" +
      "gDOTAFantasyPlayerScoreDetailsResponse.P" +
      "layerMatchData\032\246\002\n\017PlayerMatchData\022\020\n\010ma" +
      "tch_id\030\001 \001(\004\022\021\n\tseries_id\030\002 \001(\r\022\022\n\nserie" +
      "s_num\030\003 \001(\r\022\023\n\013series_type\030\004 \001(\r\022\023\n\013leag" +
      "ue_tier\030\005 \001(\r\022\021\n\tleague_id\030\006 \001(\r\022\030\n\020oppo" +
      "sing_team_id\030\007 \001(\r\022\032\n\022opposing_team_logo" +
      "\030\010 \001(\004\022\032\n\022opposing_team_name\030\t \001(\t\022(\n\005st" +
      "ats\030\n \001(\0132\031.CMsgFantasyLeagueScoring\022\020\n\010",
      "owned_by\030\013 \001(\r\022\017\n\007benched\030\014 \001(\010\"C\n\007EResu" +
      "lt\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\024" +
      "\n\020ERROR_NOT_MEMBER\020\002\"\231\t\n\022CMsgDOTATournam" +
      "ent\022\'\n\005teams\030\001 \003(\0132\030.CMsgDOTATournament." +
      "Team\022\'\n\005games\030\002 \003(\0132\030.CMsgDOTATournament" +
      ".Game\022\013\n\003gid\030\003 \001(\004\022\025\n\rtournament_id\030\004 \001(" +
      "\r\022D\n\017tournament_type\030\005 \001(\0162\020.ETournament" +
      "Type:\031k_ETournamentType_Unknown\022M\n\023tourn" +
      "ament_template\030\006 \001(\0162\024.ETournamentTempla" +
      "te:\032k_ETournamentTemplate_None\022\021\n\tleague",
      "_id\030\007 \001(\r\022\022\n\nstart_time\030\010 \001(\r\022<\n\005state\030\t" +
      " \001(\0162\021.ETournamentState:\032k_ETournamentSt" +
      "ate_Unknown\022\'\n\005nodes\030\n \003(\0132\030.CMsgDOTATou" +
      "rnament.Node\032\242\001\n\004Team\022\017\n\007team_id\030\001 \001(\r\022\021" +
      "\n\tteam_name\030\002 \001(\t\022\023\n\013team_abbrev\030\003 \001(\t\022\023" +
      "\n\007players\030\004 \003(\rB\002\020\001\022\014\n\004seed\030\005 \001(\r\022\021\n\ttea" +
      "m_logo\030\006 \001(\004\022\024\n\014country_code\030\007 \001(\t\022\025\n\rno" +
      "de_or_state\030\010 \001(\r\032\320\002\n\004Game\022\017\n\007game_id\030\001 " +
      "\001(\r\022\024\n\014good_team_id\030\002 \001(\r\022\023\n\013bad_team_id" +
      "\030\003 \001(\r\022\026\n\016good_team_seed\030\014 \001(\r\022\025\n\rbad_te",
      "am_seed\030\r \001(\r\022\020\n\010lobby_id\030\004 \001(\006\022\020\n\010match" +
      "_id\030\005 \001(\004\022\021\n\tgame_name\030\006 \001(\t\022\023\n\013live_str" +
      "eam\030\007 \001(\010\022\017\n\007message\030\t \001(\t\022\025\n\rresults_fi" +
      "nal\030\n \001(\010\022D\n\005state\030\016 \001(\0162\025.ETournamentGa" +
      "meState:\036k_ETournamentGameState_Unknown\022" +
      "\017\n\007node_id\030\017 \001(\r\022\022\n\nstart_time\030\020 \001(\r\032\361\001\n" +
      "\004Node\022\017\n\007node_id\030\001 \001(\r\022\023\n\013team_seed_a\030\002 " +
      "\001(\r\022\023\n\013team_seed_b\030\003 \001(\r\022\023\n\013winner_node\030" +
      "\004 \001(\r\022\022\n\nloser_node\030\005 \001(\r\022\023\n\013series_type" +
      "\030\007 \001(\r\022I\n\nnode_state\030\010 \001(\0162\025.ETournament",
      "NodeState:\036k_ETournamentNodeState_Unknow" +
      "n\022\021\n\tseries_id\030\t \001(\r\022\022\n\nstart_time\030\020 \001(\r" +
      "\"Q\n\031CMsgDOTATournamentRequest\022\025\n\rtournam" +
      "ent_id\030\001 \001(\r\022\035\n\025client_tournament_gid\030\002 " +
      "\001(\004\"X\n\032CMsgDOTATournamentResponse\022\021\n\006res" +
      "ult\030\001 \001(\r:\0012\022\'\n\ntournament\030\002 \001(\0132\023.CMsgD" +
      "OTATournament\"E\n\033CMsgDOTAClearTournament" +
      "Game\022\025\n\rtournament_id\030\001 \001(\r\022\017\n\007game_id\030\002" +
      " \001(\r\"Z\n\035CMsgDOTAPassportVoteTeamGuess\022\021\n" +
      "\tleague_id\030\001 \001(\r\022\021\n\twinner_id\030\002 \001(\r\022\023\n\013r",
      "unnerup_id\030\003 \001(\r\"\221\001\n$CMsgDOTAPassportVot" +
      "eGenericSelection\022V\n\017selection_index\030\001 \001" +
      "(\0162\".DOTA_2013PassportSelectionIndices:\031" +
      "PP13_SEL_ALLSTAR_PLAYER_0\022\021\n\tselection\030\002" +
      " \001(\r\"F\n\035CMsgDOTAPassportStampedPlayer\022\020\n" +
      "\010steam_id\030\001 \001(\004\022\023\n\013stamp_level\030\002 \001(\r\";\n#" +
      "CMsgDOTAPassportPlayerCardChallenge\022\024\n\014c" +
      "hallenge_id\030\001 \001(\r\"\214\002\n\024CMsgDOTAPassportVo" +
      "te\0222\n\nteam_votes\030\001 \003(\0132\036.CMsgDOTAPasspor" +
      "tVoteTeamGuess\022A\n\022generic_selections\030\002 \003",
      "(\0132%.CMsgDOTAPassportVoteGenericSelectio" +
      "n\0227\n\017stamped_players\030\003 \003(\0132\036.CMsgDOTAPas" +
      "sportStampedPlayer\022D\n\026player_card_challe" +
      "nges\030\004 \003(\0132$.CMsgDOTAPassportPlayerCardC" +
      "hallenge\"-\n\027CMsgPassportDataRequest\022\022\n\na" +
      "ccount_id\030\001 \001(\r\"\317\004\n\030CMsgPassportDataResp" +
      "onse\022\022\n\naccount_id\030\001 \001(\r\022\021\n\006result\030\002 \001(\r" +
      ":\0012\022*\n\rinternational\030\005 \001(\0132\023.CMsgDOTATou" +
      "rnament\022(\n east_qualifiers_predict_end_t" +
      "ime\030\007 \001(\r\022(\n west_qualifiers_predict_end",
      "_time\030\010 \001(\r\022\036\n\026allstar_match_end_time\030\t " +
      "\001(\r\022-\n\016league_guesses\030\006 \001(\0132\025.CMsgDOTAPa" +
      "ssportVote\022&\n\036east_qualifiers_winner_tea" +
      "m_id\030\n \001(\r\022)\n!east_qualifiers_runner_up_" +
      "team_id\030\013 \001(\r\022&\n\036west_qualifiers_winner_" +
      "team_id\030\014 \001(\r\022)\n!west_qualifiers_runner_" +
      "up_team_id\030\r \001(\r\022\030\n\020passports_bought\030\016 \001" +
      "(\r\022\035\n\025original_purchaser_id\030\017 \001(\r\022\032\n\022fan" +
      "tasy_team_count\030\020 \001(\r\022\036\n\026fantasy_teamexp" +
      "iration\030\021 \001(\r\022\"\n\032fantasy_teams_will_lock",
      "_at\030\022 \001(\r*\320\002\n\024ETournamentGameState\022\"\n\036k_" +
      "ETournamentGameState_Unknown\020\000\022$\n k_ETou" +
      "rnamentGameState_Scheduled\020\001\0221\n-k_ETourn" +
      "amentGameState_WaitingForLobbyToStart\020\002\022" +
      "!\n\035k_ETournamentGameState_Active\020\003\022&\n\"k_" +
      "ETournamentGameState_DireVictory\020\004\022%\n!k_" +
      "ETournamentGameState_RadVictory\020\005\022#\n\037k_E" +
      "TournamentGameState_Canceled\020\006\022$\n k_ETou" +
      "rnamentTeamState_NotNeeded\020\007*\347\006\n\024ETourna" +
      "mentTeamState\022\"\n\036k_ETournamentTeamState_",
      "Unknown\020\000\022 \n\034k_ETournamentTeamState_Node" +
      "1\020\001\022#\n\036k_ETournamentTeamState_NodeMax\020\200\010" +
      "\022&\n!k_ETournamentTeamState_Eliminated\020\263m" +
      "\022%\n k_ETournamentTeamState_Forfeited\020\264m\022" +
      "\'\n\"k_ETournamentTeamState_Finished1st\020\231u" +
      "\022\'\n\"k_ETournamentTeamState_Finished2nd\020\232" +
      "u\022\'\n\"k_ETournamentTeamState_Finished3rd\020" +
      "\233u\022\'\n\"k_ETournamentTeamState_Finished4th" +
      "\020\234u\022\'\n\"k_ETournamentTeamState_Finished5t" +
      "h\020\235u\022\'\n\"k_ETournamentTeamState_Finished6",
      "th\020\236u\022\'\n\"k_ETournamentTeamState_Finished" +
      "7th\020\237u\022\'\n\"k_ETournamentTeamState_Finishe" +
      "d8th\020\240u\022\'\n\"k_ETournamentTeamState_Finish" +
      "ed9th\020\241u\022(\n#k_ETournamentTeamState_Finis" +
      "hed10th\020\242u\022(\n#k_ETournamentTeamState_Fin" +
      "ished11th\020\243u\022(\n#k_ETournamentTeamState_F" +
      "inished12th\020\244u\022(\n#k_ETournamentTeamState" +
      "_Finished13th\020\245u\022(\n#k_ETournamentTeamSta" +
      "te_Finished14th\020\246u\022(\n#k_ETournamentTeamS" +
      "tate_Finished15th\020\247u\022(\n#k_ETournamentTea",
      "mState_Finished16th\020\250u*\330\001\n\020ETournamentSt" +
      "ate\022\036\n\032k_ETournamentState_Unknown\020\000\022\034\n\030k" +
      "_ETournamentState_Setup\020\001\022 \n\034k_ETourname" +
      "ntState_Scheduled\020\002\022!\n\035k_ETournamentStat" +
      "e_InProgress\020\003\022 \n\034k_ETournamentState_Com" +
      "pleted\020\004\022\037\n\033k_ETournamentState_Canceled\020" +
      "\005*\251\002\n\024ETournamentNodeState\022\"\n\036k_ETournam" +
      "entNodeState_Unknown\020\000\022.\n*k_ETournamentN" +
      "odeState_TeamsNotYetAssigned\020\001\022)\n%k_ETou" +
      "rnamentNodeState_InBetweenGames\020\002\022)\n%k_E",
      "TournamentNodeState_GameInProgress\020\003\022 \n\034" +
      "k_ETournamentNodeState_A_Won\020\004\022 \n\034k_ETou" +
      "rnamentNodeState_B_Won\020\005\022#\n\037k_ETournamen" +
      "tNodeState_Canceled\020\006*\243\025\n!DOTA_2013Passp" +
      "ortSelectionIndices\022\035\n\031PP13_SEL_ALLSTAR_" +
      "PLAYER_0\020\000\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_1\020" +
      "\001\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_2\020\002\022\035\n\031PP13" +
      "_SEL_ALLSTAR_PLAYER_3\020\003\022\035\n\031PP13_SEL_ALLS" +
      "TAR_PLAYER_4\020\004\022\035\n\031PP13_SEL_ALLSTAR_PLAYE" +
      "R_5\020\005\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_6\020\006\022\035\n\031",
      "PP13_SEL_ALLSTAR_PLAYER_7\020\007\022\035\n\031PP13_SEL_" +
      "ALLSTAR_PLAYER_8\020\010\022\035\n\031PP13_SEL_ALLSTAR_P" +
      "LAYER_9\020\t\022\034\n\030PP13_SEL_QUALPRED_WEST_0\020\n\022" +
      "\034\n\030PP13_SEL_QUALPRED_WEST_1\020\013\022\034\n\030PP13_SE" +
      "L_QUALPRED_WEST_2\020\014\022\034\n\030PP13_SEL_QUALPRED" +
      "_WEST_3\020\r\022\034\n\030PP13_SEL_QUALPRED_WEST_4\020\016\022" +
      "\034\n\030PP13_SEL_QUALPRED_WEST_5\020\017\022\034\n\030PP13_SE" +
      "L_QUALPRED_WEST_6\020\020\022\034\n\030PP13_SEL_QUALPRED" +
      "_WEST_7\020\021\022\034\n\030PP13_SEL_QUALPRED_WEST_8\020\022\022" +
      "\034\n\030PP13_SEL_QUALPRED_WEST_9\020\023\022\035\n\031PP13_SE",
      "L_QUALPRED_WEST_10\020\024\022\035\n\031PP13_SEL_QUALPRE" +
      "D_WEST_11\020\025\022\035\n\031PP13_SEL_QUALPRED_WEST_12" +
      "\020\026\022\035\n\031PP13_SEL_QUALPRED_WEST_13\020\027\022\035\n\031PP1" +
      "3_SEL_QUALPRED_WEST_14\020\030\022\034\n\030PP13_SEL_QUA" +
      "LPRED_EAST_0\020\031\022\034\n\030PP13_SEL_QUALPRED_EAST" +
      "_1\020\032\022\034\n\030PP13_SEL_QUALPRED_EAST_2\020\033\022\034\n\030PP" +
      "13_SEL_QUALPRED_EAST_3\020\034\022\034\n\030PP13_SEL_QUA" +
      "LPRED_EAST_4\020\035\022\034\n\030PP13_SEL_QUALPRED_EAST" +
      "_5\020\036\022\034\n\030PP13_SEL_QUALPRED_EAST_6\020\037\022\034\n\030PP" +
      "13_SEL_QUALPRED_EAST_7\020 \022\034\n\030PP13_SEL_QUA",
      "LPRED_EAST_8\020!\022\034\n\030PP13_SEL_QUALPRED_EAST" +
      "_9\020\"\022\035\n\031PP13_SEL_QUALPRED_EAST_10\020#\022\035\n\031P" +
      "P13_SEL_QUALPRED_EAST_11\020$\022\035\n\031PP13_SEL_Q" +
      "UALPRED_EAST_12\020%\022\035\n\031PP13_SEL_QUALPRED_E" +
      "AST_13\020&\022\035\n\031PP13_SEL_QUALPRED_EAST_14\020\'\022" +
      "\031\n\025PP13_SEL_TEAMCUP_TEAM\020(\022\033\n\027PP13_SEL_T" +
      "EAMCUP_PLAYER\020)\022\036\n\032PP13_SEL_TEAMCUP_TEAM" +
      "_LOCK\020*\022 \n\034PP13_SEL_TEAMCUP_PLAYER_LOCK\020" +
      "+\022\030\n\024PP13_SEL_EVENTPRED_0\020,\022\030\n\024PP13_SEL_" +
      "EVENTPRED_1\020-\022\030\n\024PP13_SEL_EVENTPRED_2\020.\022",
      "\030\n\024PP13_SEL_EVENTPRED_3\020/\022\030\n\024PP13_SEL_EV" +
      "ENTPRED_4\0200\022\030\n\024PP13_SEL_EVENTPRED_5\0201\022\030\n" +
      "\024PP13_SEL_EVENTPRED_6\0202\022\030\n\024PP13_SEL_EVEN" +
      "TPRED_7\0203\022\030\n\024PP13_SEL_EVENTPRED_8\0204\022\030\n\024P" +
      "P13_SEL_EVENTPRED_9\0205\022\031\n\025PP13_SEL_EVENTP" +
      "RED_10\0206\022\031\n\025PP13_SEL_EVENTPRED_11\0207\022\031\n\025P" +
      "P13_SEL_EVENTPRED_12\0208\022\031\n\025PP13_SEL_EVENT" +
      "PRED_13\0209\022\031\n\025PP13_SEL_EVENTPRED_14\020:\022\031\n\025" +
      "PP13_SEL_EVENTPRED_15\020;\022\031\n\025PP13_SEL_EVEN" +
      "TPRED_16\020<\022\031\n\025PP13_SEL_EVENTPRED_17\020=\022\031\n",
      "\025PP13_SEL_EVENTPRED_18\020>\022\031\n\025PP13_SEL_EVE" +
      "NTPRED_19\020?\022\031\n\025PP13_SEL_EVENTPRED_20\020@\022\031" +
      "\n\025PP13_SEL_EVENTPRED_21\020A\022\031\n\025PP13_SEL_EV" +
      "ENTPRED_22\020B\022\031\n\025PP13_SEL_EVENTPRED_23\020C\022" +
      "\031\n\025PP13_SEL_EVENTPRED_24\020D\022\031\n\025PP13_SEL_E" +
      "VENTPRED_25\020E\022\031\n\025PP13_SEL_EVENTPRED_26\020F" +
      "\022\031\n\025PP13_SEL_EVENTPRED_27\020G\022\031\n\025PP13_SEL_" +
      "EVENTPRED_28\020H\022\031\n\025PP13_SEL_EVENTPRED_29\020" +
      "I\022\031\n\025PP13_SEL_EVENTPRED_30\020J\022\031\n\025PP13_SEL" +
      "_EVENTPRED_31\020K\022\031\n\025PP13_SEL_EVENTPRED_32",
      "\020L\022\031\n\025PP13_SEL_EVENTPRED_33\020M\022\031\n\025PP13_SE" +
      "L_EVENTPRED_34\020N\022\031\n\025PP13_SEL_EVENTPRED_3" +
      "5\020O\022\031\n\025PP13_SEL_EVENTPRED_36\020P\022\031\n\025PP13_S" +
      "EL_EVENTPRED_37\020Q\022\031\n\025PP13_SEL_EVENTPRED_" +
      "38\020R\022\031\n\025PP13_SEL_EVENTPRED_39\020S\022\031\n\025PP13_" +
      "SEL_EVENTPRED_40\020T\022\031\n\025PP13_SEL_EVENTPRED" +
      "_41\020U\022\031\n\025PP13_SEL_EVENTPRED_42\020V\022\031\n\025PP13" +
      "_SEL_EVENTPRED_43\020W\022\023\n\017PP13_SEL_SOLO_0\020X" +
      "\022\023\n\017PP13_SEL_SOLO_1\020Y\022\023\n\017PP13_SEL_SOLO_2" +
      "\020Z\022\023\n\017PP13_SEL_SOLO_3\020[\022\023\n\017PP13_SEL_SOLO",
      "_4\020\\\022\023\n\017PP13_SEL_SOLO_5\020]\022\023\n\017PP13_SEL_SO" +
      "LO_6\020^\022\023\n\017PP13_SEL_SOLO_7\020_B?\n(telekines" +
      "is.message.proto.generated.dotaB\016DotaGC_" +
      "FantasyH\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          telekinesis.message.proto.generated.dota.DOTAGC_Common.getDescriptor(),
        }, assigner);
    internal_static_CMsgGCPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgGCPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_descriptor,
        new java.lang.String[] { "PlayerInfos", "Leaderboards", });
    internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor =
      internal_static_CMsgGCPlayerInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor,
        new java.lang.String[] { "AccountId", "Name", "CountryCode", "FantasyRole", "TeamId", "TeamName", "TeamTag", "Sponsor", "IsLocked", "IsPro", "LockedUntil", });
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor =
      internal_static_CMsgGCPlayerInfo_descriptor.getNestedTypes().get(1);
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor,
        new java.lang.String[] { "Division", "AccountIds", });
    internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor,
        new java.lang.String[] { "LeagueName", "LeagueLogo", "SelectionMode", "TeamCount", });
    internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgFantasyLeagueScoring_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgFantasyLeagueScoring_descriptor,
        new java.lang.String[] { "Level", "Kills", "Deaths", "Assists", "LastHits", "Denies", "Gpm", "Xppm", "Stuns", "Healing", "TowerKills", "RoshanKills", "MultiplierPremium", "MultiplierProfessional", });
    internal_static_CMsgDOTAFantasyLeagueInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfo_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "CommissionerAccountId", "FantasyLeagueName", "SelectionMode", "TeamCount", "Logo", "Scoring", "DraftTime", "DraftPickTime", "SeasonStart", "SeasonLength", "VetoVotes", "Acquisitions", "Slot1", "Slot2", "Slot3", "Slot4", "Slot5", "BenchSlots", "OwnerInfo", "Players", "TimeZone", "Season", "Password", });
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor =
      internal_static_CMsgDOTAFantasyLeagueInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor,
        new java.lang.String[] { "OwnerAccountId", "LeftLeague", "PlayerAccountId", });
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "EditInfo", });
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", });
    internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueName", "CommissionerName", });
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "WeeklyMatchups", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor =
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor,
        new java.lang.String[] { "OwnerAccountId1", "OwnerAccountId2", "Score1", "Score2", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor =
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor,
        new java.lang.String[] { "Matchup", "StartTime", "EndTime", });
    internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "TeamName", "TeamLogo", });
    internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor,
        new java.lang.String[] { "OwnerAccountId", });
    internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_CMsgDOTAFantasyTeamInfo_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfo_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "TeamName", "TeamLogo", "Wins", "Losses", "CurrentRoster", });
    internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "FilterMatchId", "FilterStartTime", "FilterEndTime", "IncludeBench", });
    internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyTeamScore", "FantasyPlayerScore", });
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor =
      internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor,
        new java.lang.String[] { "AccountId", "Score", });
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Count", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", "FilterInHall", });
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor,
        new java.lang.String[] { "Result", "TeamScores", });
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor =
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "FantasyTeamLogo", "OwnerName", "FantasyTeamName", "Score", "ScoreAgainst", "Wins", "Losses", "Streak", });
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "PlayerAccountId", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", });
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "PlayerAccountId", "PlayerName", "Score", });
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Count", "Role", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", });
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "Role", "PlayerScores", });
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor =
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor,
        new java.lang.String[] { "PlayerAccountId", "PlayerName", "Score", });
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor,
        new java.lang.String[] { "Msg", });
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor,
        new java.lang.String[] { "SeasonId", "FantasyLeagueName", "Password", "TeamName", "Logo", "TicketItemId", });
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", "TeamName", "Logo", "TicketItemId", });
    internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyTeamIndex", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", "InviteChange", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor =
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor,
        new java.lang.String[] { "AccountId", "Invited", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "DraftOrder", "CurrentPick", "TimeRemaining", "PendingResume", "Completed", "AvailablePlayers", });
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "PlayerAccountId", });
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "Timestamp", "Slot1", "Slot2", });
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "AddAccountId", "DropAccountId", });
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor,
        new java.lang.String[] { "Result", "Trades", });
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor =
      internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor,
        new java.lang.String[] { "Timestamp", "OwnerAccountId1", "OwnerAccountId2", "PlayerAccountId1", "PlayerAccountId2", "Status", });
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex1", "OwnerAccountId2", "TeamIndex2", });
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "OwnerAccountId", "Timestamp", });
    internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor,
        new java.lang.String[] { "Result", "PlayerAccountIds", "PlayerLocked", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor,
        new java.lang.String[] { "Result", "Stats", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor =
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor,
        new java.lang.String[] { "Matches", "Levels", "Kills", "Deaths", "Assists", "LastHits", "Denies", "Gpm", "Xppm", "Stuns", "Healing", "TowerKills", "RoshanKills", "Score", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor =
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor,
        new java.lang.String[] { "AccountId", "Weeks", "StatsPremium", "StatsProfessional", });
    internal_static_CMsgDOTAFantasyMessageAdd_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessageAdd_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Message", });
    internal_static_CMsgDOTAFantasyMessagesRequest_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "StartMessage", "EndMessage", });
    internal_static_CMsgDOTAFantasyMessagesResponse_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesResponse_descriptor,
        new java.lang.String[] { "Result", "Messages", "NumTotalMessages", });
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor =
      internal_static_CMsgDOTAFantasyMessagesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor,
        new java.lang.String[] { "MessageId", "Message", "AuthorAccountId", "Time", });
    internal_static_CMsgDOTAFantasyRemoveOwner_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyRemoveOwner_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "TeamIndex", });
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor,
        new java.lang.String[] { "Result", "ScheduledMatchDays", });
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor =
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor,
        new java.lang.String[] { "Timestamp", "TeamIds", "LeagueIds", });
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "FantasyTeamIndex", });
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "PlayerAccountId", "StartTime", "EndTime", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor,
        new java.lang.String[] { "Result", "Data", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor =
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor,
        new java.lang.String[] { "MatchId", "SeriesId", "SeriesNum", "SeriesType", "LeagueTier", "LeagueId", "OpposingTeamId", "OpposingTeamLogo", "OpposingTeamName", "Stats", "OwnedBy", "Benched", });
    internal_static_CMsgDOTATournament_descriptor =
      getDescriptor().getMessageTypes().get(62);
    internal_static_CMsgDOTATournament_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_descriptor,
        new java.lang.String[] { "Teams", "Games", "Gid", "TournamentId", "TournamentType", "TournamentTemplate", "LeagueId", "StartTime", "State", "Nodes", });
    internal_static_CMsgDOTATournament_Team_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournament_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Team_descriptor,
        new java.lang.String[] { "TeamId", "TeamName", "TeamAbbrev", "Players", "Seed", "TeamLogo", "CountryCode", "NodeOrState", });
    internal_static_CMsgDOTATournament_Game_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournament_Game_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Game_descriptor,
        new java.lang.String[] { "GameId", "GoodTeamId", "BadTeamId", "GoodTeamSeed", "BadTeamSeed", "LobbyId", "MatchId", "GameName", "LiveStream", "Message", "ResultsFinal", "State", "NodeId", "StartTime", });
    internal_static_CMsgDOTATournament_Node_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTATournament_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Node_descriptor,
        new java.lang.String[] { "NodeId", "TeamSeedA", "TeamSeedB", "WinnerNode", "LoserNode", "SeriesType", "NodeState", "SeriesId", "StartTime", });
    internal_static_CMsgDOTATournamentRequest_descriptor =
      getDescriptor().getMessageTypes().get(63);
    internal_static_CMsgDOTATournamentRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournamentRequest_descriptor,
        new java.lang.String[] { "TournamentId", "ClientTournamentGid", });
    internal_static_CMsgDOTATournamentResponse_descriptor =
      getDescriptor().getMessageTypes().get(64);
    internal_static_CMsgDOTATournamentResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournamentResponse_descriptor,
        new java.lang.String[] { "Result", "Tournament", });
    internal_static_CMsgDOTAClearTournamentGame_descriptor =
      getDescriptor().getMessageTypes().get(65);
    internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAClearTournamentGame_descriptor,
        new java.lang.String[] { "TournamentId", "GameId", });
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor =
      getDescriptor().getMessageTypes().get(66);
    internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor,
        new java.lang.String[] { "LeagueId", "WinnerId", "RunnerupId", });
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor =
      getDescriptor().getMessageTypes().get(67);
    internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor,
        new java.lang.String[] { "SelectionIndex", "Selection", });
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor =
      getDescriptor().getMessageTypes().get(68);
    internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportStampedPlayer_descriptor,
        new java.lang.String[] { "SteamId", "StampLevel", });
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor =
      getDescriptor().getMessageTypes().get(69);
    internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor,
        new java.lang.String[] { "ChallengeId", });
    internal_static_CMsgDOTAPassportVote_descriptor =
      getDescriptor().getMessageTypes().get(70);
    internal_static_CMsgDOTAPassportVote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVote_descriptor,
        new java.lang.String[] { "TeamVotes", "GenericSelections", "StampedPlayers", "PlayerCardChallenges", });
    internal_static_CMsgPassportDataRequest_descriptor =
      getDescriptor().getMessageTypes().get(71);
    internal_static_CMsgPassportDataRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgPassportDataRequest_descriptor,
        new java.lang.String[] { "AccountId", });
    internal_static_CMsgPassportDataResponse_descriptor =
      getDescriptor().getMessageTypes().get(72);
    internal_static_CMsgPassportDataResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgPassportDataResponse_descriptor,
        new java.lang.String[] { "AccountId", "Result", "International", "EastQualifiersPredictEndTime", "WestQualifiersPredictEndTime", "AllstarMatchEndTime", "LeagueGuesses", "EastQualifiersWinnerTeamId", "EastQualifiersRunnerUpTeamId", "WestQualifiersWinnerTeamId", "WestQualifiersRunnerUpTeamId", "PassportsBought", "OriginalPurchaserId", "FantasyTeamCount", "FantasyTeamexpiration", "FantasyTeamsWillLockAt", });
    telekinesis.message.proto.generated.dota.DOTAGC_Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
